/* Generated by Yosys 0.46 (git sha1 e97731b9dda91fa5fa53ed87df7c34163ba59a41, clang++ 17.0.6 -fPIC -O3) */

(* dynports =  1  *)
(* hdlname = "Systolic4x4" *)
(* src = "rtl/systolic4x4.v:1.1-143.10" *)
module \$paramod$d3d5788cdda5471de1680ab667385b769574627d\Systolic4x4 (clk, rst_n, start, A_in, B_in, done, C_out);
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0000_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0001_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0002_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0003_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0004_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0005_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0006_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0007_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0008_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0009_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0010_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0011_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0012_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0013_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0014_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0015_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0016_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0017_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0018_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0019_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0020_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0021_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0022_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [7:0] _0023_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire [31:0] _0024_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire _0025_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire _0026_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  (* src = "rtl/systolic4x4.v:21.45-21.49" *)
  input [127:0] A_in;
  wire [127:0] A_in;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \A_outs[0] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[10] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[11] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \A_outs[12] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[13] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[14] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[15] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[1] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[2] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[3] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \A_outs[4] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[5] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[6] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[7] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \A_outs[8] ;
  (* src = "rtl/systolic4x4.v:28.24-28.30" *)
  wire [7:0] \A_outs[9] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[0] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[10] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[11] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[12] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[13] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[14] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[15] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[16] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[17] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[18] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[19] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[1] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[20] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[21] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[22] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[23] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[24] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[25] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[26] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[27] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[28] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[29] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[2] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[30] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[31] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[3] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[4] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[5] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[6] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  wire [7:0] \A_shift[7] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[8] ;
  (* src = "rtl/systolic4x4.v:32.23-32.30" *)
  reg [7:0] \A_shift[9] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[0] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[10] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[11] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[12] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[13] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[14] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[15] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[1] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[2] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[3] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[4] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[5] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[6] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[7] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[8] ;
  (* src = "rtl/systolic4x4.v:26.24-26.31" *)
  wire [7:0] \A_wires[9] ;
  (* src = "rtl/systolic4x4.v:22.45-22.49" *)
  input [127:0] B_in;
  wire [127:0] B_in;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \B_outs[0] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[10] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[11] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[12] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[13] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[14] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[15] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \B_outs[1] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \B_outs[2] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \B_outs[3] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[4] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[5] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[6] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[7] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[8] ;
  (* src = "rtl/systolic4x4.v:29.24-29.30" *)
  wire [7:0] \B_outs[9] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[0] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[10] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[11] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[12] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[13] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[14] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[15] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[16] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[17] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[18] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[19] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[1] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[20] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[21] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[22] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[23] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[24] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[25] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[26] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[27] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[28] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[29] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[2] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[30] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  wire [7:0] \B_shift[31] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[3] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[4] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[5] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[6] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[7] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[8] ;
  (* src = "rtl/systolic4x4.v:33.23-33.30" *)
  reg [7:0] \B_shift[9] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[0] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[10] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[11] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[12] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[13] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[14] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[15] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[1] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[2] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[3] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[4] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[5] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[6] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[7] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[8] ;
  (* src = "rtl/systolic4x4.v:27.24-27.31" *)
  wire [7:0] \B_wires[9] ;
  (* src = "rtl/systolic4x4.v:24.50-24.55" *)
  output [511:0] C_out;
  reg [511:0] C_out;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[0] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[10] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[11] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[12] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[13] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[14] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[15] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[1] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[2] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[3] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[4] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[5] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[6] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[7] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[8] ;
  (* src = "rtl/systolic4x4.v:30.26-30.35" *)
  wire [31:0] \acc_wires[9] ;
  (* src = "rtl/systolic4x4.v:35.6-35.14" *)
  wire ce_local;
  (* src = "rtl/systolic4x4.v:18.12-18.15" *)
  input clk;
  wire clk;
  (* src = "rtl/systolic4x4.v:37.12-37.21" *)
  reg [31:0] cycle_cnt;
  (* src = "rtl/systolic4x4.v:23.12-23.16" *)
  output done;
  reg done;
  (* src = "rtl/systolic4x4.v:36.5-36.13" *)
  reg load_acc;
  (* src = "rtl/systolic4x4.v:19.12-19.17" *)
  input rst_n;
  wire rst_n;
  (* src = "rtl/systolic4x4.v:38.5-38.12" *)
  reg running;
  (* src = "rtl/systolic4x4.v:20.12-20.17" *)
  input start;
  wire start;
  assign _0034_ = ~(cycle_cnt[31] | cycle_cnt[30]);
  assign _0035_ = cycle_cnt[28] | cycle_cnt[29];
  assign _0036_ = _0034_ & ~(_0035_);
  assign _0037_ = cycle_cnt[26] | cycle_cnt[27];
  assign _0038_ = cycle_cnt[24] | cycle_cnt[25];
  assign _0039_ = _0038_ | _0037_;
  assign _0040_ = _0036_ & ~(_0039_);
  assign _0041_ = cycle_cnt[23] | cycle_cnt[22];
  assign _0042_ = cycle_cnt[21] | cycle_cnt[20];
  assign _0043_ = _0042_ | _0041_;
  assign _0044_ = cycle_cnt[19] | cycle_cnt[18];
  assign _0045_ = cycle_cnt[17] | cycle_cnt[16];
  assign _0046_ = _0045_ | _0044_;
  assign _0047_ = _0046_ | _0043_;
  assign _0048_ = _0040_ & ~(_0047_);
  assign _0049_ = cycle_cnt[15] | cycle_cnt[14];
  assign _0050_ = cycle_cnt[13] | cycle_cnt[12];
  assign _0051_ = _0050_ | _0049_;
  assign _0052_ = cycle_cnt[11] | cycle_cnt[10];
  assign _0053_ = cycle_cnt[9] | cycle_cnt[8];
  assign _0054_ = _0053_ | _0052_;
  assign _0055_ = _0054_ | _0051_;
  assign _0056_ = cycle_cnt[7] | cycle_cnt[6];
  assign _0057_ = cycle_cnt[4] | cycle_cnt[5];
  assign _0058_ = _0057_ | _0056_;
  assign _0059_ = cycle_cnt[2] | ~(cycle_cnt[3]);
  assign _0060_ = ~(cycle_cnt[1] & cycle_cnt[0]);
  assign _0061_ = _0060_ & ~(_0059_);
  assign _0062_ = cycle_cnt[3] & ~(_0061_);
  assign _0063_ = _0062_ | _0058_;
  assign _0064_ = _0063_ | _0055_;
  assign _0065_ = _0048_ & ~(_0064_);
  assign _0066_ = cycle_cnt[0] | ~(cycle_cnt[1]);
  assign _0067_ = _0066_ | _0059_;
  assign _0068_ = _0067_ | _0058_;
  assign _0069_ = _0068_ | _0055_;
  assign _0070_ = _0048_ & ~(_0069_);
  assign _0071_ = _0065_ & ~(_0070_);
  assign _0072_ = running & ~(_0071_);
  assign _0026_ = start & ~(running);
  assign _0025_ = _0072_ & ~(_0026_);
  assign _0073_ = ~(start | running);
  assign _0028_ = rst_n & ~(_0073_);
  assign _0019_[0] = _0026_ ? B_in[88] : \B_shift[24] [0];
  assign _0019_[1] = _0026_ ? B_in[89] : \B_shift[24] [1];
  assign _0019_[2] = _0026_ ? B_in[90] : \B_shift[24] [2];
  assign _0019_[3] = _0026_ ? B_in[91] : \B_shift[24] [3];
  assign _0019_[4] = _0026_ ? B_in[92] : \B_shift[24] [4];
  assign _0019_[5] = _0026_ ? B_in[93] : \B_shift[24] [5];
  assign _0019_[6] = _0026_ ? B_in[94] : \B_shift[24] [6];
  assign _0019_[7] = _0026_ ? B_in[95] : \B_shift[24] [7];
  assign _0017_[0] = _0026_ ? B_in[56] : \B_shift[20] [0];
  assign _0017_[1] = _0026_ ? B_in[57] : \B_shift[20] [1];
  assign _0017_[2] = _0026_ ? B_in[58] : \B_shift[20] [2];
  assign _0017_[3] = _0026_ ? B_in[59] : \B_shift[20] [3];
  assign _0017_[4] = _0026_ ? B_in[60] : \B_shift[20] [4];
  assign _0017_[5] = _0026_ ? B_in[61] : \B_shift[20] [5];
  assign _0017_[6] = _0026_ ? B_in[62] : \B_shift[20] [6];
  assign _0017_[7] = _0026_ ? B_in[63] : \B_shift[20] [7];
  assign _0014_[0] = _0026_ ? B_in[24] : \B_shift[16] [0];
  assign _0014_[1] = _0026_ ? B_in[25] : \B_shift[16] [1];
  assign _0014_[2] = _0026_ ? B_in[26] : \B_shift[16] [2];
  assign _0014_[3] = _0026_ ? B_in[27] : \B_shift[16] [3];
  assign _0014_[4] = _0026_ ? B_in[28] : \B_shift[16] [4];
  assign _0014_[5] = _0026_ ? B_in[29] : \B_shift[16] [5];
  assign _0014_[6] = _0026_ ? B_in[30] : \B_shift[16] [6];
  assign _0014_[7] = _0026_ ? B_in[31] : \B_shift[16] [7];
  assign _0018_[0] = _0026_ ? B_in[80] : \B_shift[21] [0];
  assign _0018_[1] = _0026_ ? B_in[81] : \B_shift[21] [1];
  assign _0018_[2] = _0026_ ? B_in[82] : \B_shift[21] [2];
  assign _0018_[3] = _0026_ ? B_in[83] : \B_shift[21] [3];
  assign _0018_[4] = _0026_ ? B_in[84] : \B_shift[21] [4];
  assign _0018_[5] = _0026_ ? B_in[85] : \B_shift[21] [5];
  assign _0018_[6] = _0026_ ? B_in[86] : \B_shift[21] [6];
  assign _0018_[7] = _0026_ ? B_in[87] : \B_shift[21] [7];
  assign _0015_[0] = _0026_ ? B_in[48] : \B_shift[17] [0];
  assign _0015_[1] = _0026_ ? B_in[49] : \B_shift[17] [1];
  assign _0015_[2] = _0026_ ? B_in[50] : \B_shift[17] [2];
  assign _0015_[3] = _0026_ ? B_in[51] : \B_shift[17] [3];
  assign _0015_[4] = _0026_ ? B_in[52] : \B_shift[17] [4];
  assign _0015_[5] = _0026_ ? B_in[53] : \B_shift[17] [5];
  assign _0015_[6] = _0026_ ? B_in[54] : \B_shift[17] [6];
  assign _0015_[7] = _0026_ ? B_in[55] : \B_shift[17] [7];
  assign _0023_[0] = _0026_ ? B_in[16] : \B_shift[13] [0];
  assign _0023_[1] = _0026_ ? B_in[17] : \B_shift[13] [1];
  assign _0023_[2] = _0026_ ? B_in[18] : \B_shift[13] [2];
  assign _0023_[3] = _0026_ ? B_in[19] : \B_shift[13] [3];
  assign _0023_[4] = _0026_ ? B_in[20] : \B_shift[13] [4];
  assign _0023_[5] = _0026_ ? B_in[21] : \B_shift[13] [5];
  assign _0023_[6] = _0026_ ? B_in[22] : \B_shift[13] [6];
  assign _0023_[7] = _0026_ ? B_in[23] : \B_shift[13] [7];
  assign _0016_[0] = _0026_ ? B_in[72] : \B_shift[18] [0];
  assign _0016_[1] = _0026_ ? B_in[73] : \B_shift[18] [1];
  assign _0016_[2] = _0026_ ? B_in[74] : \B_shift[18] [2];
  assign _0016_[3] = _0026_ ? B_in[75] : \B_shift[18] [3];
  assign _0016_[4] = _0026_ ? B_in[76] : \B_shift[18] [4];
  assign _0016_[5] = _0026_ ? B_in[77] : \B_shift[18] [5];
  assign _0016_[6] = _0026_ ? B_in[78] : \B_shift[18] [6];
  assign _0016_[7] = _0026_ ? B_in[79] : \B_shift[18] [7];
  assign _0012_[0] = _0026_ ? B_in[40] : \B_shift[14] [0];
  assign _0012_[1] = _0026_ ? B_in[41] : \B_shift[14] [1];
  assign _0012_[2] = _0026_ ? B_in[42] : \B_shift[14] [2];
  assign _0012_[3] = _0026_ ? B_in[43] : \B_shift[14] [3];
  assign _0012_[4] = _0026_ ? B_in[44] : \B_shift[14] [4];
  assign _0012_[5] = _0026_ ? B_in[45] : \B_shift[14] [5];
  assign _0012_[6] = _0026_ ? B_in[46] : \B_shift[14] [6];
  assign _0012_[7] = _0026_ ? B_in[47] : \B_shift[14] [7];
  assign _0021_[0] = _0026_ ? B_in[8] : \B_shift[10] [0];
  assign _0021_[1] = _0026_ ? B_in[9] : \B_shift[10] [1];
  assign _0021_[2] = _0026_ ? B_in[10] : \B_shift[10] [2];
  assign _0021_[3] = _0026_ ? B_in[11] : \B_shift[10] [3];
  assign _0021_[4] = _0026_ ? B_in[12] : \B_shift[10] [4];
  assign _0021_[5] = _0026_ ? B_in[13] : \B_shift[10] [5];
  assign _0021_[6] = _0026_ ? B_in[14] : \B_shift[10] [6];
  assign _0021_[7] = _0026_ ? B_in[15] : \B_shift[10] [7];
  assign _0013_[0] = _0026_ ? B_in[64] : \B_shift[15] [0];
  assign _0013_[1] = _0026_ ? B_in[65] : \B_shift[15] [1];
  assign _0013_[2] = _0026_ ? B_in[66] : \B_shift[15] [2];
  assign _0013_[3] = _0026_ ? B_in[67] : \B_shift[15] [3];
  assign _0013_[4] = _0026_ ? B_in[68] : \B_shift[15] [4];
  assign _0013_[5] = _0026_ ? B_in[69] : \B_shift[15] [5];
  assign _0013_[6] = _0026_ ? B_in[70] : \B_shift[15] [6];
  assign _0013_[7] = _0026_ ? B_in[71] : \B_shift[15] [7];
  assign _0022_[0] = _0026_ ? B_in[32] : \B_shift[11] [0];
  assign _0022_[1] = _0026_ ? B_in[33] : \B_shift[11] [1];
  assign _0022_[2] = _0026_ ? B_in[34] : \B_shift[11] [2];
  assign _0022_[3] = _0026_ ? B_in[35] : \B_shift[11] [3];
  assign _0022_[4] = _0026_ ? B_in[36] : \B_shift[11] [4];
  assign _0022_[5] = _0026_ ? B_in[37] : \B_shift[11] [5];
  assign _0022_[6] = _0026_ ? B_in[38] : \B_shift[11] [6];
  assign _0022_[7] = _0026_ ? B_in[39] : \B_shift[11] [7];
  assign _0020_[0] = _0026_ ? B_in[0] : \B_shift[7] [0];
  assign _0020_[1] = _0026_ ? B_in[1] : \B_shift[7] [1];
  assign _0020_[2] = _0026_ ? B_in[2] : \B_shift[7] [2];
  assign _0020_[3] = _0026_ ? B_in[3] : \B_shift[7] [3];
  assign _0020_[4] = _0026_ ? B_in[4] : \B_shift[7] [4];
  assign _0020_[5] = _0026_ ? B_in[5] : \B_shift[7] [5];
  assign _0020_[6] = _0026_ ? B_in[6] : \B_shift[7] [6];
  assign _0020_[7] = _0026_ ? B_in[7] : \B_shift[7] [7];
  assign _0011_[0] = _0026_ ? A_in[112] : \A_shift[6] [0];
  assign _0011_[1] = _0026_ ? A_in[113] : \A_shift[6] [1];
  assign _0011_[2] = _0026_ ? A_in[114] : \A_shift[6] [2];
  assign _0011_[3] = _0026_ ? A_in[115] : \A_shift[6] [3];
  assign _0011_[4] = _0026_ ? A_in[116] : \A_shift[6] [4];
  assign _0011_[5] = _0026_ ? A_in[117] : \A_shift[6] [5];
  assign _0011_[6] = _0026_ ? A_in[118] : \A_shift[6] [6];
  assign _0011_[7] = _0026_ ? A_in[119] : \A_shift[6] [7];
  assign _0010_[0] = _0026_ ? A_in[104] : \A_shift[5] [0];
  assign _0010_[1] = _0026_ ? A_in[105] : \A_shift[5] [1];
  assign _0010_[2] = _0026_ ? A_in[106] : \A_shift[5] [2];
  assign _0010_[3] = _0026_ ? A_in[107] : \A_shift[5] [3];
  assign _0010_[4] = _0026_ ? A_in[108] : \A_shift[5] [4];
  assign _0010_[5] = _0026_ ? A_in[109] : \A_shift[5] [5];
  assign _0010_[6] = _0026_ ? A_in[110] : \A_shift[5] [6];
  assign _0010_[7] = _0026_ ? A_in[111] : \A_shift[5] [7];
  assign _0009_[0] = _0026_ ? A_in[96] : \A_shift[4] [0];
  assign _0009_[1] = _0026_ ? A_in[97] : \A_shift[4] [1];
  assign _0009_[2] = _0026_ ? A_in[98] : \A_shift[4] [2];
  assign _0009_[3] = _0026_ ? A_in[99] : \A_shift[4] [3];
  assign _0009_[4] = _0026_ ? A_in[100] : \A_shift[4] [4];
  assign _0009_[5] = _0026_ ? A_in[101] : \A_shift[4] [5];
  assign _0009_[6] = _0026_ ? A_in[102] : \A_shift[4] [6];
  assign _0009_[7] = _0026_ ? A_in[103] : \A_shift[4] [7];
  assign _0002_[0] = _0026_ ? A_in[80] : \A_shift[13] [0];
  assign _0002_[1] = _0026_ ? A_in[81] : \A_shift[13] [1];
  assign _0002_[2] = _0026_ ? A_in[82] : \A_shift[13] [2];
  assign _0002_[3] = _0026_ ? A_in[83] : \A_shift[13] [3];
  assign _0002_[4] = _0026_ ? A_in[84] : \A_shift[13] [4];
  assign _0002_[5] = _0026_ ? A_in[85] : \A_shift[13] [5];
  assign _0002_[6] = _0026_ ? A_in[86] : \A_shift[13] [6];
  assign _0002_[7] = _0026_ ? A_in[87] : \A_shift[13] [7];
  assign _0001_[0] = _0026_ ? A_in[72] : \A_shift[12] [0];
  assign _0001_[1] = _0026_ ? A_in[73] : \A_shift[12] [1];
  assign _0001_[2] = _0026_ ? A_in[74] : \A_shift[12] [2];
  assign _0001_[3] = _0026_ ? A_in[75] : \A_shift[12] [3];
  assign _0001_[4] = _0026_ ? A_in[76] : \A_shift[12] [4];
  assign _0001_[5] = _0026_ ? A_in[77] : \A_shift[12] [5];
  assign _0001_[6] = _0026_ ? A_in[78] : \A_shift[12] [6];
  assign _0001_[7] = _0026_ ? A_in[79] : \A_shift[12] [7];
  assign _0000_[0] = _0026_ ? A_in[64] : \A_shift[11] [0];
  assign _0000_[1] = _0026_ ? A_in[65] : \A_shift[11] [1];
  assign _0000_[2] = _0026_ ? A_in[66] : \A_shift[11] [2];
  assign _0000_[3] = _0026_ ? A_in[67] : \A_shift[11] [3];
  assign _0000_[4] = _0026_ ? A_in[68] : \A_shift[11] [4];
  assign _0000_[5] = _0026_ ? A_in[69] : \A_shift[11] [5];
  assign _0000_[6] = _0026_ ? A_in[70] : \A_shift[11] [6];
  assign _0000_[7] = _0026_ ? A_in[71] : \A_shift[11] [7];
  assign _0005_[0] = _0026_ ? A_in[48] : \A_shift[20] [0];
  assign _0005_[1] = _0026_ ? A_in[49] : \A_shift[20] [1];
  assign _0005_[2] = _0026_ ? A_in[50] : \A_shift[20] [2];
  assign _0005_[3] = _0026_ ? A_in[51] : \A_shift[20] [3];
  assign _0005_[4] = _0026_ ? A_in[52] : \A_shift[20] [4];
  assign _0005_[5] = _0026_ ? A_in[53] : \A_shift[20] [5];
  assign _0005_[6] = _0026_ ? A_in[54] : \A_shift[20] [6];
  assign _0005_[7] = _0026_ ? A_in[55] : \A_shift[20] [7];
  assign _0004_[0] = _0026_ ? A_in[40] : \A_shift[19] [0];
  assign _0004_[1] = _0026_ ? A_in[41] : \A_shift[19] [1];
  assign _0004_[2] = _0026_ ? A_in[42] : \A_shift[19] [2];
  assign _0004_[3] = _0026_ ? A_in[43] : \A_shift[19] [3];
  assign _0004_[4] = _0026_ ? A_in[44] : \A_shift[19] [4];
  assign _0004_[5] = _0026_ ? A_in[45] : \A_shift[19] [5];
  assign _0004_[6] = _0026_ ? A_in[46] : \A_shift[19] [6];
  assign _0004_[7] = _0026_ ? A_in[47] : \A_shift[19] [7];
  assign _0003_[0] = _0026_ ? A_in[32] : \A_shift[18] [0];
  assign _0003_[1] = _0026_ ? A_in[33] : \A_shift[18] [1];
  assign _0003_[2] = _0026_ ? A_in[34] : \A_shift[18] [2];
  assign _0003_[3] = _0026_ ? A_in[35] : \A_shift[18] [3];
  assign _0003_[4] = _0026_ ? A_in[36] : \A_shift[18] [4];
  assign _0003_[5] = _0026_ ? A_in[37] : \A_shift[18] [5];
  assign _0003_[6] = _0026_ ? A_in[38] : \A_shift[18] [6];
  assign _0003_[7] = _0026_ ? A_in[39] : \A_shift[18] [7];
  assign _0008_[0] = _0026_ ? A_in[16] : \A_shift[27] [0];
  assign _0008_[1] = _0026_ ? A_in[17] : \A_shift[27] [1];
  assign _0008_[2] = _0026_ ? A_in[18] : \A_shift[27] [2];
  assign _0008_[3] = _0026_ ? A_in[19] : \A_shift[27] [3];
  assign _0008_[4] = _0026_ ? A_in[20] : \A_shift[27] [4];
  assign _0008_[5] = _0026_ ? A_in[21] : \A_shift[27] [5];
  assign _0008_[6] = _0026_ ? A_in[22] : \A_shift[27] [6];
  assign _0008_[7] = _0026_ ? A_in[23] : \A_shift[27] [7];
  assign _0007_[0] = _0026_ ? A_in[8] : \A_shift[26] [0];
  assign _0007_[1] = _0026_ ? A_in[9] : \A_shift[26] [1];
  assign _0007_[2] = _0026_ ? A_in[10] : \A_shift[26] [2];
  assign _0007_[3] = _0026_ ? A_in[11] : \A_shift[26] [3];
  assign _0007_[4] = _0026_ ? A_in[12] : \A_shift[26] [4];
  assign _0007_[5] = _0026_ ? A_in[13] : \A_shift[26] [5];
  assign _0007_[6] = _0026_ ? A_in[14] : \A_shift[26] [6];
  assign _0007_[7] = _0026_ ? A_in[15] : \A_shift[26] [7];
  assign _0006_[0] = _0026_ ? A_in[0] : \A_shift[25] [0];
  assign _0006_[1] = _0026_ ? A_in[1] : \A_shift[25] [1];
  assign _0006_[2] = _0026_ ? A_in[2] : \A_shift[25] [2];
  assign _0006_[3] = _0026_ ? A_in[3] : \A_shift[25] [3];
  assign _0006_[4] = _0026_ ? A_in[4] : \A_shift[25] [4];
  assign _0006_[5] = _0026_ ? A_in[5] : \A_shift[25] [5];
  assign _0006_[6] = _0026_ ? A_in[6] : \A_shift[25] [6];
  assign _0006_[7] = _0026_ ? A_in[7] : \A_shift[25] [7];
  assign _0024_[0] = ~(_0026_ | cycle_cnt[0]);
  assign _0074_ = cycle_cnt[1] ^ cycle_cnt[0];
  assign _0024_[1] = _0074_ & ~(_0026_);
  assign _0075_ = ~_0026_;
  assign _0076_ = _0060_ ^ cycle_cnt[2];
  assign _0024_[2] = _0075_ & ~(_0076_);
  assign _0077_ = cycle_cnt[1] & cycle_cnt[0];
  assign _0078_ = ~(_0077_ & cycle_cnt[2]);
  assign _0079_ = _0078_ ^ cycle_cnt[3];
  assign _0024_[3] = _0075_ & ~(_0079_);
  assign _0080_ = ~(cycle_cnt[3] & cycle_cnt[2]);
  assign _0081_ = _0080_ | _0060_;
  assign _0082_ = _0081_ ^ cycle_cnt[4];
  assign _0024_[4] = _0075_ & ~(_0082_);
  assign _0083_ = _0077_ & ~(_0080_);
  assign _0084_ = ~(_0083_ & cycle_cnt[4]);
  assign _0085_ = _0084_ ^ cycle_cnt[5];
  assign _0024_[5] = _0075_ & ~(_0085_);
  assign _0086_ = ~(cycle_cnt[4] & cycle_cnt[5]);
  assign _0087_ = _0086_ | _0081_;
  assign _0088_ = _0087_ ^ cycle_cnt[6];
  assign _0024_[6] = _0075_ & ~(_0088_);
  assign _0089_ = _0087_ | ~(cycle_cnt[6]);
  assign _0090_ = _0089_ ^ cycle_cnt[7];
  assign _0024_[7] = _0075_ & ~(_0090_);
  assign _0091_ = ~(cycle_cnt[7] & cycle_cnt[6]);
  assign _0092_ = _0091_ | _0086_;
  assign _0093_ = _0092_ | _0081_;
  assign _0094_ = _0093_ ^ cycle_cnt[8];
  assign _0024_[8] = _0075_ & ~(_0094_);
  assign _0095_ = _0083_ & ~(_0092_);
  assign _0096_ = ~(_0095_ & cycle_cnt[8]);
  assign _0097_ = _0096_ ^ cycle_cnt[9];
  assign _0024_[9] = _0075_ & ~(_0097_);
  assign _0098_ = ~(cycle_cnt[9] & cycle_cnt[8]);
  assign _0099_ = _0098_ | _0093_;
  assign _0100_ = _0099_ ^ cycle_cnt[10];
  assign _0024_[10] = _0075_ & ~(_0100_);
  assign _0101_ = _0099_ | ~(cycle_cnt[10]);
  assign _0102_ = _0101_ ^ cycle_cnt[11];
  assign _0024_[11] = _0075_ & ~(_0102_);
  assign _0103_ = ~(cycle_cnt[11] & cycle_cnt[10]);
  assign _0104_ = _0103_ | _0098_;
  assign _0105_ = _0095_ & ~(_0104_);
  assign _0106_ = ~(_0105_ ^ cycle_cnt[12]);
  assign _0024_[12] = _0075_ & ~(_0106_);
  assign _0107_ = ~(_0105_ & cycle_cnt[12]);
  assign _0108_ = _0107_ ^ cycle_cnt[13];
  assign _0024_[13] = _0075_ & ~(_0108_);
  assign _0109_ = ~(cycle_cnt[13] & cycle_cnt[12]);
  assign _0110_ = _0109_ | ~(_0105_);
  assign _0111_ = _0110_ ^ cycle_cnt[14];
  assign _0024_[14] = _0075_ & ~(_0111_);
  assign _0112_ = _0110_ | ~(cycle_cnt[14]);
  assign _0113_ = _0112_ ^ cycle_cnt[15];
  assign _0024_[15] = _0075_ & ~(_0113_);
  assign _0114_ = ~(cycle_cnt[15] & cycle_cnt[14]);
  assign _0115_ = _0114_ | _0109_;
  assign _0116_ = _0115_ | _0104_;
  assign _0117_ = _0116_ | _0093_;
  assign _0118_ = _0117_ ^ cycle_cnt[16];
  assign _0024_[16] = _0075_ & ~(_0118_);
  assign _0119_ = _0095_ & ~(_0116_);
  assign _0120_ = ~(_0119_ & cycle_cnt[16]);
  assign _0121_ = _0120_ ^ cycle_cnt[17];
  assign _0024_[17] = _0075_ & ~(_0121_);
  assign _0122_ = ~(cycle_cnt[17] & cycle_cnt[16]);
  assign _0123_ = _0122_ | _0117_;
  assign _0124_ = _0123_ ^ cycle_cnt[18];
  assign _0024_[18] = _0075_ & ~(_0124_);
  assign _0125_ = _0123_ | ~(cycle_cnt[18]);
  assign _0126_ = _0125_ ^ cycle_cnt[19];
  assign _0024_[19] = _0075_ & ~(_0126_);
  assign _0127_ = ~(cycle_cnt[19] & cycle_cnt[18]);
  assign _0128_ = _0127_ | _0122_;
  assign _0129_ = _0128_ | _0117_;
  assign _0130_ = _0129_ ^ cycle_cnt[20];
  assign _0024_[20] = _0075_ & ~(_0130_);
  assign _0131_ = _0129_ | ~(cycle_cnt[20]);
  assign _0132_ = _0131_ ^ cycle_cnt[21];
  assign _0024_[21] = _0075_ & ~(_0132_);
  assign _0133_ = ~(cycle_cnt[21] & cycle_cnt[20]);
  assign _0134_ = _0133_ | _0129_;
  assign _0135_ = _0134_ ^ cycle_cnt[22];
  assign _0024_[22] = _0075_ & ~(_0135_);
  assign _0136_ = _0134_ | ~(cycle_cnt[22]);
  assign _0137_ = _0136_ ^ cycle_cnt[23];
  assign _0024_[23] = _0075_ & ~(_0137_);
  assign _0138_ = ~(cycle_cnt[23] & cycle_cnt[22]);
  assign _0139_ = _0138_ | _0133_;
  assign _0140_ = _0139_ | _0128_;
  assign _0141_ = _0140_ | _0117_;
  assign _0142_ = _0141_ ^ cycle_cnt[24];
  assign _0024_[24] = _0075_ & ~(_0142_);
  assign _0143_ = _0119_ & ~(_0140_);
  assign _0144_ = ~(_0143_ & cycle_cnt[24]);
  assign _0145_ = _0144_ ^ cycle_cnt[25];
  assign _0024_[25] = _0075_ & ~(_0145_);
  assign _0146_ = ~(cycle_cnt[24] & cycle_cnt[25]);
  assign _0147_ = _0146_ | _0141_;
  assign _0148_ = _0147_ ^ cycle_cnt[26];
  assign _0024_[26] = _0075_ & ~(_0148_);
  assign _0149_ = _0147_ | ~(cycle_cnt[26]);
  assign _0150_ = _0149_ ^ cycle_cnt[27];
  assign _0024_[27] = _0075_ & ~(_0150_);
  assign _0151_ = ~(cycle_cnt[26] & cycle_cnt[27]);
  assign _0152_ = _0151_ | _0146_;
  assign _0153_ = _0152_ | _0141_;
  assign _0154_ = _0153_ ^ cycle_cnt[28];
  assign _0024_[28] = _0075_ & ~(_0154_);
  assign _0155_ = _0153_ | ~(cycle_cnt[28]);
  assign _0156_ = _0155_ ^ cycle_cnt[29];
  assign _0024_[29] = _0075_ & ~(_0156_);
  assign _0029_ = ~(cycle_cnt[28] & cycle_cnt[29]);
  assign _0030_ = _0029_ | _0153_;
  assign _0031_ = _0030_ ^ cycle_cnt[30];
  assign _0024_[30] = _0075_ & ~(_0031_);
  assign _0032_ = _0030_ | ~(cycle_cnt[30]);
  assign _0033_ = _0032_ ^ cycle_cnt[31];
  assign _0024_[31] = _0075_ & ~(_0033_);
  assign _0027_ = running ? _0071_ : start;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[20] [0] <= 1'h0;
      else \A_shift[20] [0] <= A_in[56];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[20] [1] <= 1'h0;
      else \A_shift[20] [1] <= A_in[57];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[20] [2] <= 1'h0;
      else \A_shift[20] [2] <= A_in[58];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[20] [3] <= 1'h0;
      else \A_shift[20] [3] <= A_in[59];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[20] [4] <= 1'h0;
      else \A_shift[20] [4] <= A_in[60];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[20] [5] <= 1'h0;
      else \A_shift[20] [5] <= A_in[61];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[20] [6] <= 1'h0;
      else \A_shift[20] [6] <= A_in[62];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[20] [7] <= 1'h0;
      else \A_shift[20] [7] <= A_in[63];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[27] [0] <= 1'h0;
      else \A_shift[27] [0] <= A_in[24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[27] [1] <= 1'h0;
      else \A_shift[27] [1] <= A_in[25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[27] [2] <= 1'h0;
      else \A_shift[27] [2] <= A_in[26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[27] [3] <= 1'h0;
      else \A_shift[27] [3] <= A_in[27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[27] [4] <= 1'h0;
      else \A_shift[27] [4] <= A_in[28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[27] [5] <= 1'h0;
      else \A_shift[27] [5] <= A_in[29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[27] [6] <= 1'h0;
      else \A_shift[27] [6] <= A_in[30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[27] [7] <= 1'h0;
      else \A_shift[27] [7] <= A_in[31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[13] [0] <= 1'h0;
      else \A_shift[13] [0] <= A_in[88];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[13] [1] <= 1'h0;
      else \A_shift[13] [1] <= A_in[89];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[13] [2] <= 1'h0;
      else \A_shift[13] [2] <= A_in[90];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[13] [3] <= 1'h0;
      else \A_shift[13] [3] <= A_in[91];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[13] [4] <= 1'h0;
      else \A_shift[13] [4] <= A_in[92];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[13] [5] <= 1'h0;
      else \A_shift[13] [5] <= A_in[93];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[13] [6] <= 1'h0;
      else \A_shift[13] [6] <= A_in[94];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[13] [7] <= 1'h0;
      else \A_shift[13] [7] <= A_in[95];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[24] [0] <= 1'h0;
      else \B_shift[24] [0] <= B_in[120];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[24] [1] <= 1'h0;
      else \B_shift[24] [1] <= B_in[121];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[24] [2] <= 1'h0;
      else \B_shift[24] [2] <= B_in[122];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[24] [3] <= 1'h0;
      else \B_shift[24] [3] <= B_in[123];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[24] [4] <= 1'h0;
      else \B_shift[24] [4] <= B_in[124];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[24] [5] <= 1'h0;
      else \B_shift[24] [5] <= B_in[125];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[24] [6] <= 1'h0;
      else \B_shift[24] [6] <= B_in[126];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[24] [7] <= 1'h0;
      else \B_shift[24] [7] <= B_in[127];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) load_acc <= 1'h0;
    else load_acc <= _0026_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) done <= 1'h0;
    else done <= _0025_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[0] <= 1'h0;
    else if (_0025_) C_out[0] <= \acc_wires[15] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[1] <= 1'h0;
    else if (_0025_) C_out[1] <= \acc_wires[15] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[2] <= 1'h0;
    else if (_0025_) C_out[2] <= \acc_wires[15] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[3] <= 1'h0;
    else if (_0025_) C_out[3] <= \acc_wires[15] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[4] <= 1'h0;
    else if (_0025_) C_out[4] <= \acc_wires[15] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[5] <= 1'h0;
    else if (_0025_) C_out[5] <= \acc_wires[15] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[6] <= 1'h0;
    else if (_0025_) C_out[6] <= \acc_wires[15] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[7] <= 1'h0;
    else if (_0025_) C_out[7] <= \acc_wires[15] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[8] <= 1'h0;
    else if (_0025_) C_out[8] <= \acc_wires[15] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[9] <= 1'h0;
    else if (_0025_) C_out[9] <= \acc_wires[15] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[10] <= 1'h0;
    else if (_0025_) C_out[10] <= \acc_wires[15] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[11] <= 1'h0;
    else if (_0025_) C_out[11] <= \acc_wires[15] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[12] <= 1'h0;
    else if (_0025_) C_out[12] <= \acc_wires[15] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[13] <= 1'h0;
    else if (_0025_) C_out[13] <= \acc_wires[15] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[14] <= 1'h0;
    else if (_0025_) C_out[14] <= \acc_wires[15] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[15] <= 1'h0;
    else if (_0025_) C_out[15] <= \acc_wires[15] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[16] <= 1'h0;
    else if (_0025_) C_out[16] <= \acc_wires[15] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[17] <= 1'h0;
    else if (_0025_) C_out[17] <= \acc_wires[15] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[18] <= 1'h0;
    else if (_0025_) C_out[18] <= \acc_wires[15] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[19] <= 1'h0;
    else if (_0025_) C_out[19] <= \acc_wires[15] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[20] <= 1'h0;
    else if (_0025_) C_out[20] <= \acc_wires[15] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[21] <= 1'h0;
    else if (_0025_) C_out[21] <= \acc_wires[15] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[22] <= 1'h0;
    else if (_0025_) C_out[22] <= \acc_wires[15] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[23] <= 1'h0;
    else if (_0025_) C_out[23] <= \acc_wires[15] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[24] <= 1'h0;
    else if (_0025_) C_out[24] <= \acc_wires[15] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[25] <= 1'h0;
    else if (_0025_) C_out[25] <= \acc_wires[15] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[26] <= 1'h0;
    else if (_0025_) C_out[26] <= \acc_wires[15] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[27] <= 1'h0;
    else if (_0025_) C_out[27] <= \acc_wires[15] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[28] <= 1'h0;
    else if (_0025_) C_out[28] <= \acc_wires[15] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[29] <= 1'h0;
    else if (_0025_) C_out[29] <= \acc_wires[15] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[30] <= 1'h0;
    else if (_0025_) C_out[30] <= \acc_wires[15] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[31] <= 1'h0;
    else if (_0025_) C_out[31] <= \acc_wires[15] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[32] <= 1'h0;
    else if (_0025_) C_out[32] <= \acc_wires[14] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[33] <= 1'h0;
    else if (_0025_) C_out[33] <= \acc_wires[14] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[34] <= 1'h0;
    else if (_0025_) C_out[34] <= \acc_wires[14] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[35] <= 1'h0;
    else if (_0025_) C_out[35] <= \acc_wires[14] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[36] <= 1'h0;
    else if (_0025_) C_out[36] <= \acc_wires[14] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[37] <= 1'h0;
    else if (_0025_) C_out[37] <= \acc_wires[14] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[38] <= 1'h0;
    else if (_0025_) C_out[38] <= \acc_wires[14] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[39] <= 1'h0;
    else if (_0025_) C_out[39] <= \acc_wires[14] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[40] <= 1'h0;
    else if (_0025_) C_out[40] <= \acc_wires[14] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[41] <= 1'h0;
    else if (_0025_) C_out[41] <= \acc_wires[14] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[42] <= 1'h0;
    else if (_0025_) C_out[42] <= \acc_wires[14] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[43] <= 1'h0;
    else if (_0025_) C_out[43] <= \acc_wires[14] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[44] <= 1'h0;
    else if (_0025_) C_out[44] <= \acc_wires[14] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[45] <= 1'h0;
    else if (_0025_) C_out[45] <= \acc_wires[14] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[46] <= 1'h0;
    else if (_0025_) C_out[46] <= \acc_wires[14] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[47] <= 1'h0;
    else if (_0025_) C_out[47] <= \acc_wires[14] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[48] <= 1'h0;
    else if (_0025_) C_out[48] <= \acc_wires[14] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[49] <= 1'h0;
    else if (_0025_) C_out[49] <= \acc_wires[14] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[50] <= 1'h0;
    else if (_0025_) C_out[50] <= \acc_wires[14] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[51] <= 1'h0;
    else if (_0025_) C_out[51] <= \acc_wires[14] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[52] <= 1'h0;
    else if (_0025_) C_out[52] <= \acc_wires[14] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[53] <= 1'h0;
    else if (_0025_) C_out[53] <= \acc_wires[14] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[54] <= 1'h0;
    else if (_0025_) C_out[54] <= \acc_wires[14] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[55] <= 1'h0;
    else if (_0025_) C_out[55] <= \acc_wires[14] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[56] <= 1'h0;
    else if (_0025_) C_out[56] <= \acc_wires[14] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[57] <= 1'h0;
    else if (_0025_) C_out[57] <= \acc_wires[14] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[58] <= 1'h0;
    else if (_0025_) C_out[58] <= \acc_wires[14] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[59] <= 1'h0;
    else if (_0025_) C_out[59] <= \acc_wires[14] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[60] <= 1'h0;
    else if (_0025_) C_out[60] <= \acc_wires[14] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[61] <= 1'h0;
    else if (_0025_) C_out[61] <= \acc_wires[14] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[62] <= 1'h0;
    else if (_0025_) C_out[62] <= \acc_wires[14] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[63] <= 1'h0;
    else if (_0025_) C_out[63] <= \acc_wires[14] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[64] <= 1'h0;
    else if (_0025_) C_out[64] <= \acc_wires[13] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[65] <= 1'h0;
    else if (_0025_) C_out[65] <= \acc_wires[13] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[66] <= 1'h0;
    else if (_0025_) C_out[66] <= \acc_wires[13] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[67] <= 1'h0;
    else if (_0025_) C_out[67] <= \acc_wires[13] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[68] <= 1'h0;
    else if (_0025_) C_out[68] <= \acc_wires[13] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[69] <= 1'h0;
    else if (_0025_) C_out[69] <= \acc_wires[13] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[70] <= 1'h0;
    else if (_0025_) C_out[70] <= \acc_wires[13] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[71] <= 1'h0;
    else if (_0025_) C_out[71] <= \acc_wires[13] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[72] <= 1'h0;
    else if (_0025_) C_out[72] <= \acc_wires[13] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[73] <= 1'h0;
    else if (_0025_) C_out[73] <= \acc_wires[13] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[74] <= 1'h0;
    else if (_0025_) C_out[74] <= \acc_wires[13] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[75] <= 1'h0;
    else if (_0025_) C_out[75] <= \acc_wires[13] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[76] <= 1'h0;
    else if (_0025_) C_out[76] <= \acc_wires[13] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[77] <= 1'h0;
    else if (_0025_) C_out[77] <= \acc_wires[13] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[78] <= 1'h0;
    else if (_0025_) C_out[78] <= \acc_wires[13] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[79] <= 1'h0;
    else if (_0025_) C_out[79] <= \acc_wires[13] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[80] <= 1'h0;
    else if (_0025_) C_out[80] <= \acc_wires[13] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[81] <= 1'h0;
    else if (_0025_) C_out[81] <= \acc_wires[13] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[82] <= 1'h0;
    else if (_0025_) C_out[82] <= \acc_wires[13] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[83] <= 1'h0;
    else if (_0025_) C_out[83] <= \acc_wires[13] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[84] <= 1'h0;
    else if (_0025_) C_out[84] <= \acc_wires[13] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[85] <= 1'h0;
    else if (_0025_) C_out[85] <= \acc_wires[13] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[86] <= 1'h0;
    else if (_0025_) C_out[86] <= \acc_wires[13] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[87] <= 1'h0;
    else if (_0025_) C_out[87] <= \acc_wires[13] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[88] <= 1'h0;
    else if (_0025_) C_out[88] <= \acc_wires[13] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[89] <= 1'h0;
    else if (_0025_) C_out[89] <= \acc_wires[13] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[90] <= 1'h0;
    else if (_0025_) C_out[90] <= \acc_wires[13] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[91] <= 1'h0;
    else if (_0025_) C_out[91] <= \acc_wires[13] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[92] <= 1'h0;
    else if (_0025_) C_out[92] <= \acc_wires[13] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[93] <= 1'h0;
    else if (_0025_) C_out[93] <= \acc_wires[13] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[94] <= 1'h0;
    else if (_0025_) C_out[94] <= \acc_wires[13] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[95] <= 1'h0;
    else if (_0025_) C_out[95] <= \acc_wires[13] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[96] <= 1'h0;
    else if (_0025_) C_out[96] <= \acc_wires[12] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[97] <= 1'h0;
    else if (_0025_) C_out[97] <= \acc_wires[12] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[98] <= 1'h0;
    else if (_0025_) C_out[98] <= \acc_wires[12] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[99] <= 1'h0;
    else if (_0025_) C_out[99] <= \acc_wires[12] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[100] <= 1'h0;
    else if (_0025_) C_out[100] <= \acc_wires[12] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[101] <= 1'h0;
    else if (_0025_) C_out[101] <= \acc_wires[12] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[102] <= 1'h0;
    else if (_0025_) C_out[102] <= \acc_wires[12] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[103] <= 1'h0;
    else if (_0025_) C_out[103] <= \acc_wires[12] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[104] <= 1'h0;
    else if (_0025_) C_out[104] <= \acc_wires[12] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[105] <= 1'h0;
    else if (_0025_) C_out[105] <= \acc_wires[12] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[106] <= 1'h0;
    else if (_0025_) C_out[106] <= \acc_wires[12] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[107] <= 1'h0;
    else if (_0025_) C_out[107] <= \acc_wires[12] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[108] <= 1'h0;
    else if (_0025_) C_out[108] <= \acc_wires[12] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[109] <= 1'h0;
    else if (_0025_) C_out[109] <= \acc_wires[12] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[110] <= 1'h0;
    else if (_0025_) C_out[110] <= \acc_wires[12] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[111] <= 1'h0;
    else if (_0025_) C_out[111] <= \acc_wires[12] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[112] <= 1'h0;
    else if (_0025_) C_out[112] <= \acc_wires[12] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[113] <= 1'h0;
    else if (_0025_) C_out[113] <= \acc_wires[12] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[114] <= 1'h0;
    else if (_0025_) C_out[114] <= \acc_wires[12] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[115] <= 1'h0;
    else if (_0025_) C_out[115] <= \acc_wires[12] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[116] <= 1'h0;
    else if (_0025_) C_out[116] <= \acc_wires[12] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[117] <= 1'h0;
    else if (_0025_) C_out[117] <= \acc_wires[12] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[118] <= 1'h0;
    else if (_0025_) C_out[118] <= \acc_wires[12] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[119] <= 1'h0;
    else if (_0025_) C_out[119] <= \acc_wires[12] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[120] <= 1'h0;
    else if (_0025_) C_out[120] <= \acc_wires[12] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[121] <= 1'h0;
    else if (_0025_) C_out[121] <= \acc_wires[12] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[122] <= 1'h0;
    else if (_0025_) C_out[122] <= \acc_wires[12] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[123] <= 1'h0;
    else if (_0025_) C_out[123] <= \acc_wires[12] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[124] <= 1'h0;
    else if (_0025_) C_out[124] <= \acc_wires[12] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[125] <= 1'h0;
    else if (_0025_) C_out[125] <= \acc_wires[12] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[126] <= 1'h0;
    else if (_0025_) C_out[126] <= \acc_wires[12] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[127] <= 1'h0;
    else if (_0025_) C_out[127] <= \acc_wires[12] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[128] <= 1'h0;
    else if (_0025_) C_out[128] <= \acc_wires[11] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[129] <= 1'h0;
    else if (_0025_) C_out[129] <= \acc_wires[11] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[130] <= 1'h0;
    else if (_0025_) C_out[130] <= \acc_wires[11] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[131] <= 1'h0;
    else if (_0025_) C_out[131] <= \acc_wires[11] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[132] <= 1'h0;
    else if (_0025_) C_out[132] <= \acc_wires[11] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[133] <= 1'h0;
    else if (_0025_) C_out[133] <= \acc_wires[11] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[134] <= 1'h0;
    else if (_0025_) C_out[134] <= \acc_wires[11] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[135] <= 1'h0;
    else if (_0025_) C_out[135] <= \acc_wires[11] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[136] <= 1'h0;
    else if (_0025_) C_out[136] <= \acc_wires[11] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[137] <= 1'h0;
    else if (_0025_) C_out[137] <= \acc_wires[11] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[138] <= 1'h0;
    else if (_0025_) C_out[138] <= \acc_wires[11] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[139] <= 1'h0;
    else if (_0025_) C_out[139] <= \acc_wires[11] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[140] <= 1'h0;
    else if (_0025_) C_out[140] <= \acc_wires[11] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[141] <= 1'h0;
    else if (_0025_) C_out[141] <= \acc_wires[11] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[142] <= 1'h0;
    else if (_0025_) C_out[142] <= \acc_wires[11] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[143] <= 1'h0;
    else if (_0025_) C_out[143] <= \acc_wires[11] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[144] <= 1'h0;
    else if (_0025_) C_out[144] <= \acc_wires[11] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[145] <= 1'h0;
    else if (_0025_) C_out[145] <= \acc_wires[11] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[146] <= 1'h0;
    else if (_0025_) C_out[146] <= \acc_wires[11] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[147] <= 1'h0;
    else if (_0025_) C_out[147] <= \acc_wires[11] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[148] <= 1'h0;
    else if (_0025_) C_out[148] <= \acc_wires[11] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[149] <= 1'h0;
    else if (_0025_) C_out[149] <= \acc_wires[11] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[150] <= 1'h0;
    else if (_0025_) C_out[150] <= \acc_wires[11] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[151] <= 1'h0;
    else if (_0025_) C_out[151] <= \acc_wires[11] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[152] <= 1'h0;
    else if (_0025_) C_out[152] <= \acc_wires[11] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[153] <= 1'h0;
    else if (_0025_) C_out[153] <= \acc_wires[11] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[154] <= 1'h0;
    else if (_0025_) C_out[154] <= \acc_wires[11] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[155] <= 1'h0;
    else if (_0025_) C_out[155] <= \acc_wires[11] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[156] <= 1'h0;
    else if (_0025_) C_out[156] <= \acc_wires[11] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[157] <= 1'h0;
    else if (_0025_) C_out[157] <= \acc_wires[11] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[158] <= 1'h0;
    else if (_0025_) C_out[158] <= \acc_wires[11] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[159] <= 1'h0;
    else if (_0025_) C_out[159] <= \acc_wires[11] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[160] <= 1'h0;
    else if (_0025_) C_out[160] <= \acc_wires[10] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[161] <= 1'h0;
    else if (_0025_) C_out[161] <= \acc_wires[10] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[162] <= 1'h0;
    else if (_0025_) C_out[162] <= \acc_wires[10] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[163] <= 1'h0;
    else if (_0025_) C_out[163] <= \acc_wires[10] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[164] <= 1'h0;
    else if (_0025_) C_out[164] <= \acc_wires[10] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[165] <= 1'h0;
    else if (_0025_) C_out[165] <= \acc_wires[10] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[166] <= 1'h0;
    else if (_0025_) C_out[166] <= \acc_wires[10] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[167] <= 1'h0;
    else if (_0025_) C_out[167] <= \acc_wires[10] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[168] <= 1'h0;
    else if (_0025_) C_out[168] <= \acc_wires[10] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[169] <= 1'h0;
    else if (_0025_) C_out[169] <= \acc_wires[10] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[170] <= 1'h0;
    else if (_0025_) C_out[170] <= \acc_wires[10] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[171] <= 1'h0;
    else if (_0025_) C_out[171] <= \acc_wires[10] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[172] <= 1'h0;
    else if (_0025_) C_out[172] <= \acc_wires[10] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[173] <= 1'h0;
    else if (_0025_) C_out[173] <= \acc_wires[10] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[174] <= 1'h0;
    else if (_0025_) C_out[174] <= \acc_wires[10] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[175] <= 1'h0;
    else if (_0025_) C_out[175] <= \acc_wires[10] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[176] <= 1'h0;
    else if (_0025_) C_out[176] <= \acc_wires[10] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[177] <= 1'h0;
    else if (_0025_) C_out[177] <= \acc_wires[10] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[178] <= 1'h0;
    else if (_0025_) C_out[178] <= \acc_wires[10] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[179] <= 1'h0;
    else if (_0025_) C_out[179] <= \acc_wires[10] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[180] <= 1'h0;
    else if (_0025_) C_out[180] <= \acc_wires[10] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[181] <= 1'h0;
    else if (_0025_) C_out[181] <= \acc_wires[10] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[182] <= 1'h0;
    else if (_0025_) C_out[182] <= \acc_wires[10] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[183] <= 1'h0;
    else if (_0025_) C_out[183] <= \acc_wires[10] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[184] <= 1'h0;
    else if (_0025_) C_out[184] <= \acc_wires[10] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[185] <= 1'h0;
    else if (_0025_) C_out[185] <= \acc_wires[10] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[186] <= 1'h0;
    else if (_0025_) C_out[186] <= \acc_wires[10] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[187] <= 1'h0;
    else if (_0025_) C_out[187] <= \acc_wires[10] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[188] <= 1'h0;
    else if (_0025_) C_out[188] <= \acc_wires[10] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[189] <= 1'h0;
    else if (_0025_) C_out[189] <= \acc_wires[10] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[190] <= 1'h0;
    else if (_0025_) C_out[190] <= \acc_wires[10] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[191] <= 1'h0;
    else if (_0025_) C_out[191] <= \acc_wires[10] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[192] <= 1'h0;
    else if (_0025_) C_out[192] <= \acc_wires[9] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[193] <= 1'h0;
    else if (_0025_) C_out[193] <= \acc_wires[9] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[194] <= 1'h0;
    else if (_0025_) C_out[194] <= \acc_wires[9] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[195] <= 1'h0;
    else if (_0025_) C_out[195] <= \acc_wires[9] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[196] <= 1'h0;
    else if (_0025_) C_out[196] <= \acc_wires[9] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[197] <= 1'h0;
    else if (_0025_) C_out[197] <= \acc_wires[9] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[198] <= 1'h0;
    else if (_0025_) C_out[198] <= \acc_wires[9] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[199] <= 1'h0;
    else if (_0025_) C_out[199] <= \acc_wires[9] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[200] <= 1'h0;
    else if (_0025_) C_out[200] <= \acc_wires[9] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[201] <= 1'h0;
    else if (_0025_) C_out[201] <= \acc_wires[9] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[202] <= 1'h0;
    else if (_0025_) C_out[202] <= \acc_wires[9] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[203] <= 1'h0;
    else if (_0025_) C_out[203] <= \acc_wires[9] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[204] <= 1'h0;
    else if (_0025_) C_out[204] <= \acc_wires[9] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[205] <= 1'h0;
    else if (_0025_) C_out[205] <= \acc_wires[9] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[206] <= 1'h0;
    else if (_0025_) C_out[206] <= \acc_wires[9] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[207] <= 1'h0;
    else if (_0025_) C_out[207] <= \acc_wires[9] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[208] <= 1'h0;
    else if (_0025_) C_out[208] <= \acc_wires[9] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[209] <= 1'h0;
    else if (_0025_) C_out[209] <= \acc_wires[9] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[210] <= 1'h0;
    else if (_0025_) C_out[210] <= \acc_wires[9] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[211] <= 1'h0;
    else if (_0025_) C_out[211] <= \acc_wires[9] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[212] <= 1'h0;
    else if (_0025_) C_out[212] <= \acc_wires[9] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[213] <= 1'h0;
    else if (_0025_) C_out[213] <= \acc_wires[9] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[214] <= 1'h0;
    else if (_0025_) C_out[214] <= \acc_wires[9] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[215] <= 1'h0;
    else if (_0025_) C_out[215] <= \acc_wires[9] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[216] <= 1'h0;
    else if (_0025_) C_out[216] <= \acc_wires[9] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[217] <= 1'h0;
    else if (_0025_) C_out[217] <= \acc_wires[9] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[218] <= 1'h0;
    else if (_0025_) C_out[218] <= \acc_wires[9] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[219] <= 1'h0;
    else if (_0025_) C_out[219] <= \acc_wires[9] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[220] <= 1'h0;
    else if (_0025_) C_out[220] <= \acc_wires[9] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[221] <= 1'h0;
    else if (_0025_) C_out[221] <= \acc_wires[9] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[222] <= 1'h0;
    else if (_0025_) C_out[222] <= \acc_wires[9] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[223] <= 1'h0;
    else if (_0025_) C_out[223] <= \acc_wires[9] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[224] <= 1'h0;
    else if (_0025_) C_out[224] <= \acc_wires[8] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[225] <= 1'h0;
    else if (_0025_) C_out[225] <= \acc_wires[8] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[226] <= 1'h0;
    else if (_0025_) C_out[226] <= \acc_wires[8] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[227] <= 1'h0;
    else if (_0025_) C_out[227] <= \acc_wires[8] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[228] <= 1'h0;
    else if (_0025_) C_out[228] <= \acc_wires[8] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[229] <= 1'h0;
    else if (_0025_) C_out[229] <= \acc_wires[8] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[230] <= 1'h0;
    else if (_0025_) C_out[230] <= \acc_wires[8] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[231] <= 1'h0;
    else if (_0025_) C_out[231] <= \acc_wires[8] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[232] <= 1'h0;
    else if (_0025_) C_out[232] <= \acc_wires[8] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[233] <= 1'h0;
    else if (_0025_) C_out[233] <= \acc_wires[8] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[234] <= 1'h0;
    else if (_0025_) C_out[234] <= \acc_wires[8] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[235] <= 1'h0;
    else if (_0025_) C_out[235] <= \acc_wires[8] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[236] <= 1'h0;
    else if (_0025_) C_out[236] <= \acc_wires[8] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[237] <= 1'h0;
    else if (_0025_) C_out[237] <= \acc_wires[8] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[238] <= 1'h0;
    else if (_0025_) C_out[238] <= \acc_wires[8] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[239] <= 1'h0;
    else if (_0025_) C_out[239] <= \acc_wires[8] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[240] <= 1'h0;
    else if (_0025_) C_out[240] <= \acc_wires[8] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[241] <= 1'h0;
    else if (_0025_) C_out[241] <= \acc_wires[8] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[242] <= 1'h0;
    else if (_0025_) C_out[242] <= \acc_wires[8] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[243] <= 1'h0;
    else if (_0025_) C_out[243] <= \acc_wires[8] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[244] <= 1'h0;
    else if (_0025_) C_out[244] <= \acc_wires[8] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[245] <= 1'h0;
    else if (_0025_) C_out[245] <= \acc_wires[8] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[246] <= 1'h0;
    else if (_0025_) C_out[246] <= \acc_wires[8] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[247] <= 1'h0;
    else if (_0025_) C_out[247] <= \acc_wires[8] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[248] <= 1'h0;
    else if (_0025_) C_out[248] <= \acc_wires[8] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[249] <= 1'h0;
    else if (_0025_) C_out[249] <= \acc_wires[8] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[250] <= 1'h0;
    else if (_0025_) C_out[250] <= \acc_wires[8] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[251] <= 1'h0;
    else if (_0025_) C_out[251] <= \acc_wires[8] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[252] <= 1'h0;
    else if (_0025_) C_out[252] <= \acc_wires[8] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[253] <= 1'h0;
    else if (_0025_) C_out[253] <= \acc_wires[8] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[254] <= 1'h0;
    else if (_0025_) C_out[254] <= \acc_wires[8] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[255] <= 1'h0;
    else if (_0025_) C_out[255] <= \acc_wires[8] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[256] <= 1'h0;
    else if (_0025_) C_out[256] <= \acc_wires[7] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[257] <= 1'h0;
    else if (_0025_) C_out[257] <= \acc_wires[7] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[258] <= 1'h0;
    else if (_0025_) C_out[258] <= \acc_wires[7] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[259] <= 1'h0;
    else if (_0025_) C_out[259] <= \acc_wires[7] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[260] <= 1'h0;
    else if (_0025_) C_out[260] <= \acc_wires[7] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[261] <= 1'h0;
    else if (_0025_) C_out[261] <= \acc_wires[7] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[262] <= 1'h0;
    else if (_0025_) C_out[262] <= \acc_wires[7] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[263] <= 1'h0;
    else if (_0025_) C_out[263] <= \acc_wires[7] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[264] <= 1'h0;
    else if (_0025_) C_out[264] <= \acc_wires[7] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[265] <= 1'h0;
    else if (_0025_) C_out[265] <= \acc_wires[7] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[266] <= 1'h0;
    else if (_0025_) C_out[266] <= \acc_wires[7] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[267] <= 1'h0;
    else if (_0025_) C_out[267] <= \acc_wires[7] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[268] <= 1'h0;
    else if (_0025_) C_out[268] <= \acc_wires[7] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[269] <= 1'h0;
    else if (_0025_) C_out[269] <= \acc_wires[7] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[270] <= 1'h0;
    else if (_0025_) C_out[270] <= \acc_wires[7] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[271] <= 1'h0;
    else if (_0025_) C_out[271] <= \acc_wires[7] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[272] <= 1'h0;
    else if (_0025_) C_out[272] <= \acc_wires[7] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[273] <= 1'h0;
    else if (_0025_) C_out[273] <= \acc_wires[7] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[274] <= 1'h0;
    else if (_0025_) C_out[274] <= \acc_wires[7] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[275] <= 1'h0;
    else if (_0025_) C_out[275] <= \acc_wires[7] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[276] <= 1'h0;
    else if (_0025_) C_out[276] <= \acc_wires[7] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[277] <= 1'h0;
    else if (_0025_) C_out[277] <= \acc_wires[7] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[278] <= 1'h0;
    else if (_0025_) C_out[278] <= \acc_wires[7] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[279] <= 1'h0;
    else if (_0025_) C_out[279] <= \acc_wires[7] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[280] <= 1'h0;
    else if (_0025_) C_out[280] <= \acc_wires[7] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[281] <= 1'h0;
    else if (_0025_) C_out[281] <= \acc_wires[7] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[282] <= 1'h0;
    else if (_0025_) C_out[282] <= \acc_wires[7] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[283] <= 1'h0;
    else if (_0025_) C_out[283] <= \acc_wires[7] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[284] <= 1'h0;
    else if (_0025_) C_out[284] <= \acc_wires[7] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[285] <= 1'h0;
    else if (_0025_) C_out[285] <= \acc_wires[7] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[286] <= 1'h0;
    else if (_0025_) C_out[286] <= \acc_wires[7] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[287] <= 1'h0;
    else if (_0025_) C_out[287] <= \acc_wires[7] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[288] <= 1'h0;
    else if (_0025_) C_out[288] <= \acc_wires[6] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[289] <= 1'h0;
    else if (_0025_) C_out[289] <= \acc_wires[6] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[290] <= 1'h0;
    else if (_0025_) C_out[290] <= \acc_wires[6] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[291] <= 1'h0;
    else if (_0025_) C_out[291] <= \acc_wires[6] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[292] <= 1'h0;
    else if (_0025_) C_out[292] <= \acc_wires[6] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[293] <= 1'h0;
    else if (_0025_) C_out[293] <= \acc_wires[6] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[294] <= 1'h0;
    else if (_0025_) C_out[294] <= \acc_wires[6] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[295] <= 1'h0;
    else if (_0025_) C_out[295] <= \acc_wires[6] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[296] <= 1'h0;
    else if (_0025_) C_out[296] <= \acc_wires[6] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[297] <= 1'h0;
    else if (_0025_) C_out[297] <= \acc_wires[6] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[298] <= 1'h0;
    else if (_0025_) C_out[298] <= \acc_wires[6] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[299] <= 1'h0;
    else if (_0025_) C_out[299] <= \acc_wires[6] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[300] <= 1'h0;
    else if (_0025_) C_out[300] <= \acc_wires[6] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[301] <= 1'h0;
    else if (_0025_) C_out[301] <= \acc_wires[6] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[302] <= 1'h0;
    else if (_0025_) C_out[302] <= \acc_wires[6] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[303] <= 1'h0;
    else if (_0025_) C_out[303] <= \acc_wires[6] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[304] <= 1'h0;
    else if (_0025_) C_out[304] <= \acc_wires[6] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[305] <= 1'h0;
    else if (_0025_) C_out[305] <= \acc_wires[6] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[306] <= 1'h0;
    else if (_0025_) C_out[306] <= \acc_wires[6] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[307] <= 1'h0;
    else if (_0025_) C_out[307] <= \acc_wires[6] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[308] <= 1'h0;
    else if (_0025_) C_out[308] <= \acc_wires[6] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[309] <= 1'h0;
    else if (_0025_) C_out[309] <= \acc_wires[6] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[310] <= 1'h0;
    else if (_0025_) C_out[310] <= \acc_wires[6] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[311] <= 1'h0;
    else if (_0025_) C_out[311] <= \acc_wires[6] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[312] <= 1'h0;
    else if (_0025_) C_out[312] <= \acc_wires[6] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[313] <= 1'h0;
    else if (_0025_) C_out[313] <= \acc_wires[6] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[314] <= 1'h0;
    else if (_0025_) C_out[314] <= \acc_wires[6] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[315] <= 1'h0;
    else if (_0025_) C_out[315] <= \acc_wires[6] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[316] <= 1'h0;
    else if (_0025_) C_out[316] <= \acc_wires[6] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[317] <= 1'h0;
    else if (_0025_) C_out[317] <= \acc_wires[6] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[318] <= 1'h0;
    else if (_0025_) C_out[318] <= \acc_wires[6] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[319] <= 1'h0;
    else if (_0025_) C_out[319] <= \acc_wires[6] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[320] <= 1'h0;
    else if (_0025_) C_out[320] <= \acc_wires[5] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[321] <= 1'h0;
    else if (_0025_) C_out[321] <= \acc_wires[5] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[322] <= 1'h0;
    else if (_0025_) C_out[322] <= \acc_wires[5] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[323] <= 1'h0;
    else if (_0025_) C_out[323] <= \acc_wires[5] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[324] <= 1'h0;
    else if (_0025_) C_out[324] <= \acc_wires[5] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[325] <= 1'h0;
    else if (_0025_) C_out[325] <= \acc_wires[5] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[326] <= 1'h0;
    else if (_0025_) C_out[326] <= \acc_wires[5] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[327] <= 1'h0;
    else if (_0025_) C_out[327] <= \acc_wires[5] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[328] <= 1'h0;
    else if (_0025_) C_out[328] <= \acc_wires[5] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[329] <= 1'h0;
    else if (_0025_) C_out[329] <= \acc_wires[5] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[330] <= 1'h0;
    else if (_0025_) C_out[330] <= \acc_wires[5] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[331] <= 1'h0;
    else if (_0025_) C_out[331] <= \acc_wires[5] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[332] <= 1'h0;
    else if (_0025_) C_out[332] <= \acc_wires[5] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[333] <= 1'h0;
    else if (_0025_) C_out[333] <= \acc_wires[5] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[334] <= 1'h0;
    else if (_0025_) C_out[334] <= \acc_wires[5] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[335] <= 1'h0;
    else if (_0025_) C_out[335] <= \acc_wires[5] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[336] <= 1'h0;
    else if (_0025_) C_out[336] <= \acc_wires[5] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[337] <= 1'h0;
    else if (_0025_) C_out[337] <= \acc_wires[5] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[338] <= 1'h0;
    else if (_0025_) C_out[338] <= \acc_wires[5] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[339] <= 1'h0;
    else if (_0025_) C_out[339] <= \acc_wires[5] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[340] <= 1'h0;
    else if (_0025_) C_out[340] <= \acc_wires[5] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[341] <= 1'h0;
    else if (_0025_) C_out[341] <= \acc_wires[5] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[342] <= 1'h0;
    else if (_0025_) C_out[342] <= \acc_wires[5] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[343] <= 1'h0;
    else if (_0025_) C_out[343] <= \acc_wires[5] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[344] <= 1'h0;
    else if (_0025_) C_out[344] <= \acc_wires[5] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[345] <= 1'h0;
    else if (_0025_) C_out[345] <= \acc_wires[5] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[346] <= 1'h0;
    else if (_0025_) C_out[346] <= \acc_wires[5] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[347] <= 1'h0;
    else if (_0025_) C_out[347] <= \acc_wires[5] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[348] <= 1'h0;
    else if (_0025_) C_out[348] <= \acc_wires[5] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[349] <= 1'h0;
    else if (_0025_) C_out[349] <= \acc_wires[5] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[350] <= 1'h0;
    else if (_0025_) C_out[350] <= \acc_wires[5] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[351] <= 1'h0;
    else if (_0025_) C_out[351] <= \acc_wires[5] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[352] <= 1'h0;
    else if (_0025_) C_out[352] <= \acc_wires[4] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[353] <= 1'h0;
    else if (_0025_) C_out[353] <= \acc_wires[4] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[354] <= 1'h0;
    else if (_0025_) C_out[354] <= \acc_wires[4] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[355] <= 1'h0;
    else if (_0025_) C_out[355] <= \acc_wires[4] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[356] <= 1'h0;
    else if (_0025_) C_out[356] <= \acc_wires[4] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[357] <= 1'h0;
    else if (_0025_) C_out[357] <= \acc_wires[4] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[358] <= 1'h0;
    else if (_0025_) C_out[358] <= \acc_wires[4] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[359] <= 1'h0;
    else if (_0025_) C_out[359] <= \acc_wires[4] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[360] <= 1'h0;
    else if (_0025_) C_out[360] <= \acc_wires[4] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[361] <= 1'h0;
    else if (_0025_) C_out[361] <= \acc_wires[4] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[362] <= 1'h0;
    else if (_0025_) C_out[362] <= \acc_wires[4] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[363] <= 1'h0;
    else if (_0025_) C_out[363] <= \acc_wires[4] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[364] <= 1'h0;
    else if (_0025_) C_out[364] <= \acc_wires[4] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[365] <= 1'h0;
    else if (_0025_) C_out[365] <= \acc_wires[4] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[366] <= 1'h0;
    else if (_0025_) C_out[366] <= \acc_wires[4] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[367] <= 1'h0;
    else if (_0025_) C_out[367] <= \acc_wires[4] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[368] <= 1'h0;
    else if (_0025_) C_out[368] <= \acc_wires[4] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[369] <= 1'h0;
    else if (_0025_) C_out[369] <= \acc_wires[4] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[370] <= 1'h0;
    else if (_0025_) C_out[370] <= \acc_wires[4] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[371] <= 1'h0;
    else if (_0025_) C_out[371] <= \acc_wires[4] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[372] <= 1'h0;
    else if (_0025_) C_out[372] <= \acc_wires[4] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[373] <= 1'h0;
    else if (_0025_) C_out[373] <= \acc_wires[4] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[374] <= 1'h0;
    else if (_0025_) C_out[374] <= \acc_wires[4] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[375] <= 1'h0;
    else if (_0025_) C_out[375] <= \acc_wires[4] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[376] <= 1'h0;
    else if (_0025_) C_out[376] <= \acc_wires[4] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[377] <= 1'h0;
    else if (_0025_) C_out[377] <= \acc_wires[4] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[378] <= 1'h0;
    else if (_0025_) C_out[378] <= \acc_wires[4] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[379] <= 1'h0;
    else if (_0025_) C_out[379] <= \acc_wires[4] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[380] <= 1'h0;
    else if (_0025_) C_out[380] <= \acc_wires[4] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[381] <= 1'h0;
    else if (_0025_) C_out[381] <= \acc_wires[4] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[382] <= 1'h0;
    else if (_0025_) C_out[382] <= \acc_wires[4] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[383] <= 1'h0;
    else if (_0025_) C_out[383] <= \acc_wires[4] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[384] <= 1'h0;
    else if (_0025_) C_out[384] <= \acc_wires[3] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[385] <= 1'h0;
    else if (_0025_) C_out[385] <= \acc_wires[3] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[386] <= 1'h0;
    else if (_0025_) C_out[386] <= \acc_wires[3] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[387] <= 1'h0;
    else if (_0025_) C_out[387] <= \acc_wires[3] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[388] <= 1'h0;
    else if (_0025_) C_out[388] <= \acc_wires[3] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[389] <= 1'h0;
    else if (_0025_) C_out[389] <= \acc_wires[3] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[390] <= 1'h0;
    else if (_0025_) C_out[390] <= \acc_wires[3] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[391] <= 1'h0;
    else if (_0025_) C_out[391] <= \acc_wires[3] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[392] <= 1'h0;
    else if (_0025_) C_out[392] <= \acc_wires[3] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[393] <= 1'h0;
    else if (_0025_) C_out[393] <= \acc_wires[3] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[394] <= 1'h0;
    else if (_0025_) C_out[394] <= \acc_wires[3] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[395] <= 1'h0;
    else if (_0025_) C_out[395] <= \acc_wires[3] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[396] <= 1'h0;
    else if (_0025_) C_out[396] <= \acc_wires[3] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[397] <= 1'h0;
    else if (_0025_) C_out[397] <= \acc_wires[3] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[398] <= 1'h0;
    else if (_0025_) C_out[398] <= \acc_wires[3] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[399] <= 1'h0;
    else if (_0025_) C_out[399] <= \acc_wires[3] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[400] <= 1'h0;
    else if (_0025_) C_out[400] <= \acc_wires[3] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[401] <= 1'h0;
    else if (_0025_) C_out[401] <= \acc_wires[3] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[402] <= 1'h0;
    else if (_0025_) C_out[402] <= \acc_wires[3] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[403] <= 1'h0;
    else if (_0025_) C_out[403] <= \acc_wires[3] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[404] <= 1'h0;
    else if (_0025_) C_out[404] <= \acc_wires[3] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[405] <= 1'h0;
    else if (_0025_) C_out[405] <= \acc_wires[3] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[406] <= 1'h0;
    else if (_0025_) C_out[406] <= \acc_wires[3] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[407] <= 1'h0;
    else if (_0025_) C_out[407] <= \acc_wires[3] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[408] <= 1'h0;
    else if (_0025_) C_out[408] <= \acc_wires[3] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[409] <= 1'h0;
    else if (_0025_) C_out[409] <= \acc_wires[3] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[410] <= 1'h0;
    else if (_0025_) C_out[410] <= \acc_wires[3] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[411] <= 1'h0;
    else if (_0025_) C_out[411] <= \acc_wires[3] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[412] <= 1'h0;
    else if (_0025_) C_out[412] <= \acc_wires[3] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[413] <= 1'h0;
    else if (_0025_) C_out[413] <= \acc_wires[3] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[414] <= 1'h0;
    else if (_0025_) C_out[414] <= \acc_wires[3] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[415] <= 1'h0;
    else if (_0025_) C_out[415] <= \acc_wires[3] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[416] <= 1'h0;
    else if (_0025_) C_out[416] <= \acc_wires[2] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[417] <= 1'h0;
    else if (_0025_) C_out[417] <= \acc_wires[2] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[418] <= 1'h0;
    else if (_0025_) C_out[418] <= \acc_wires[2] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[419] <= 1'h0;
    else if (_0025_) C_out[419] <= \acc_wires[2] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[420] <= 1'h0;
    else if (_0025_) C_out[420] <= \acc_wires[2] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[421] <= 1'h0;
    else if (_0025_) C_out[421] <= \acc_wires[2] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[422] <= 1'h0;
    else if (_0025_) C_out[422] <= \acc_wires[2] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[423] <= 1'h0;
    else if (_0025_) C_out[423] <= \acc_wires[2] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[424] <= 1'h0;
    else if (_0025_) C_out[424] <= \acc_wires[2] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[425] <= 1'h0;
    else if (_0025_) C_out[425] <= \acc_wires[2] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[426] <= 1'h0;
    else if (_0025_) C_out[426] <= \acc_wires[2] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[427] <= 1'h0;
    else if (_0025_) C_out[427] <= \acc_wires[2] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[428] <= 1'h0;
    else if (_0025_) C_out[428] <= \acc_wires[2] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[429] <= 1'h0;
    else if (_0025_) C_out[429] <= \acc_wires[2] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[430] <= 1'h0;
    else if (_0025_) C_out[430] <= \acc_wires[2] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[431] <= 1'h0;
    else if (_0025_) C_out[431] <= \acc_wires[2] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[432] <= 1'h0;
    else if (_0025_) C_out[432] <= \acc_wires[2] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[433] <= 1'h0;
    else if (_0025_) C_out[433] <= \acc_wires[2] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[434] <= 1'h0;
    else if (_0025_) C_out[434] <= \acc_wires[2] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[435] <= 1'h0;
    else if (_0025_) C_out[435] <= \acc_wires[2] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[436] <= 1'h0;
    else if (_0025_) C_out[436] <= \acc_wires[2] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[437] <= 1'h0;
    else if (_0025_) C_out[437] <= \acc_wires[2] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[438] <= 1'h0;
    else if (_0025_) C_out[438] <= \acc_wires[2] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[439] <= 1'h0;
    else if (_0025_) C_out[439] <= \acc_wires[2] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[440] <= 1'h0;
    else if (_0025_) C_out[440] <= \acc_wires[2] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[441] <= 1'h0;
    else if (_0025_) C_out[441] <= \acc_wires[2] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[442] <= 1'h0;
    else if (_0025_) C_out[442] <= \acc_wires[2] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[443] <= 1'h0;
    else if (_0025_) C_out[443] <= \acc_wires[2] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[444] <= 1'h0;
    else if (_0025_) C_out[444] <= \acc_wires[2] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[445] <= 1'h0;
    else if (_0025_) C_out[445] <= \acc_wires[2] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[446] <= 1'h0;
    else if (_0025_) C_out[446] <= \acc_wires[2] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[447] <= 1'h0;
    else if (_0025_) C_out[447] <= \acc_wires[2] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[448] <= 1'h0;
    else if (_0025_) C_out[448] <= \acc_wires[1] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[449] <= 1'h0;
    else if (_0025_) C_out[449] <= \acc_wires[1] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[450] <= 1'h0;
    else if (_0025_) C_out[450] <= \acc_wires[1] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[451] <= 1'h0;
    else if (_0025_) C_out[451] <= \acc_wires[1] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[452] <= 1'h0;
    else if (_0025_) C_out[452] <= \acc_wires[1] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[453] <= 1'h0;
    else if (_0025_) C_out[453] <= \acc_wires[1] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[454] <= 1'h0;
    else if (_0025_) C_out[454] <= \acc_wires[1] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[455] <= 1'h0;
    else if (_0025_) C_out[455] <= \acc_wires[1] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[456] <= 1'h0;
    else if (_0025_) C_out[456] <= \acc_wires[1] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[457] <= 1'h0;
    else if (_0025_) C_out[457] <= \acc_wires[1] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[458] <= 1'h0;
    else if (_0025_) C_out[458] <= \acc_wires[1] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[459] <= 1'h0;
    else if (_0025_) C_out[459] <= \acc_wires[1] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[460] <= 1'h0;
    else if (_0025_) C_out[460] <= \acc_wires[1] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[461] <= 1'h0;
    else if (_0025_) C_out[461] <= \acc_wires[1] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[462] <= 1'h0;
    else if (_0025_) C_out[462] <= \acc_wires[1] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[463] <= 1'h0;
    else if (_0025_) C_out[463] <= \acc_wires[1] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[464] <= 1'h0;
    else if (_0025_) C_out[464] <= \acc_wires[1] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[465] <= 1'h0;
    else if (_0025_) C_out[465] <= \acc_wires[1] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[466] <= 1'h0;
    else if (_0025_) C_out[466] <= \acc_wires[1] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[467] <= 1'h0;
    else if (_0025_) C_out[467] <= \acc_wires[1] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[468] <= 1'h0;
    else if (_0025_) C_out[468] <= \acc_wires[1] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[469] <= 1'h0;
    else if (_0025_) C_out[469] <= \acc_wires[1] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[470] <= 1'h0;
    else if (_0025_) C_out[470] <= \acc_wires[1] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[471] <= 1'h0;
    else if (_0025_) C_out[471] <= \acc_wires[1] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[472] <= 1'h0;
    else if (_0025_) C_out[472] <= \acc_wires[1] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[473] <= 1'h0;
    else if (_0025_) C_out[473] <= \acc_wires[1] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[474] <= 1'h0;
    else if (_0025_) C_out[474] <= \acc_wires[1] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[475] <= 1'h0;
    else if (_0025_) C_out[475] <= \acc_wires[1] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[476] <= 1'h0;
    else if (_0025_) C_out[476] <= \acc_wires[1] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[477] <= 1'h0;
    else if (_0025_) C_out[477] <= \acc_wires[1] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[478] <= 1'h0;
    else if (_0025_) C_out[478] <= \acc_wires[1] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[479] <= 1'h0;
    else if (_0025_) C_out[479] <= \acc_wires[1] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[480] <= 1'h0;
    else if (_0025_) C_out[480] <= \acc_wires[0] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[481] <= 1'h0;
    else if (_0025_) C_out[481] <= \acc_wires[0] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[482] <= 1'h0;
    else if (_0025_) C_out[482] <= \acc_wires[0] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[483] <= 1'h0;
    else if (_0025_) C_out[483] <= \acc_wires[0] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[484] <= 1'h0;
    else if (_0025_) C_out[484] <= \acc_wires[0] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[485] <= 1'h0;
    else if (_0025_) C_out[485] <= \acc_wires[0] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[486] <= 1'h0;
    else if (_0025_) C_out[486] <= \acc_wires[0] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[487] <= 1'h0;
    else if (_0025_) C_out[487] <= \acc_wires[0] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[488] <= 1'h0;
    else if (_0025_) C_out[488] <= \acc_wires[0] [8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[489] <= 1'h0;
    else if (_0025_) C_out[489] <= \acc_wires[0] [9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[490] <= 1'h0;
    else if (_0025_) C_out[490] <= \acc_wires[0] [10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[491] <= 1'h0;
    else if (_0025_) C_out[491] <= \acc_wires[0] [11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[492] <= 1'h0;
    else if (_0025_) C_out[492] <= \acc_wires[0] [12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[493] <= 1'h0;
    else if (_0025_) C_out[493] <= \acc_wires[0] [13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[494] <= 1'h0;
    else if (_0025_) C_out[494] <= \acc_wires[0] [14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[495] <= 1'h0;
    else if (_0025_) C_out[495] <= \acc_wires[0] [15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[496] <= 1'h0;
    else if (_0025_) C_out[496] <= \acc_wires[0] [16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[497] <= 1'h0;
    else if (_0025_) C_out[497] <= \acc_wires[0] [17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[498] <= 1'h0;
    else if (_0025_) C_out[498] <= \acc_wires[0] [18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[499] <= 1'h0;
    else if (_0025_) C_out[499] <= \acc_wires[0] [19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[500] <= 1'h0;
    else if (_0025_) C_out[500] <= \acc_wires[0] [20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[501] <= 1'h0;
    else if (_0025_) C_out[501] <= \acc_wires[0] [21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[502] <= 1'h0;
    else if (_0025_) C_out[502] <= \acc_wires[0] [22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[503] <= 1'h0;
    else if (_0025_) C_out[503] <= \acc_wires[0] [23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[504] <= 1'h0;
    else if (_0025_) C_out[504] <= \acc_wires[0] [24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[505] <= 1'h0;
    else if (_0025_) C_out[505] <= \acc_wires[0] [25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[506] <= 1'h0;
    else if (_0025_) C_out[506] <= \acc_wires[0] [26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[507] <= 1'h0;
    else if (_0025_) C_out[507] <= \acc_wires[0] [27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[508] <= 1'h0;
    else if (_0025_) C_out[508] <= \acc_wires[0] [28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[509] <= 1'h0;
    else if (_0025_) C_out[509] <= \acc_wires[0] [29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[510] <= 1'h0;
    else if (_0025_) C_out[510] <= \acc_wires[0] [30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) C_out[511] <= 1'h0;
    else if (_0025_) C_out[511] <= \acc_wires[0] [31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) running <= 1'h0;
    else running <= _0027_;
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[0] [0] <= 1'h0;
      else \A_shift[0] [0] <= \A_shift[1] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[0] [1] <= 1'h0;
      else \A_shift[0] [1] <= \A_shift[1] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[0] [2] <= 1'h0;
      else \A_shift[0] [2] <= \A_shift[1] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[0] [3] <= 1'h0;
      else \A_shift[0] [3] <= \A_shift[1] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[0] [4] <= 1'h0;
      else \A_shift[0] [4] <= \A_shift[1] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[0] [5] <= 1'h0;
      else \A_shift[0] [5] <= \A_shift[1] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[0] [6] <= 1'h0;
      else \A_shift[0] [6] <= \A_shift[1] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[0] [7] <= 1'h0;
      else \A_shift[0] [7] <= \A_shift[1] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[1] [0] <= 1'h0;
      else \A_shift[1] [0] <= \A_shift[2] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[1] [1] <= 1'h0;
      else \A_shift[1] [1] <= \A_shift[2] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[1] [2] <= 1'h0;
      else \A_shift[1] [2] <= \A_shift[2] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[1] [3] <= 1'h0;
      else \A_shift[1] [3] <= \A_shift[2] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[1] [4] <= 1'h0;
      else \A_shift[1] [4] <= \A_shift[2] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[1] [5] <= 1'h0;
      else \A_shift[1] [5] <= \A_shift[2] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[1] [6] <= 1'h0;
      else \A_shift[1] [6] <= \A_shift[2] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[1] [7] <= 1'h0;
      else \A_shift[1] [7] <= \A_shift[2] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[2] [0] <= 1'h0;
      else \A_shift[2] [0] <= \A_shift[3] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[2] [1] <= 1'h0;
      else \A_shift[2] [1] <= \A_shift[3] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[2] [2] <= 1'h0;
      else \A_shift[2] [2] <= \A_shift[3] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[2] [3] <= 1'h0;
      else \A_shift[2] [3] <= \A_shift[3] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[2] [4] <= 1'h0;
      else \A_shift[2] [4] <= \A_shift[3] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[2] [5] <= 1'h0;
      else \A_shift[2] [5] <= \A_shift[3] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[2] [6] <= 1'h0;
      else \A_shift[2] [6] <= \A_shift[3] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[2] [7] <= 1'h0;
      else \A_shift[2] [7] <= \A_shift[3] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[0] <= 1'h0;
    else if (!_0073_) cycle_cnt[0] <= _0024_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[1] <= 1'h0;
    else if (!_0073_) cycle_cnt[1] <= _0024_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[2] <= 1'h0;
    else if (!_0073_) cycle_cnt[2] <= _0024_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[3] <= 1'h0;
    else if (!_0073_) cycle_cnt[3] <= _0024_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[4] <= 1'h0;
    else if (!_0073_) cycle_cnt[4] <= _0024_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[5] <= 1'h0;
    else if (!_0073_) cycle_cnt[5] <= _0024_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[6] <= 1'h0;
    else if (!_0073_) cycle_cnt[6] <= _0024_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[7] <= 1'h0;
    else if (!_0073_) cycle_cnt[7] <= _0024_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[8] <= 1'h0;
    else if (!_0073_) cycle_cnt[8] <= _0024_[8];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[9] <= 1'h0;
    else if (!_0073_) cycle_cnt[9] <= _0024_[9];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[10] <= 1'h0;
    else if (!_0073_) cycle_cnt[10] <= _0024_[10];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[11] <= 1'h0;
    else if (!_0073_) cycle_cnt[11] <= _0024_[11];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[12] <= 1'h0;
    else if (!_0073_) cycle_cnt[12] <= _0024_[12];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[13] <= 1'h0;
    else if (!_0073_) cycle_cnt[13] <= _0024_[13];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[14] <= 1'h0;
    else if (!_0073_) cycle_cnt[14] <= _0024_[14];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[15] <= 1'h0;
    else if (!_0073_) cycle_cnt[15] <= _0024_[15];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[16] <= 1'h0;
    else if (!_0073_) cycle_cnt[16] <= _0024_[16];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[17] <= 1'h0;
    else if (!_0073_) cycle_cnt[17] <= _0024_[17];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[18] <= 1'h0;
    else if (!_0073_) cycle_cnt[18] <= _0024_[18];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[19] <= 1'h0;
    else if (!_0073_) cycle_cnt[19] <= _0024_[19];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[20] <= 1'h0;
    else if (!_0073_) cycle_cnt[20] <= _0024_[20];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[21] <= 1'h0;
    else if (!_0073_) cycle_cnt[21] <= _0024_[21];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[22] <= 1'h0;
    else if (!_0073_) cycle_cnt[22] <= _0024_[22];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[23] <= 1'h0;
    else if (!_0073_) cycle_cnt[23] <= _0024_[23];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[24] <= 1'h0;
    else if (!_0073_) cycle_cnt[24] <= _0024_[24];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[25] <= 1'h0;
    else if (!_0073_) cycle_cnt[25] <= _0024_[25];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[26] <= 1'h0;
    else if (!_0073_) cycle_cnt[26] <= _0024_[26];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[27] <= 1'h0;
    else if (!_0073_) cycle_cnt[27] <= _0024_[27];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[28] <= 1'h0;
    else if (!_0073_) cycle_cnt[28] <= _0024_[28];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[29] <= 1'h0;
    else if (!_0073_) cycle_cnt[29] <= _0024_[29];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[30] <= 1'h0;
    else if (!_0073_) cycle_cnt[30] <= _0024_[30];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) cycle_cnt[31] <= 1'h0;
    else if (!_0073_) cycle_cnt[31] <= _0024_[31];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[3] [0] <= _0009_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[3] [1] <= _0009_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[3] [2] <= _0009_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[3] [3] <= _0009_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[3] [4] <= _0009_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[3] [5] <= _0009_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[3] [6] <= _0009_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[3] [7] <= _0009_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[4] [0] <= _0010_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[4] [1] <= _0010_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[4] [2] <= _0010_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[4] [3] <= _0010_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[4] [4] <= _0010_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[4] [5] <= _0010_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[4] [6] <= _0010_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[4] [7] <= _0010_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[5] [0] <= _0011_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[5] [1] <= _0011_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[5] [2] <= _0011_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[5] [3] <= _0011_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[5] [4] <= _0011_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[5] [5] <= _0011_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[5] [6] <= _0011_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[5] [7] <= _0011_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[8] [0] <= 1'h0;
      else \A_shift[8] [0] <= \A_shift[9] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[8] [1] <= 1'h0;
      else \A_shift[8] [1] <= \A_shift[9] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[8] [2] <= 1'h0;
      else \A_shift[8] [2] <= \A_shift[9] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[8] [3] <= 1'h0;
      else \A_shift[8] [3] <= \A_shift[9] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[8] [4] <= 1'h0;
      else \A_shift[8] [4] <= \A_shift[9] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[8] [5] <= 1'h0;
      else \A_shift[8] [5] <= \A_shift[9] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[8] [6] <= 1'h0;
      else \A_shift[8] [6] <= \A_shift[9] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[8] [7] <= 1'h0;
      else \A_shift[8] [7] <= \A_shift[9] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[9] [0] <= 1'h0;
      else \A_shift[9] [0] <= \A_shift[10] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[9] [1] <= 1'h0;
      else \A_shift[9] [1] <= \A_shift[10] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[9] [2] <= 1'h0;
      else \A_shift[9] [2] <= \A_shift[10] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[9] [3] <= 1'h0;
      else \A_shift[9] [3] <= \A_shift[10] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[9] [4] <= 1'h0;
      else \A_shift[9] [4] <= \A_shift[10] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[9] [5] <= 1'h0;
      else \A_shift[9] [5] <= \A_shift[10] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[9] [6] <= 1'h0;
      else \A_shift[9] [6] <= \A_shift[10] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[9] [7] <= 1'h0;
      else \A_shift[9] [7] <= \A_shift[10] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[10] [0] <= _0000_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[10] [1] <= _0000_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[10] [2] <= _0000_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[10] [3] <= _0000_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[10] [4] <= _0000_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[10] [5] <= _0000_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[10] [6] <= _0000_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[10] [7] <= _0000_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[11] [0] <= _0001_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[11] [1] <= _0001_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[11] [2] <= _0001_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[11] [3] <= _0001_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[11] [4] <= _0001_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[11] [5] <= _0001_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[11] [6] <= _0001_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[11] [7] <= _0001_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[12] [0] <= _0002_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[12] [1] <= _0002_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[12] [2] <= _0002_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[12] [3] <= _0002_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[12] [4] <= _0002_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[12] [5] <= _0002_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[12] [6] <= _0002_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[12] [7] <= _0002_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[21] [0] <= 1'h0;
      else \B_shift[21] [0] <= B_in[112];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[21] [1] <= 1'h0;
      else \B_shift[21] [1] <= B_in[113];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[21] [2] <= 1'h0;
      else \B_shift[21] [2] <= B_in[114];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[21] [3] <= 1'h0;
      else \B_shift[21] [3] <= B_in[115];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[21] [4] <= 1'h0;
      else \B_shift[21] [4] <= B_in[116];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[21] [5] <= 1'h0;
      else \B_shift[21] [5] <= B_in[117];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[21] [6] <= 1'h0;
      else \B_shift[21] [6] <= B_in[118];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[21] [7] <= 1'h0;
      else \B_shift[21] [7] <= B_in[119];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[16] [0] <= 1'h0;
      else \A_shift[16] [0] <= \A_shift[17] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[16] [1] <= 1'h0;
      else \A_shift[16] [1] <= \A_shift[17] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[16] [2] <= 1'h0;
      else \A_shift[16] [2] <= \A_shift[17] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[16] [3] <= 1'h0;
      else \A_shift[16] [3] <= \A_shift[17] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[16] [4] <= 1'h0;
      else \A_shift[16] [4] <= \A_shift[17] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[16] [5] <= 1'h0;
      else \A_shift[16] [5] <= \A_shift[17] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[16] [6] <= 1'h0;
      else \A_shift[16] [6] <= \A_shift[17] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \A_shift[16] [7] <= 1'h0;
      else \A_shift[16] [7] <= \A_shift[17] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[17] [0] <= _0003_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[17] [1] <= _0003_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[17] [2] <= _0003_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[17] [3] <= _0003_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[17] [4] <= _0003_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[17] [5] <= _0003_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[17] [6] <= _0003_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[17] [7] <= _0003_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[18] [0] <= _0004_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[18] [1] <= _0004_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[18] [2] <= _0004_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[18] [3] <= _0004_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[18] [4] <= _0004_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[18] [5] <= _0004_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[18] [6] <= _0004_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[18] [7] <= _0004_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[19] [0] <= _0005_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[19] [1] <= _0005_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[19] [2] <= _0005_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[19] [3] <= _0005_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[19] [4] <= _0005_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[19] [5] <= _0005_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[19] [6] <= _0005_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[19] [7] <= _0005_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[18] [0] <= 1'h0;
      else \B_shift[18] [0] <= B_in[104];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[18] [1] <= 1'h0;
      else \B_shift[18] [1] <= B_in[105];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[18] [2] <= 1'h0;
      else \B_shift[18] [2] <= B_in[106];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[18] [3] <= 1'h0;
      else \B_shift[18] [3] <= B_in[107];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[18] [4] <= 1'h0;
      else \B_shift[18] [4] <= B_in[108];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[18] [5] <= 1'h0;
      else \B_shift[18] [5] <= B_in[109];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[18] [6] <= 1'h0;
      else \B_shift[18] [6] <= B_in[110];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[18] [7] <= 1'h0;
      else \B_shift[18] [7] <= B_in[111];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[24] [0] <= _0006_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[24] [1] <= _0006_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[24] [2] <= _0006_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[24] [3] <= _0006_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[24] [4] <= _0006_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[24] [5] <= _0006_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[24] [6] <= _0006_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[24] [7] <= _0006_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[25] [0] <= _0007_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[25] [1] <= _0007_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[25] [2] <= _0007_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[25] [3] <= _0007_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[25] [4] <= _0007_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[25] [5] <= _0007_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[25] [6] <= _0007_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[25] [7] <= _0007_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[26] [0] <= _0008_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[26] [1] <= _0008_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[26] [2] <= _0008_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[26] [3] <= _0008_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[26] [4] <= _0008_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[26] [5] <= _0008_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[26] [6] <= _0008_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \A_shift[26] [7] <= _0008_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[15] [0] <= 1'h0;
      else \B_shift[15] [0] <= B_in[96];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[15] [1] <= 1'h0;
      else \B_shift[15] [1] <= B_in[97];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[15] [2] <= 1'h0;
      else \B_shift[15] [2] <= B_in[98];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[15] [3] <= 1'h0;
      else \B_shift[15] [3] <= B_in[99];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[15] [4] <= 1'h0;
      else \B_shift[15] [4] <= B_in[100];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[15] [5] <= 1'h0;
      else \B_shift[15] [5] <= B_in[101];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[15] [6] <= 1'h0;
      else \B_shift[15] [6] <= B_in[102];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \B_shift[15] [7] <= 1'h0;
      else \B_shift[15] [7] <= B_in[103];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[0] [0] <= 1'h0;
      else \B_shift[0] [0] <= \B_shift[4] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[0] [1] <= 1'h0;
      else \B_shift[0] [1] <= \B_shift[4] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[0] [2] <= 1'h0;
      else \B_shift[0] [2] <= \B_shift[4] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[0] [3] <= 1'h0;
      else \B_shift[0] [3] <= \B_shift[4] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[0] [4] <= 1'h0;
      else \B_shift[0] [4] <= \B_shift[4] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[0] [5] <= 1'h0;
      else \B_shift[0] [5] <= \B_shift[4] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[0] [6] <= 1'h0;
      else \B_shift[0] [6] <= \B_shift[4] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[0] [7] <= 1'h0;
      else \B_shift[0] [7] <= \B_shift[4] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[1] [0] <= 1'h0;
      else \B_shift[1] [0] <= \B_shift[5] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[1] [1] <= 1'h0;
      else \B_shift[1] [1] <= \B_shift[5] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[1] [2] <= 1'h0;
      else \B_shift[1] [2] <= \B_shift[5] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[1] [3] <= 1'h0;
      else \B_shift[1] [3] <= \B_shift[5] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[1] [4] <= 1'h0;
      else \B_shift[1] [4] <= \B_shift[5] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[1] [5] <= 1'h0;
      else \B_shift[1] [5] <= \B_shift[5] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[1] [6] <= 1'h0;
      else \B_shift[1] [6] <= \B_shift[5] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[1] [7] <= 1'h0;
      else \B_shift[1] [7] <= \B_shift[5] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[2] [0] <= 1'h0;
      else \B_shift[2] [0] <= \B_shift[6] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[2] [1] <= 1'h0;
      else \B_shift[2] [1] <= \B_shift[6] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[2] [2] <= 1'h0;
      else \B_shift[2] [2] <= \B_shift[6] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[2] [3] <= 1'h0;
      else \B_shift[2] [3] <= \B_shift[6] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[2] [4] <= 1'h0;
      else \B_shift[2] [4] <= \B_shift[6] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[2] [5] <= 1'h0;
      else \B_shift[2] [5] <= \B_shift[6] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[2] [6] <= 1'h0;
      else \B_shift[2] [6] <= \B_shift[6] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[2] [7] <= 1'h0;
      else \B_shift[2] [7] <= \B_shift[6] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[4] [0] <= 1'h0;
      else \B_shift[4] [0] <= \B_shift[8] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[4] [1] <= 1'h0;
      else \B_shift[4] [1] <= \B_shift[8] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[4] [2] <= 1'h0;
      else \B_shift[4] [2] <= \B_shift[8] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[4] [3] <= 1'h0;
      else \B_shift[4] [3] <= \B_shift[8] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[4] [4] <= 1'h0;
      else \B_shift[4] [4] <= \B_shift[8] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[4] [5] <= 1'h0;
      else \B_shift[4] [5] <= \B_shift[8] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[4] [6] <= 1'h0;
      else \B_shift[4] [6] <= \B_shift[8] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[4] [7] <= 1'h0;
      else \B_shift[4] [7] <= \B_shift[8] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[5] [0] <= 1'h0;
      else \B_shift[5] [0] <= \B_shift[9] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[5] [1] <= 1'h0;
      else \B_shift[5] [1] <= \B_shift[9] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[5] [2] <= 1'h0;
      else \B_shift[5] [2] <= \B_shift[9] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[5] [3] <= 1'h0;
      else \B_shift[5] [3] <= \B_shift[9] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[5] [4] <= 1'h0;
      else \B_shift[5] [4] <= \B_shift[9] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[5] [5] <= 1'h0;
      else \B_shift[5] [5] <= \B_shift[9] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[5] [6] <= 1'h0;
      else \B_shift[5] [6] <= \B_shift[9] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[5] [7] <= 1'h0;
      else \B_shift[5] [7] <= \B_shift[9] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[3] [0] <= _0020_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[3] [1] <= _0020_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[3] [2] <= _0020_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[3] [3] <= _0020_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[3] [4] <= _0020_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[3] [5] <= _0020_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[3] [6] <= _0020_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[3] [7] <= _0020_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[6] [0] <= _0021_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[6] [1] <= _0021_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[6] [2] <= _0021_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[6] [3] <= _0021_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[6] [4] <= _0021_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[6] [5] <= _0021_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[6] [6] <= _0021_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[6] [7] <= _0021_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[8] [0] <= 1'h0;
      else \B_shift[8] [0] <= \B_shift[12] [0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[8] [1] <= 1'h0;
      else \B_shift[8] [1] <= \B_shift[12] [1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[8] [2] <= 1'h0;
      else \B_shift[8] [2] <= \B_shift[12] [2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[8] [3] <= 1'h0;
      else \B_shift[8] [3] <= \B_shift[12] [3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[8] [4] <= 1'h0;
      else \B_shift[8] [4] <= \B_shift[12] [4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[8] [5] <= 1'h0;
      else \B_shift[8] [5] <= \B_shift[12] [5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[8] [6] <= 1'h0;
      else \B_shift[8] [6] <= \B_shift[12] [6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (_0026_) \B_shift[8] [7] <= 1'h0;
      else \B_shift[8] [7] <= \B_shift[12] [7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[7] [0] <= _0022_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[7] [1] <= _0022_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[7] [2] <= _0022_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[7] [3] <= _0022_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[7] [4] <= _0022_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[7] [5] <= _0022_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[7] [6] <= _0022_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[7] [7] <= _0022_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[9] [0] <= _0023_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[9] [1] <= _0023_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[9] [2] <= _0023_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[9] [3] <= _0023_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[9] [4] <= _0023_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[9] [5] <= _0023_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[9] [6] <= _0023_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[9] [7] <= _0023_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[10] [0] <= _0012_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[10] [1] <= _0012_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[10] [2] <= _0012_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[10] [3] <= _0012_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[10] [4] <= _0012_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[10] [5] <= _0012_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[10] [6] <= _0012_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[10] [7] <= _0012_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[11] [0] <= _0013_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[11] [1] <= _0013_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[11] [2] <= _0013_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[11] [3] <= _0013_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[11] [4] <= _0013_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[11] [5] <= _0013_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[11] [6] <= _0013_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[11] [7] <= _0013_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[12] [0] <= _0014_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[12] [1] <= _0014_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[12] [2] <= _0014_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[12] [3] <= _0014_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[12] [4] <= _0014_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[12] [5] <= _0014_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[12] [6] <= _0014_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[12] [7] <= _0014_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[13] [0] <= _0015_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[13] [1] <= _0015_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[13] [2] <= _0015_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[13] [3] <= _0015_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[13] [4] <= _0015_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[13] [5] <= _0015_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[13] [6] <= _0015_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[13] [7] <= _0015_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[14] [0] <= _0016_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[14] [1] <= _0016_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[14] [2] <= _0016_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[14] [3] <= _0016_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[14] [4] <= _0016_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[14] [5] <= _0016_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[14] [6] <= _0016_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[14] [7] <= _0016_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[16] [0] <= _0017_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[16] [1] <= _0017_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[16] [2] <= _0017_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[16] [3] <= _0017_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[16] [4] <= _0017_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[16] [5] <= _0017_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[16] [6] <= _0017_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[16] [7] <= _0017_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[17] [0] <= _0018_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[17] [1] <= _0018_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[17] [2] <= _0018_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[17] [3] <= _0018_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[17] [4] <= _0018_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[17] [5] <= _0018_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[17] [6] <= _0018_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[17] [7] <= _0018_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[20] [0] <= _0019_[0];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[20] [1] <= _0019_[1];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[20] [2] <= _0019_[2];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[20] [3] <= _0019_[3];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[20] [4] <= _0019_[4];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[20] [5] <= _0019_[5];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[20] [6] <= _0019_[6];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_) \B_shift[20] [7] <= _0019_[7];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[6] [0] <= 1'h0;
      else \A_shift[6] [0] <= A_in[120];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[6] [1] <= 1'h0;
      else \A_shift[6] [1] <= A_in[121];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[6] [2] <= 1'h0;
      else \A_shift[6] [2] <= A_in[122];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[6] [3] <= 1'h0;
      else \A_shift[6] [3] <= A_in[123];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[6] [4] <= 1'h0;
      else \A_shift[6] [4] <= A_in[124];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[6] [5] <= 1'h0;
      else \A_shift[6] [5] <= A_in[125];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[6] [6] <= 1'h0;
      else \A_shift[6] [6] <= A_in[126];
  (* src = "rtl/systolic4x4.v:98.1-141.4" *)
  always @(posedge clk)
    if (_0028_)
      if (!_0026_) \A_shift[6] [7] <= 1'h0;
      else \A_shift[6] [7] <= A_in[127];
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[0].cols[0].pe_i  (
    .A_in(\A_shift[24] ),
    .A_out(\A_outs[15] ),
    .B_in(\B_shift[3] ),
    .B_out(\B_outs[15] ),
    .acc_out(\acc_wires[15] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[0].cols[1].pe_i  (
    .A_in(\A_outs[15] ),
    .A_out(\A_outs[14] ),
    .B_in(\B_shift[2] ),
    .B_out(\B_outs[14] ),
    .acc_out(\acc_wires[14] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[0].cols[2].pe_i  (
    .A_in(\A_outs[14] ),
    .A_out(\A_outs[13] ),
    .B_in(\B_shift[1] ),
    .B_out(\B_outs[13] ),
    .acc_out(\acc_wires[13] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[0].cols[3].pe_i  (
    .A_in(\A_outs[13] ),
    .A_out(\A_outs[12] ),
    .B_in(\B_shift[0] ),
    .B_out(\B_outs[12] ),
    .acc_out(\acc_wires[12] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[1].cols[0].pe_i  (
    .A_in(\A_shift[16] ),
    .A_out(\A_outs[11] ),
    .B_in(\B_outs[15] ),
    .B_out(\B_outs[11] ),
    .acc_out(\acc_wires[11] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[1].cols[1].pe_i  (
    .A_in(\A_outs[11] ),
    .A_out(\A_outs[10] ),
    .B_in(\B_outs[14] ),
    .B_out(\B_outs[10] ),
    .acc_out(\acc_wires[10] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[1].cols[2].pe_i  (
    .A_in(\A_outs[10] ),
    .A_out(\A_outs[9] ),
    .B_in(\B_outs[13] ),
    .B_out(\B_outs[9] ),
    .acc_out(\acc_wires[9] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[1].cols[3].pe_i  (
    .A_in(\A_outs[9] ),
    .A_out(\A_outs[8] ),
    .B_in(\B_outs[12] ),
    .B_out(\B_outs[8] ),
    .acc_out(\acc_wires[8] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[2].cols[0].pe_i  (
    .A_in(\A_shift[8] ),
    .A_out(\A_outs[7] ),
    .B_in(\B_outs[11] ),
    .B_out(\B_outs[7] ),
    .acc_out(\acc_wires[7] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[2].cols[1].pe_i  (
    .A_in(\A_outs[7] ),
    .A_out(\A_outs[6] ),
    .B_in(\B_outs[10] ),
    .B_out(\B_outs[6] ),
    .acc_out(\acc_wires[6] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[2].cols[2].pe_i  (
    .A_in(\A_outs[6] ),
    .A_out(\A_outs[5] ),
    .B_in(\B_outs[9] ),
    .B_out(\B_outs[5] ),
    .acc_out(\acc_wires[5] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[2].cols[3].pe_i  (
    .A_in(\A_outs[5] ),
    .A_out(\A_outs[4] ),
    .B_in(\B_outs[8] ),
    .B_out(\B_outs[4] ),
    .acc_out(\acc_wires[4] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[3].cols[0].pe_i  (
    .A_in(\A_shift[0] ),
    .A_out(\A_outs[3] ),
    .B_in(\B_outs[7] ),
    .B_out(\B_outs[3] ),
    .acc_out(\acc_wires[3] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[3].cols[1].pe_i  (
    .A_in(\A_outs[3] ),
    .A_out(\A_outs[2] ),
    .B_in(\B_outs[6] ),
    .B_out(\B_outs[2] ),
    .acc_out(\acc_wires[2] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[3].cols[2].pe_i  (
    .A_in(\A_outs[2] ),
    .A_out(\A_outs[1] ),
    .B_in(\B_outs[5] ),
    .B_out(\B_outs[1] ),
    .acc_out(\acc_wires[1] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  (* src = "rtl/systolic4x4.v:50.15-60.14" *)
  \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC  \rows[3].cols[3].pe_i  (
    .A_in(\A_outs[1] ),
    .A_out(\A_outs[0] ),
    .B_in(\B_outs[4] ),
    .B_out(\B_outs[0] ),
    .acc_out(\acc_wires[0] ),
    .ce(running),
    .clk(clk),
    .load_acc(load_acc),
    .rst_n(rst_n)
  );
  assign \A_shift[14]  = 8'h00;
  assign \A_shift[15]  = 8'h00;
  assign \A_shift[21]  = 8'h00;
  assign \A_shift[22]  = 8'h00;
  assign \A_shift[23]  = 8'h00;
  assign \A_shift[28]  = 8'h00;
  assign \A_shift[29]  = 8'h00;
  assign \A_shift[30]  = 8'h00;
  assign \A_shift[31]  = 8'h00;
  assign \A_shift[7]  = 8'h00;
  assign \A_wires[0]  = \A_outs[1] ;
  assign \A_wires[10]  = \A_outs[11] ;
  assign \A_wires[11]  = \A_shift[16] ;
  assign \A_wires[12]  = \A_outs[13] ;
  assign \A_wires[13]  = \A_outs[14] ;
  assign \A_wires[14]  = \A_outs[15] ;
  assign \A_wires[15]  = \A_shift[24] ;
  assign \A_wires[1]  = \A_outs[2] ;
  assign \A_wires[2]  = \A_outs[3] ;
  assign \A_wires[3]  = \A_shift[0] ;
  assign \A_wires[4]  = \A_outs[5] ;
  assign \A_wires[5]  = \A_outs[6] ;
  assign \A_wires[6]  = \A_outs[7] ;
  assign \A_wires[7]  = \A_shift[8] ;
  assign \A_wires[8]  = \A_outs[9] ;
  assign \A_wires[9]  = \A_outs[10] ;
  assign \B_shift[19]  = 8'h00;
  assign \B_shift[22]  = 8'h00;
  assign \B_shift[23]  = 8'h00;
  assign \B_shift[25]  = 8'h00;
  assign \B_shift[26]  = 8'h00;
  assign \B_shift[27]  = 8'h00;
  assign \B_shift[28]  = 8'h00;
  assign \B_shift[29]  = 8'h00;
  assign \B_shift[30]  = 8'h00;
  assign \B_shift[31]  = 8'h00;
  assign \B_wires[0]  = \B_outs[4] ;
  assign \B_wires[10]  = \B_outs[14] ;
  assign \B_wires[11]  = \B_outs[15] ;
  assign \B_wires[12]  = \B_shift[0] ;
  assign \B_wires[13]  = \B_shift[1] ;
  assign \B_wires[14]  = \B_shift[2] ;
  assign \B_wires[15]  = \B_shift[3] ;
  assign \B_wires[1]  = \B_outs[5] ;
  assign \B_wires[2]  = \B_outs[6] ;
  assign \B_wires[3]  = \B_outs[7] ;
  assign \B_wires[4]  = \B_outs[8] ;
  assign \B_wires[5]  = \B_outs[9] ;
  assign \B_wires[6]  = \B_outs[10] ;
  assign \B_wires[7]  = \B_outs[11] ;
  assign \B_wires[8]  = \B_outs[12] ;
  assign \B_wires[9]  = \B_outs[13] ;
  assign ce_local = running;
endmodule

(* dynports =  1  *)
(* hdlname = "PE_MAC" *)
(* src = "rtl/pe_mac.v:1.1-64.10" *)
module \$paramod$fa674685d90c05290de176cbd2c717b5b455720d\PE_MAC (clk, rst_n, ce, A_in, B_in, load_acc, A_out, B_out, acc_out);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  wire _0689_;
  wire _0690_;
  wire _0691_;
  wire _0692_;
  wire _0693_;
  wire _0694_;
  wire _0695_;
  wire _0696_;
  wire _0697_;
  wire _0698_;
  wire _0699_;
  wire _0700_;
  wire _0701_;
  wire _0702_;
  wire _0703_;
  wire _0704_;
  wire _0705_;
  wire _0706_;
  wire _0707_;
  wire _0708_;
  wire _0709_;
  wire _0710_;
  wire _0711_;
  wire _0712_;
  wire _0713_;
  wire _0714_;
  wire _0715_;
  wire _0716_;
  wire _0717_;
  wire _0718_;
  wire _0719_;
  wire _0720_;
  wire _0721_;
  wire _0722_;
  wire _0723_;
  wire _0724_;
  wire _0725_;
  wire _0726_;
  wire _0727_;
  wire _0728_;
  (* force_downto = 32'd1 *)
  (* src = "/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:198.26-198.27" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15" *)
  wire [15:0] _0729_;
  (* force_downto = 32'd1 *)
  (* src = "/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:200.24-200.25" *)
  (* unused_bits = "2 3 4 5 6 7 8 9 10 11 12 13 14 15" *)
  wire [15:0] _0730_;
  (* force_downto = 32'd1 *)
  (* src = "/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:200.24-200.25" *)
  (* unused_bits = "3 4 5 6 7 8 9 10 11 12 13 14 15" *)
  wire [15:0] _0731_;
  (* force_downto = 32'd1 *)
  (* src = "/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:270.23-270.24" *)
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15" *)
  wire [15:0] _0732_;
  (* force_downto = 32'd1 *)
  (* src = "/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:270.26-270.27" *)
  wire [15:0] _0733_;
  (* src = "rtl/pe_mac.v:20.30-20.34" *)
  input [7:0] A_in;
  wire [7:0] A_in;
  (* src = "rtl/pe_mac.v:23.31-23.36" *)
  output [7:0] A_out;
  wire [7:0] A_out;
  (* src = "rtl/pe_mac.v:27.23-27.28" *)
  reg [7:0] A_reg;
  (* src = "rtl/pe_mac.v:21.30-21.34" *)
  input [7:0] B_in;
  wire [7:0] B_in;
  (* src = "rtl/pe_mac.v:24.31-24.36" *)
  output [7:0] B_out;
  wire [7:0] B_out;
  (* src = "rtl/pe_mac.v:28.23-28.28" *)
  reg [7:0] B_reg;
  (* src = "rtl/pe_mac.v:25.33-25.40" *)
  output [31:0] acc_out;
  wire [31:0] acc_out;
  (* src = "rtl/pe_mac.v:30.25-30.32" *)
  reg [31:0] acc_reg;
  (* src = "rtl/pe_mac.v:19.12-19.14" *)
  input ce;
  wire ce;
  (* src = "rtl/pe_mac.v:17.12-17.15" *)
  input clk;
  wire clk;
  (* src = "rtl/pe_mac.v:22.12-22.20" *)
  input load_acc;
  wire load_acc;
  (* src = "rtl/pe_mac.v:29.30-29.38" *)
  reg [15:0] prod_reg;
  (* src = "rtl/pe_mac.v:18.12-18.17" *)
  input rst_n;
  wire rst_n;
  assign _0000_ = ~load_acc;
  assign _0001_ = ~(acc_reg[0] ^ prod_reg[0]);
  assign _0697_ = _0000_ & ~(_0001_);
  assign _0002_ = acc_reg[1] ^ prod_reg[1];
  assign _0003_ = ~(acc_reg[0] & prod_reg[0]);
  assign _0004_ = _0003_ ^ _0002_;
  assign _0708_ = _0000_ & ~(_0004_);
  assign _0005_ = ~(acc_reg[2] ^ prod_reg[2]);
  assign _0006_ = acc_reg[1] & prod_reg[1];
  assign _0007_ = _0002_ & ~(_0003_);
  assign _0008_ = _0007_ | _0006_;
  assign _0009_ = _0008_ ^ _0005_;
  assign _0719_ = _0000_ & ~(_0009_);
  assign _0010_ = ~(acc_reg[3] ^ prod_reg[3]);
  assign _0011_ = ~(acc_reg[2] & prod_reg[2]);
  assign _0012_ = _0008_ & ~(_0005_);
  assign _0013_ = _0012_ | ~(_0011_);
  assign _0014_ = _0013_ ^ _0010_;
  assign _0722_ = _0000_ & ~(_0014_);
  assign _0015_ = ~(acc_reg[4] ^ prod_reg[4]);
  assign _0016_ = acc_reg[3] & prod_reg[3];
  assign _0017_ = ~(_0011_ | _0010_);
  assign _0018_ = ~(_0017_ | _0016_);
  assign _0019_ = _0010_ | _0005_;
  assign _0020_ = _0008_ & ~(_0019_);
  assign _0021_ = _0020_ | ~(_0018_);
  assign _0022_ = _0021_ ^ _0015_;
  assign _0723_ = _0000_ & ~(_0022_);
  assign _0023_ = ~(acc_reg[5] ^ prod_reg[5]);
  assign _0024_ = ~(acc_reg[4] & prod_reg[4]);
  assign _0025_ = _0021_ & ~(_0015_);
  assign _0026_ = _0025_ | ~(_0024_);
  assign _0027_ = _0026_ ^ _0023_;
  assign _0724_ = _0000_ & ~(_0027_);
  assign _0028_ = ~(acc_reg[6] ^ prod_reg[6]);
  assign _0029_ = ~_0028_;
  assign _0030_ = acc_reg[5] & prod_reg[5];
  assign _0031_ = ~(_0024_ | _0023_);
  assign _0032_ = ~(_0031_ | _0030_);
  assign _0033_ = _0023_ | _0015_;
  assign _0034_ = _0021_ & ~(_0033_);
  assign _0035_ = _0032_ & ~(_0034_);
  assign _0036_ = _0035_ ^ _0029_;
  assign _0725_ = _0000_ & ~(_0036_);
  assign _0037_ = ~(acc_reg[7] ^ prod_reg[7]);
  assign _0038_ = ~(acc_reg[6] & prod_reg[6]);
  assign _0039_ = _0029_ & ~(_0035_);
  assign _0040_ = _0039_ | ~(_0038_);
  assign _0041_ = _0040_ ^ _0037_;
  assign _0726_ = _0000_ & ~(_0041_);
  assign _0042_ = ~(acc_reg[8] ^ prod_reg[8]);
  assign _0043_ = ~_0042_;
  assign _0044_ = acc_reg[7] & prod_reg[7];
  assign _0045_ = ~(_0038_ | _0037_);
  assign _0046_ = _0045_ | _0044_;
  assign _0047_ = _0037_ | _0028_;
  assign _0048_ = ~(_0047_ | _0032_);
  assign _0049_ = _0048_ | _0046_;
  assign _0050_ = _0047_ | _0033_;
  assign _0051_ = _0021_ & ~(_0050_);
  assign _0052_ = _0051_ | _0049_;
  assign _0053_ = ~(_0052_ ^ _0043_);
  assign _0727_ = _0000_ & ~(_0053_);
  assign _0054_ = ~(acc_reg[9] ^ prod_reg[9]);
  assign _0055_ = ~(acc_reg[8] & prod_reg[8]);
  assign _0056_ = _0052_ & _0043_;
  assign _0057_ = _0056_ | ~(_0055_);
  assign _0058_ = _0057_ ^ _0054_;
  assign _0728_ = _0000_ & ~(_0058_);
  assign _0059_ = ~(acc_reg[10] ^ prod_reg[10]);
  assign _0060_ = ~_0059_;
  assign _0061_ = acc_reg[9] & prod_reg[9];
  assign _0062_ = ~(_0055_ | _0054_);
  assign _0063_ = ~(_0062_ | _0061_);
  assign _0064_ = _0054_ | _0042_;
  assign _0065_ = _0052_ & ~(_0064_);
  assign _0066_ = _0063_ & ~(_0065_);
  assign _0067_ = _0066_ ^ _0060_;
  assign _0698_ = _0000_ & ~(_0067_);
  assign _0068_ = ~(acc_reg[11] ^ prod_reg[11]);
  assign _0069_ = ~(acc_reg[10] & prod_reg[10]);
  assign _0070_ = _0060_ & ~(_0066_);
  assign _0071_ = _0070_ | ~(_0069_);
  assign _0072_ = _0071_ ^ _0068_;
  assign _0699_ = _0000_ & ~(_0072_);
  assign _0073_ = ~(acc_reg[12] ^ prod_reg[12]);
  assign _0074_ = ~_0073_;
  assign _0075_ = acc_reg[11] & prod_reg[11];
  assign _0076_ = ~(_0069_ | _0068_);
  assign _0077_ = _0076_ | _0075_;
  assign _0078_ = _0068_ | _0059_;
  assign _0079_ = ~(_0078_ | _0063_);
  assign _0080_ = _0079_ | _0077_;
  assign _0081_ = _0078_ | _0064_;
  assign _0082_ = _0052_ & ~(_0081_);
  assign _0083_ = ~(_0082_ | _0080_);
  assign _0084_ = _0083_ ^ _0074_;
  assign _0700_ = _0000_ & ~(_0084_);
  assign _0085_ = ~(acc_reg[13] ^ prod_reg[13]);
  assign _0086_ = ~(acc_reg[12] & prod_reg[12]);
  assign _0087_ = _0074_ & ~(_0083_);
  assign _0088_ = _0087_ | ~(_0086_);
  assign _0089_ = _0088_ ^ _0085_;
  assign _0701_ = _0000_ & ~(_0089_);
  assign _0090_ = ~(acc_reg[14] ^ prod_reg[14]);
  assign _0091_ = ~_0090_;
  assign _0092_ = acc_reg[13] & prod_reg[13];
  assign _0093_ = ~(_0086_ | _0085_);
  assign _0094_ = ~(_0093_ | _0092_);
  assign _0095_ = _0085_ | _0073_;
  assign _0096_ = ~(_0095_ | _0083_);
  assign _0097_ = _0094_ & ~(_0096_);
  assign _0098_ = _0097_ ^ _0091_;
  assign _0702_ = _0000_ & ~(_0098_);
  assign _0099_ = ~(acc_reg[15] ^ prod_reg[15]);
  assign _0100_ = ~(acc_reg[14] & prod_reg[14]);
  assign _0101_ = _0091_ & ~(_0097_);
  assign _0102_ = _0101_ | ~(_0100_);
  assign _0103_ = _0102_ ^ _0099_;
  assign _0703_ = _0000_ & ~(_0103_);
  assign _0104_ = ~(acc_reg[16] ^ prod_reg[15]);
  assign _0105_ = ~_0104_;
  assign _0106_ = acc_reg[15] & prod_reg[15];
  assign _0107_ = ~(_0100_ | _0099_);
  assign _0108_ = _0107_ | _0106_;
  assign _0109_ = _0099_ | _0090_;
  assign _0110_ = ~(_0109_ | _0094_);
  assign _0111_ = _0110_ | _0108_;
  assign _0112_ = _0109_ | _0095_;
  assign _0113_ = _0080_ & ~(_0112_);
  assign _0114_ = _0113_ | _0111_;
  assign _0115_ = _0112_ | _0081_;
  assign _0116_ = _0052_ & ~(_0115_);
  assign _0117_ = _0116_ | _0114_;
  assign _0118_ = ~(_0117_ ^ _0105_);
  assign _0704_ = _0000_ & ~(_0118_);
  assign _0119_ = ~(acc_reg[17] ^ prod_reg[15]);
  assign _0120_ = ~(acc_reg[16] & prod_reg[15]);
  assign _0121_ = _0117_ & _0105_;
  assign _0122_ = _0121_ | ~(_0120_);
  assign _0123_ = _0122_ ^ _0119_;
  assign _0705_ = _0000_ & ~(_0123_);
  assign _0124_ = ~(acc_reg[18] ^ prod_reg[15]);
  assign _0125_ = ~_0124_;
  assign _0126_ = acc_reg[17] & prod_reg[15];
  assign _0127_ = ~(_0120_ | _0119_);
  assign _0128_ = ~(_0127_ | _0126_);
  assign _0129_ = _0119_ | _0104_;
  assign _0130_ = _0117_ & ~(_0129_);
  assign _0131_ = _0128_ & ~(_0130_);
  assign _0132_ = _0131_ ^ _0125_;
  assign _0706_ = _0000_ & ~(_0132_);
  assign _0133_ = ~(acc_reg[19] ^ prod_reg[15]);
  assign _0134_ = ~(acc_reg[18] & prod_reg[15]);
  assign _0135_ = _0125_ & ~(_0131_);
  assign _0136_ = _0135_ | ~(_0134_);
  assign _0137_ = _0136_ ^ _0133_;
  assign _0707_ = _0000_ & ~(_0137_);
  assign _0138_ = ~(acc_reg[20] ^ prod_reg[15]);
  assign _0139_ = ~_0138_;
  assign _0140_ = acc_reg[19] & prod_reg[15];
  assign _0141_ = ~(_0134_ | _0133_);
  assign _0142_ = _0141_ | _0140_;
  assign _0143_ = _0133_ | _0124_;
  assign _0144_ = ~(_0143_ | _0128_);
  assign _0145_ = _0144_ | _0142_;
  assign _0146_ = _0143_ | _0129_;
  assign _0147_ = _0117_ & ~(_0146_);
  assign _0148_ = ~(_0147_ | _0145_);
  assign _0149_ = _0148_ ^ _0139_;
  assign _0709_ = _0000_ & ~(_0149_);
  assign _0150_ = ~(acc_reg[21] ^ prod_reg[15]);
  assign _0151_ = ~(acc_reg[20] & prod_reg[15]);
  assign _0152_ = _0139_ & ~(_0148_);
  assign _0153_ = _0152_ | ~(_0151_);
  assign _0154_ = _0153_ ^ _0150_;
  assign _0710_ = _0000_ & ~(_0154_);
  assign _0155_ = ~(acc_reg[22] ^ prod_reg[15]);
  assign _0156_ = ~_0155_;
  assign _0157_ = acc_reg[21] & prod_reg[15];
  assign _0158_ = ~(_0151_ | _0150_);
  assign _0159_ = ~(_0158_ | _0157_);
  assign _0160_ = _0150_ | _0138_;
  assign _0161_ = ~(_0160_ | _0148_);
  assign _0162_ = _0159_ & ~(_0161_);
  assign _0163_ = _0162_ ^ _0156_;
  assign _0711_ = _0000_ & ~(_0163_);
  assign _0164_ = ~(acc_reg[23] ^ prod_reg[15]);
  assign _0165_ = ~(acc_reg[22] & prod_reg[15]);
  assign _0166_ = _0156_ & ~(_0162_);
  assign _0167_ = _0166_ | ~(_0165_);
  assign _0168_ = _0167_ ^ _0164_;
  assign _0712_ = _0000_ & ~(_0168_);
  assign _0169_ = ~(acc_reg[24] ^ prod_reg[15]);
  assign _0170_ = acc_reg[23] & prod_reg[15];
  assign _0171_ = ~(_0165_ | _0164_);
  assign _0172_ = ~(_0171_ | _0170_);
  assign _0173_ = _0164_ | _0155_;
  assign _0174_ = ~(_0173_ | _0159_);
  assign _0175_ = _0172_ & ~(_0174_);
  assign _0176_ = _0173_ | _0160_;
  assign _0177_ = _0145_ & ~(_0176_);
  assign _0178_ = _0175_ & ~(_0177_);
  assign _0179_ = _0176_ | _0146_;
  assign _0180_ = _0117_ & ~(_0179_);
  assign _0181_ = _0180_ | ~(_0178_);
  assign _0182_ = _0181_ ^ _0169_;
  assign _0713_ = _0000_ & ~(_0182_);
  assign _0183_ = ~(acc_reg[25] ^ prod_reg[15]);
  assign _0184_ = ~(acc_reg[24] & prod_reg[15]);
  assign _0185_ = _0181_ & ~(_0169_);
  assign _0186_ = _0185_ | ~(_0184_);
  assign _0187_ = _0186_ ^ _0183_;
  assign _0714_ = _0000_ & ~(_0187_);
  assign _0188_ = ~(acc_reg[26] ^ prod_reg[15]);
  assign _0189_ = ~_0188_;
  assign _0190_ = acc_reg[25] & prod_reg[15];
  assign _0191_ = ~(_0184_ | _0183_);
  assign _0192_ = ~(_0191_ | _0190_);
  assign _0193_ = _0183_ | _0169_;
  assign _0194_ = _0181_ & ~(_0193_);
  assign _0195_ = _0192_ & ~(_0194_);
  assign _0196_ = _0195_ ^ _0189_;
  assign _0715_ = _0000_ & ~(_0196_);
  assign _0197_ = ~(acc_reg[27] ^ prod_reg[15]);
  assign _0198_ = ~(acc_reg[26] & prod_reg[15]);
  assign _0199_ = _0189_ & ~(_0195_);
  assign _0200_ = _0199_ | ~(_0198_);
  assign _0201_ = _0200_ ^ _0197_;
  assign _0716_ = _0000_ & ~(_0201_);
  assign _0202_ = ~(acc_reg[28] ^ prod_reg[15]);
  assign _0203_ = ~_0202_;
  assign _0204_ = ~(acc_reg[27] & prod_reg[15]);
  assign _0205_ = ~(_0198_ | _0197_);
  assign _0206_ = _0204_ & ~(_0205_);
  assign _0207_ = _0197_ | _0188_;
  assign _0208_ = ~(_0207_ | _0192_);
  assign _0209_ = _0206_ & ~(_0208_);
  assign _0210_ = _0207_ | _0193_;
  assign _0211_ = _0181_ & ~(_0210_);
  assign _0212_ = _0209_ & ~(_0211_);
  assign _0213_ = _0212_ ^ _0203_;
  assign _0717_ = _0000_ & ~(_0213_);
  assign _0214_ = ~(acc_reg[29] ^ prod_reg[15]);
  assign _0215_ = ~(acc_reg[28] & prod_reg[15]);
  assign _0216_ = _0203_ & ~(_0212_);
  assign _0217_ = _0216_ | ~(_0215_);
  assign _0218_ = _0217_ ^ _0214_;
  assign _0718_ = _0000_ & ~(_0218_);
  assign _0219_ = acc_reg[30] ^ prod_reg[15];
  assign _0220_ = ~(acc_reg[29] & prod_reg[15]);
  assign _0221_ = ~(_0215_ | _0214_);
  assign _0222_ = _0220_ & ~(_0221_);
  assign _0223_ = _0214_ | _0202_;
  assign _0224_ = ~(_0223_ | _0212_);
  assign _0225_ = _0222_ & ~(_0224_);
  assign _0226_ = _0225_ ^ _0219_;
  assign _0720_ = _0000_ & ~(_0226_);
  assign _0227_ = acc_reg[31] ^ prod_reg[15];
  assign _0228_ = ~(acc_reg[30] & prod_reg[15]);
  assign _0229_ = _0219_ & ~(_0225_);
  assign _0230_ = _0228_ & ~(_0229_);
  assign _0231_ = _0230_ ^ _0227_;
  assign _0721_ = _0000_ & ~(_0231_);
  assign _0729_[0] = B_reg[0] & A_reg[0];
  assign _0232_ = B_reg[0] & A_reg[1];
  assign _0233_ = B_reg[1] & A_reg[0];
  assign _0730_[1] = _0233_ ^ _0232_;
  assign _0234_ = B_reg[0] & A_reg[2];
  assign _0235_ = B_reg[1] & A_reg[1];
  assign _0236_ = ~(B_reg[2] & A_reg[0]);
  assign _0237_ = _0236_ ^ _0235_;
  assign _0238_ = _0237_ ^ _0234_;
  assign _0239_ = _0233_ & _0232_;
  assign _0731_[2] = ~(_0239_ ^ _0238_);
  assign _0240_ = B_reg[3] & A_reg[1];
  assign _0241_ = B_reg[4] & A_reg[0];
  assign _0242_ = ~(B_reg[0] & A_reg[4]);
  assign _0243_ = _0242_ ^ _0241_;
  assign _0244_ = _0243_ ^ _0240_;
  assign _0245_ = ~(B_reg[0] & A_reg[3]);
  assign _0246_ = ~(B_reg[3] & A_reg[0]);
  assign _0247_ = _0246_ | _0245_;
  assign _0248_ = _0247_ ^ _0244_;
  assign _0249_ = ~(B_reg[1] & A_reg[3]);
  assign _0250_ = B_reg[2] & A_reg[2];
  assign _0251_ = _0250_ ^ _0249_;
  assign _0252_ = B_reg[1] & A_reg[2];
  assign _0253_ = ~(B_reg[2] & A_reg[1]);
  assign _0254_ = _0252_ & ~(_0253_);
  assign _0255_ = _0254_ ^ _0251_;
  assign _0256_ = _0255_ ^ _0248_;
  assign _0257_ = _0253_ ^ _0252_;
  assign _0258_ = _0235_ & ~(_0236_);
  assign _0259_ = _0258_ ^ _0257_;
  assign _0260_ = ~(_0246_ ^ _0245_);
  assign _0261_ = _0260_ | _0259_;
  assign _0262_ = _0261_ ^ _0256_;
  assign _0263_ = _0258_ & ~(_0257_);
  assign _0264_ = ~_0263_;
  assign _0265_ = _0264_ ^ _0262_;
  assign _0266_ = ~(_0260_ ^ _0259_);
  assign _0267_ = _0234_ & ~(_0237_);
  assign _0268_ = _0267_ & ~(_0266_);
  assign _0269_ = _0268_ ^ _0265_;
  assign _0270_ = _0267_ ^ _0266_;
  assign _0271_ = _0239_ & ~(_0238_);
  assign _0272_ = _0271_ & ~(_0270_);
  assign _0273_ = ~_0272_;
  assign _0733_[4] = _0273_ ^ _0269_;
  assign _0274_ = B_reg[3] & A_reg[2];
  assign _0275_ = ~(B_reg[5] & A_reg[0]);
  assign _0276_ = ~(B_reg[4] & A_reg[1]);
  assign _0277_ = _0276_ ^ _0275_;
  assign _0278_ = ~(B_reg[0] & A_reg[5]);
  assign _0279_ = _0278_ ^ _0277_;
  assign _0280_ = _0279_ ^ _0274_;
  assign _0281_ = _0243_ | ~(_0240_);
  assign _0282_ = _0281_ ^ _0280_;
  assign _0283_ = _0242_ | ~(_0241_);
  assign _0284_ = B_reg[1] & A_reg[4];
  assign _0285_ = ~(B_reg[2] & A_reg[3]);
  assign _0286_ = _0285_ ^ _0284_;
  assign _0287_ = _0286_ ^ _0283_;
  assign _0288_ = _0250_ & ~(_0249_);
  assign _0289_ = ~_0288_;
  assign _0290_ = _0289_ ^ _0287_;
  assign _0291_ = _0290_ ^ _0282_;
  assign _0292_ = _0247_ | _0244_;
  assign _0293_ = _0248_ & ~(_0255_);
  assign _0294_ = _0292_ & ~(_0293_);
  assign _0295_ = _0294_ ^ _0291_;
  assign _0296_ = _0254_ & ~(_0251_);
  assign _0297_ = _0296_ ^ _0295_;
  assign _0298_ = _0261_ | _0256_;
  assign _0299_ = _0262_ & ~(_0264_);
  assign _0300_ = _0298_ & ~(_0299_);
  assign _0301_ = _0300_ ^ _0297_;
  assign _0302_ = _0265_ | ~(_0268_);
  assign _0303_ = _0272_ & ~(_0269_);
  assign _0304_ = _0302_ & ~(_0303_);
  assign _0733_[5] = _0304_ ^ _0301_;
  assign _0305_ = B_reg[3] & A_reg[3];
  assign _0306_ = B_reg[6] & A_reg[0];
  assign _0307_ = _0306_ ^ _0305_;
  assign _0308_ = ~(B_reg[5] & A_reg[1]);
  assign _0309_ = ~(B_reg[4] & A_reg[2]);
  assign _0310_ = _0309_ ^ _0308_;
  assign _0311_ = ~(B_reg[0] & A_reg[6]);
  assign _0312_ = _0311_ ^ _0310_;
  assign _0313_ = _0312_ ^ _0307_;
  assign _0314_ = _0279_ | ~(_0274_);
  assign _0315_ = _0314_ ^ _0313_;
  assign _0316_ = _0276_ | _0275_;
  assign _0317_ = _0277_ & ~(_0278_);
  assign _0318_ = _0316_ & ~(_0317_);
  assign _0319_ = B_reg[1] & A_reg[5];
  assign _0320_ = ~(B_reg[2] & A_reg[4]);
  assign _0321_ = _0320_ ^ _0319_;
  assign _0322_ = _0321_ ^ _0318_;
  assign _0323_ = _0284_ & ~(_0285_);
  assign _0324_ = ~_0323_;
  assign _0325_ = _0324_ ^ _0322_;
  assign _0326_ = _0325_ ^ _0315_;
  assign _0327_ = _0281_ | _0280_;
  assign _0328_ = _0282_ & ~(_0290_);
  assign _0329_ = _0327_ & ~(_0328_);
  assign _0330_ = _0329_ ^ _0326_;
  assign _0331_ = _0286_ | _0283_;
  assign _0332_ = _0287_ & ~(_0289_);
  assign _0333_ = _0331_ & ~(_0332_);
  assign _0334_ = _0333_ ^ _0330_;
  assign _0335_ = _0294_ | _0291_;
  assign _0336_ = _0296_ & _0295_;
  assign _0337_ = _0335_ & ~(_0336_);
  assign _0338_ = ~(_0337_ ^ _0334_);
  assign _0339_ = _0297_ & ~(_0300_);
  assign _0340_ = ~(_0302_ | _0301_);
  assign _0341_ = _0340_ | _0339_;
  assign _0342_ = _0301_ | _0269_;
  assign _0343_ = _0342_ | _0273_;
  assign _0344_ = _0343_ & ~(_0341_);
  assign _0733_[6] = _0344_ ^ _0338_;
  assign _0345_ = B_reg[3] & A_reg[4];
  assign _0346_ = _0345_ ^ B_reg[7];
  assign _0347_ = A_reg[0] | ~(B_reg[7]);
  assign _0348_ = _0347_ ^ _0346_;
  assign _0349_ = ~(_0306_ & _0305_);
  assign _0350_ = _0349_ ^ _0348_;
  assign _0351_ = ~(B_reg[6] & A_reg[1]);
  assign _0352_ = ~(B_reg[5] & A_reg[2]);
  assign _0353_ = _0352_ ^ _0351_;
  assign _0354_ = ~(B_reg[4] & A_reg[3]);
  assign _0355_ = _0354_ ^ _0353_;
  assign _0356_ = _0355_ ^ _0350_;
  assign _0357_ = _0312_ | ~(_0307_);
  assign _0358_ = _0357_ ^ _0356_;
  assign _0359_ = _0309_ | _0308_;
  assign _0360_ = _0310_ & ~(_0311_);
  assign _0361_ = _0359_ & ~(_0360_);
  assign _0362_ = B_reg[0] & A_reg[7];
  assign _0363_ = B_reg[1] & A_reg[6];
  assign _0364_ = _0363_ ^ _0362_;
  assign _0365_ = ~(B_reg[2] & A_reg[5]);
  assign _0366_ = _0365_ ^ _0364_;
  assign _0367_ = _0366_ ^ _0361_;
  assign _0368_ = _0319_ & ~(_0320_);
  assign _0369_ = ~_0368_;
  assign _0370_ = _0369_ ^ _0367_;
  assign _0371_ = _0370_ ^ _0358_;
  assign _0372_ = _0314_ | _0313_;
  assign _0373_ = _0315_ & ~(_0325_);
  assign _0374_ = _0372_ & ~(_0373_);
  assign _0375_ = _0374_ ^ _0371_;
  assign _0376_ = _0321_ | _0318_;
  assign _0377_ = _0322_ & ~(_0324_);
  assign _0378_ = _0376_ & ~(_0377_);
  assign _0379_ = ~(_0378_ ^ _0375_);
  assign _0380_ = _0329_ | _0326_;
  assign _0381_ = _0330_ & ~(_0333_);
  assign _0382_ = _0380_ & ~(_0381_);
  assign _0383_ = _0382_ ^ _0379_;
  assign _0384_ = _0337_ | _0334_;
  assign _0385_ = ~(_0344_ | _0338_);
  assign _0386_ = _0384_ & ~(_0385_);
  assign _0733_[7] = _0386_ ^ _0383_;
  assign _0387_ = ~(B_reg[3] & A_reg[5]);
  assign _0388_ = A_reg[1] | ~(B_reg[7]);
  assign _0389_ = _0388_ ^ _0387_;
  assign _0390_ = ~(B_reg[6] & A_reg[2]);
  assign _0391_ = _0390_ ^ _0389_;
  assign _0392_ = ~(_0345_ & B_reg[7]);
  assign _0393_ = _0346_ & ~(_0347_);
  assign _0394_ = _0392_ & ~(_0393_);
  assign _0395_ = _0394_ ^ _0391_;
  assign _0396_ = B_reg[5] & A_reg[3];
  assign _0397_ = ~(B_reg[4] & A_reg[4]);
  assign _0398_ = _0397_ ^ _0396_;
  assign _0399_ = _0398_ ^ _0362_;
  assign _0400_ = _0399_ ^ _0395_;
  assign _0401_ = _0349_ | _0348_;
  assign _0402_ = _0350_ & ~(_0355_);
  assign _0403_ = _0401_ & ~(_0402_);
  assign _0404_ = _0403_ ^ _0400_;
  assign _0405_ = _0352_ | _0351_;
  assign _0406_ = _0353_ & ~(_0354_);
  assign _0407_ = _0405_ & ~(_0406_);
  assign _0408_ = ~(B_reg[1] & A_reg[7]);
  assign _0409_ = B_reg[2] & A_reg[6];
  assign _0410_ = _0409_ ^ _0408_;
  assign _0411_ = _0410_ ^ _0407_;
  assign _0412_ = ~(_0363_ & _0362_);
  assign _0413_ = _0364_ & ~(_0365_);
  assign _0414_ = _0412_ & ~(_0413_);
  assign _0415_ = _0414_ ^ _0411_;
  assign _0416_ = _0415_ ^ _0404_;
  assign _0417_ = _0357_ | _0356_;
  assign _0418_ = _0358_ & ~(_0370_);
  assign _0419_ = _0417_ & ~(_0418_);
  assign _0420_ = _0419_ ^ _0416_;
  assign _0421_ = _0366_ | _0361_;
  assign _0422_ = _0367_ & ~(_0369_);
  assign _0423_ = _0421_ & ~(_0422_);
  assign _0424_ = _0423_ ^ _0420_;
  assign _0425_ = _0374_ | _0371_;
  assign _0426_ = _0375_ & ~(_0378_);
  assign _0427_ = _0425_ & ~(_0426_);
  assign _0428_ = ~(_0427_ ^ _0424_);
  assign _0429_ = _0379_ & ~(_0382_);
  assign _0430_ = ~(_0384_ | _0383_);
  assign _0431_ = _0430_ | _0429_;
  assign _0432_ = _0383_ | _0338_;
  assign _0433_ = _0341_ & ~(_0432_);
  assign _0434_ = _0433_ | _0431_;
  assign _0435_ = _0432_ | _0342_;
  assign _0436_ = _0272_ & ~(_0435_);
  assign _0437_ = _0436_ | _0434_;
  assign _0733_[8] = ~(_0437_ ^ _0428_);
  assign _0438_ = ~(B_reg[3] & A_reg[6]);
  assign _0439_ = A_reg[2] | ~(B_reg[7]);
  assign _0440_ = _0439_ ^ _0438_;
  assign _0441_ = ~(B_reg[6] & A_reg[3]);
  assign _0442_ = _0441_ ^ _0440_;
  assign _0443_ = _0388_ | _0387_;
  assign _0444_ = _0389_ & ~(_0390_);
  assign _0445_ = _0443_ & ~(_0444_);
  assign _0446_ = _0445_ ^ _0442_;
  assign _0447_ = ~(B_reg[5] & A_reg[4]);
  assign _0448_ = ~(B_reg[4] & A_reg[5]);
  assign _0449_ = ~(_0448_ ^ _0447_);
  assign _0450_ = _0449_ ^ _0362_;
  assign _0451_ = _0450_ ^ _0446_;
  assign _0452_ = _0394_ | _0391_;
  assign _0453_ = _0395_ & ~(_0399_);
  assign _0454_ = _0452_ & ~(_0453_);
  assign _0455_ = _0454_ ^ _0451_;
  assign _0456_ = _0396_ & ~(_0397_);
  assign _0457_ = _0362_ & ~(_0398_);
  assign _0458_ = ~(_0457_ | _0456_);
  assign _0459_ = B_reg[2] & A_reg[7];
  assign _0460_ = _0459_ ^ _0408_;
  assign _0461_ = _0460_ ^ _0458_;
  assign _0462_ = _0409_ & ~(_0408_);
  assign _0463_ = ~_0462_;
  assign _0464_ = _0463_ ^ _0461_;
  assign _0465_ = _0464_ ^ _0455_;
  assign _0466_ = _0403_ | _0400_;
  assign _0467_ = _0404_ & ~(_0415_);
  assign _0468_ = _0466_ & ~(_0467_);
  assign _0469_ = _0468_ ^ _0465_;
  assign _0470_ = _0410_ | _0407_;
  assign _0471_ = _0411_ & ~(_0414_);
  assign _0472_ = _0470_ & ~(_0471_);
  assign _0473_ = ~(_0472_ ^ _0469_);
  assign _0474_ = _0419_ | _0416_;
  assign _0475_ = _0420_ & ~(_0423_);
  assign _0476_ = _0474_ & ~(_0475_);
  assign _0477_ = _0476_ ^ _0473_;
  assign _0478_ = _0427_ | _0424_;
  assign _0479_ = _0437_ & ~(_0428_);
  assign _0480_ = _0478_ & ~(_0479_);
  assign _0733_[9] = _0480_ ^ _0477_;
  assign _0481_ = B_reg[3] & A_reg[7];
  assign _0482_ = B_reg[7] & ~(A_reg[3]);
  assign _0483_ = _0482_ ^ _0481_;
  assign _0484_ = ~(B_reg[6] & A_reg[4]);
  assign _0485_ = _0484_ ^ _0483_;
  assign _0486_ = _0439_ | _0438_;
  assign _0487_ = _0440_ & ~(_0441_);
  assign _0488_ = _0486_ & ~(_0487_);
  assign _0489_ = _0488_ ^ _0485_;
  assign _0490_ = ~(B_reg[5] & A_reg[5]);
  assign _0491_ = B_reg[4] & A_reg[6];
  assign _0492_ = _0491_ ^ _0490_;
  assign _0493_ = _0492_ ^ _0362_;
  assign _0494_ = _0493_ ^ _0489_;
  assign _0495_ = _0445_ | _0442_;
  assign _0496_ = _0446_ & ~(_0450_);
  assign _0497_ = _0495_ & ~(_0496_);
  assign _0498_ = _0497_ ^ _0494_;
  assign _0499_ = ~_0460_;
  assign _0500_ = _0448_ | _0447_;
  assign _0501_ = _0362_ & ~(_0449_);
  assign _0502_ = _0500_ & ~(_0501_);
  assign _0503_ = _0502_ ^ _0499_;
  assign _0504_ = _0459_ & ~(_0408_);
  assign _0505_ = _0504_ ^ _0503_;
  assign _0506_ = _0505_ ^ _0498_;
  assign _0507_ = _0454_ | _0451_;
  assign _0508_ = _0455_ & ~(_0464_);
  assign _0509_ = _0507_ & ~(_0508_);
  assign _0510_ = _0509_ ^ _0506_;
  assign _0511_ = _0460_ | _0458_;
  assign _0512_ = _0461_ & ~(_0463_);
  assign _0513_ = _0511_ & ~(_0512_);
  assign _0514_ = _0513_ ^ _0510_;
  assign _0515_ = _0468_ | _0465_;
  assign _0516_ = _0469_ & ~(_0472_);
  assign _0517_ = _0515_ & ~(_0516_);
  assign _0518_ = ~(_0517_ ^ _0514_);
  assign _0519_ = _0473_ & ~(_0476_);
  assign _0520_ = ~(_0478_ | _0477_);
  assign _0521_ = _0520_ | _0519_;
  assign _0522_ = _0477_ | _0428_;
  assign _0523_ = _0522_ | ~(_0437_);
  assign _0524_ = _0523_ & ~(_0521_);
  assign _0733_[10] = _0524_ ^ _0518_;
  assign _0525_ = B_reg[7] & ~(A_reg[4]);
  assign _0526_ = _0525_ ^ _0481_;
  assign _0527_ = B_reg[6] & A_reg[5];
  assign _0528_ = ~_0527_;
  assign _0529_ = _0528_ ^ _0526_;
  assign _0530_ = ~(_0482_ & _0481_);
  assign _0531_ = _0483_ & ~(_0484_);
  assign _0532_ = _0530_ & ~(_0531_);
  assign _0533_ = _0532_ ^ _0529_;
  assign _0534_ = ~(B_reg[5] & A_reg[6]);
  assign _0535_ = B_reg[4] & A_reg[7];
  assign _0536_ = _0535_ ^ _0534_;
  assign _0537_ = _0536_ ^ _0362_;
  assign _0538_ = _0537_ ^ _0533_;
  assign _0539_ = _0488_ | _0485_;
  assign _0540_ = _0489_ & ~(_0493_);
  assign _0541_ = _0539_ & ~(_0540_);
  assign _0542_ = _0541_ ^ _0538_;
  assign _0543_ = _0490_ | ~(_0491_);
  assign _0544_ = _0362_ & ~(_0492_);
  assign _0545_ = _0543_ & ~(_0544_);
  assign _0546_ = _0545_ ^ _0499_;
  assign _0547_ = _0546_ ^ _0504_;
  assign _0548_ = _0547_ ^ _0542_;
  assign _0549_ = _0497_ | _0494_;
  assign _0550_ = _0498_ & ~(_0505_);
  assign _0551_ = _0549_ & ~(_0550_);
  assign _0552_ = _0551_ ^ _0548_;
  assign _0553_ = _0502_ | _0460_;
  assign _0554_ = _0504_ & ~(_0503_);
  assign _0555_ = _0553_ & ~(_0554_);
  assign _0556_ = _0555_ ^ _0552_;
  assign _0557_ = _0509_ | _0506_;
  assign _0558_ = _0510_ & ~(_0513_);
  assign _0559_ = _0557_ & ~(_0558_);
  assign _0560_ = ~(_0559_ ^ _0556_);
  assign _0561_ = _0517_ | _0514_;
  assign _0562_ = ~(_0524_ | _0518_);
  assign _0563_ = _0561_ & ~(_0562_);
  assign _0733_[11] = _0563_ ^ _0560_;
  assign _0564_ = B_reg[7] & ~(A_reg[5]);
  assign _0565_ = ~(_0564_ ^ _0481_);
  assign _0566_ = B_reg[6] & A_reg[6];
  assign _0567_ = _0566_ ^ _0565_;
  assign _0568_ = ~(_0525_ & _0481_);
  assign _0569_ = _0526_ & ~(_0528_);
  assign _0570_ = _0568_ & ~(_0569_);
  assign _0571_ = ~(_0570_ ^ _0567_);
  assign _0572_ = B_reg[5] & A_reg[7];
  assign _0573_ = ~(_0572_ ^ _0535_);
  assign _0574_ = _0573_ ^ _0362_;
  assign _0575_ = ~_0574_;
  assign _0576_ = _0575_ ^ _0571_;
  assign _0577_ = _0532_ | _0529_;
  assign _0578_ = _0533_ & ~(_0537_);
  assign _0579_ = _0577_ & ~(_0578_);
  assign _0580_ = _0579_ ^ _0576_;
  assign _0581_ = _0534_ | ~(_0535_);
  assign _0582_ = _0362_ & ~(_0536_);
  assign _0583_ = _0581_ & ~(_0582_);
  assign _0584_ = _0583_ ^ _0499_;
  assign _0585_ = _0584_ ^ _0504_;
  assign _0586_ = _0585_ ^ _0580_;
  assign _0587_ = _0541_ | _0538_;
  assign _0588_ = _0542_ & ~(_0547_);
  assign _0589_ = _0587_ & ~(_0588_);
  assign _0590_ = _0589_ ^ _0586_;
  assign _0591_ = _0545_ | _0460_;
  assign _0592_ = _0504_ & ~(_0546_);
  assign _0593_ = _0591_ & ~(_0592_);
  assign _0594_ = _0593_ ^ _0590_;
  assign _0595_ = _0551_ | _0548_;
  assign _0596_ = _0552_ & ~(_0555_);
  assign _0597_ = _0595_ & ~(_0596_);
  assign _0598_ = ~(_0597_ ^ _0594_);
  assign _0599_ = _0559_ | _0556_;
  assign _0600_ = ~(_0561_ | _0560_);
  assign _0601_ = _0599_ & ~(_0600_);
  assign _0602_ = _0560_ | _0518_;
  assign _0603_ = _0521_ & ~(_0602_);
  assign _0604_ = _0601_ & ~(_0603_);
  assign _0605_ = _0602_ | _0522_;
  assign _0606_ = _0437_ & ~(_0605_);
  assign _0607_ = _0604_ & ~(_0606_);
  assign _0733_[12] = _0607_ ^ _0598_;
  assign _0608_ = B_reg[7] & ~(A_reg[6]);
  assign _0609_ = ~(_0608_ ^ _0481_);
  assign _0610_ = B_reg[6] & A_reg[7];
  assign _0611_ = _0610_ ^ _0609_;
  assign _0612_ = ~(_0564_ & _0481_);
  assign _0613_ = _0566_ & ~(_0565_);
  assign _0614_ = _0612_ & ~(_0613_);
  assign _0615_ = ~(_0614_ ^ _0611_);
  assign _0616_ = _0615_ ^ _0575_;
  assign _0617_ = _0570_ | _0567_;
  assign _0618_ = _0575_ & ~(_0571_);
  assign _0619_ = _0617_ & ~(_0618_);
  assign _0620_ = ~(_0619_ ^ _0616_);
  assign _0621_ = ~(_0572_ & _0535_);
  assign _0622_ = _0362_ & ~(_0573_);
  assign _0623_ = _0621_ & ~(_0622_);
  assign _0624_ = _0623_ ^ _0499_;
  assign _0625_ = _0624_ ^ _0504_;
  assign _0626_ = ~_0625_;
  assign _0627_ = _0626_ ^ _0620_;
  assign _0628_ = _0579_ | _0576_;
  assign _0629_ = _0580_ & ~(_0585_);
  assign _0630_ = _0628_ & ~(_0629_);
  assign _0631_ = _0630_ ^ _0627_;
  assign _0632_ = _0583_ | _0460_;
  assign _0633_ = _0504_ & ~(_0584_);
  assign _0634_ = _0632_ & ~(_0633_);
  assign _0635_ = _0634_ ^ _0631_;
  assign _0636_ = _0589_ | _0586_;
  assign _0637_ = _0590_ & ~(_0593_);
  assign _0638_ = _0636_ & ~(_0637_);
  assign _0639_ = ~(_0638_ ^ _0635_);
  assign _0640_ = _0597_ | _0594_;
  assign _0641_ = ~(_0607_ | _0598_);
  assign _0642_ = _0640_ & ~(_0641_);
  assign _0733_[13] = _0642_ ^ _0639_;
  assign _0643_ = A_reg[7] ? B_reg[3] : B_reg[7];
  assign _0644_ = ~(_0643_ ^ _0610_);
  assign _0645_ = ~_0644_;
  assign _0646_ = ~(_0608_ & _0481_);
  assign _0647_ = _0610_ & ~(_0609_);
  assign _0648_ = _0646_ & ~(_0647_);
  assign _0649_ = _0648_ ^ _0645_;
  assign _0650_ = _0649_ ^ _0575_;
  assign _0651_ = _0614_ | _0611_;
  assign _0652_ = _0575_ & ~(_0615_);
  assign _0653_ = _0651_ & ~(_0652_);
  assign _0654_ = ~(_0653_ ^ _0650_);
  assign _0655_ = _0654_ ^ _0626_;
  assign _0656_ = _0619_ | _0616_;
  assign _0657_ = _0626_ & ~(_0620_);
  assign _0658_ = _0656_ & ~(_0657_);
  assign _0659_ = ~(_0658_ ^ _0655_);
  assign _0660_ = _0623_ | _0460_;
  assign _0661_ = _0504_ & ~(_0624_);
  assign _0662_ = _0660_ & ~(_0661_);
  assign _0663_ = ~(_0662_ ^ _0659_);
  assign _0664_ = _0630_ | _0627_;
  assign _0665_ = _0631_ & ~(_0634_);
  assign _0666_ = _0664_ & ~(_0665_);
  assign _0667_ = ~(_0666_ ^ _0663_);
  assign _0668_ = _0638_ | _0635_;
  assign _0669_ = ~(_0640_ | _0639_);
  assign _0670_ = _0668_ & ~(_0669_);
  assign _0671_ = _0639_ | _0598_;
  assign _0672_ = ~(_0671_ | _0607_);
  assign _0673_ = _0670_ & ~(_0672_);
  assign _0733_[14] = _0673_ ^ _0667_;
  assign _0674_ = B_reg[7] & ~(A_reg[7]);
  assign _0675_ = ~(_0674_ & _0481_);
  assign _0676_ = _0643_ & _0610_;
  assign _0677_ = _0675_ & ~(_0676_);
  assign _0678_ = _0677_ ^ _0645_;
  assign _0679_ = _0678_ ^ _0574_;
  assign _0680_ = _0648_ | _0644_;
  assign _0681_ = _0575_ & ~(_0649_);
  assign _0682_ = _0680_ & ~(_0681_);
  assign _0683_ = _0682_ ^ _0679_;
  assign _0684_ = _0683_ ^ _0625_;
  assign _0685_ = _0653_ | _0650_;
  assign _0686_ = _0626_ & ~(_0654_);
  assign _0687_ = _0685_ & ~(_0686_);
  assign _0688_ = _0687_ ^ _0684_;
  assign _0689_ = _0688_ ^ _0662_;
  assign _0690_ = _0658_ | _0655_;
  assign _0691_ = ~(_0662_ | _0659_);
  assign _0692_ = _0690_ & ~(_0691_);
  assign _0693_ = _0692_ ^ _0689_;
  assign _0694_ = _0666_ | _0663_;
  assign _0695_ = ~(_0673_ | _0667_);
  assign _0696_ = _0694_ & ~(_0695_);
  assign _0733_[15] = _0696_ ^ _0693_;
  assign _0732_[3] = ~(_0271_ ^ _0270_);
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[0] <= 1'h0;
    else if (ce) acc_reg[0] <= _0697_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[1] <= 1'h0;
    else if (ce) acc_reg[1] <= _0708_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[2] <= 1'h0;
    else if (ce) acc_reg[2] <= _0719_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[3] <= 1'h0;
    else if (ce) acc_reg[3] <= _0722_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[4] <= 1'h0;
    else if (ce) acc_reg[4] <= _0723_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[5] <= 1'h0;
    else if (ce) acc_reg[5] <= _0724_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[6] <= 1'h0;
    else if (ce) acc_reg[6] <= _0725_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[7] <= 1'h0;
    else if (ce) acc_reg[7] <= _0726_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[8] <= 1'h0;
    else if (ce) acc_reg[8] <= _0727_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[9] <= 1'h0;
    else if (ce) acc_reg[9] <= _0728_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[10] <= 1'h0;
    else if (ce) acc_reg[10] <= _0698_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[11] <= 1'h0;
    else if (ce) acc_reg[11] <= _0699_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[12] <= 1'h0;
    else if (ce) acc_reg[12] <= _0700_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[13] <= 1'h0;
    else if (ce) acc_reg[13] <= _0701_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[14] <= 1'h0;
    else if (ce) acc_reg[14] <= _0702_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[15] <= 1'h0;
    else if (ce) acc_reg[15] <= _0703_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[16] <= 1'h0;
    else if (ce) acc_reg[16] <= _0704_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[17] <= 1'h0;
    else if (ce) acc_reg[17] <= _0705_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[18] <= 1'h0;
    else if (ce) acc_reg[18] <= _0706_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[19] <= 1'h0;
    else if (ce) acc_reg[19] <= _0707_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[20] <= 1'h0;
    else if (ce) acc_reg[20] <= _0709_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[21] <= 1'h0;
    else if (ce) acc_reg[21] <= _0710_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[22] <= 1'h0;
    else if (ce) acc_reg[22] <= _0711_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[23] <= 1'h0;
    else if (ce) acc_reg[23] <= _0712_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[24] <= 1'h0;
    else if (ce) acc_reg[24] <= _0713_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[25] <= 1'h0;
    else if (ce) acc_reg[25] <= _0714_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[26] <= 1'h0;
    else if (ce) acc_reg[26] <= _0715_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[27] <= 1'h0;
    else if (ce) acc_reg[27] <= _0716_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[28] <= 1'h0;
    else if (ce) acc_reg[28] <= _0717_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[29] <= 1'h0;
    else if (ce) acc_reg[29] <= _0718_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[30] <= 1'h0;
    else if (ce) acc_reg[30] <= _0720_;
  (* src = "rtl/pe_mac.v:49.1-58.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) acc_reg[31] <= 1'h0;
    else if (ce) acc_reg[31] <= _0721_;
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[0] <= 1'h0;
    else if (ce) prod_reg[0] <= _0729_[0];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[1] <= 1'h0;
    else if (ce) prod_reg[1] <= _0730_[1];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[2] <= 1'h0;
    else if (ce) prod_reg[2] <= _0731_[2];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[3] <= 1'h0;
    else if (ce) prod_reg[3] <= _0732_[3];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[4] <= 1'h0;
    else if (ce) prod_reg[4] <= _0733_[4];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[5] <= 1'h0;
    else if (ce) prod_reg[5] <= _0733_[5];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[6] <= 1'h0;
    else if (ce) prod_reg[6] <= _0733_[6];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[7] <= 1'h0;
    else if (ce) prod_reg[7] <= _0733_[7];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[8] <= 1'h0;
    else if (ce) prod_reg[8] <= _0733_[8];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[9] <= 1'h0;
    else if (ce) prod_reg[9] <= _0733_[9];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[10] <= 1'h0;
    else if (ce) prod_reg[10] <= _0733_[10];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[11] <= 1'h0;
    else if (ce) prod_reg[11] <= _0733_[11];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[12] <= 1'h0;
    else if (ce) prod_reg[12] <= _0733_[12];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[13] <= 1'h0;
    else if (ce) prod_reg[13] <= _0733_[13];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[14] <= 1'h0;
    else if (ce) prod_reg[14] <= _0733_[14];
  (* src = "rtl/pe_mac.v:42.1-47.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) prod_reg[15] <= 1'h0;
    else if (ce) prod_reg[15] <= _0733_[15];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) A_reg[0] <= 1'h0;
    else if (ce) A_reg[0] <= A_in[0];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) A_reg[1] <= 1'h0;
    else if (ce) A_reg[1] <= A_in[1];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) A_reg[2] <= 1'h0;
    else if (ce) A_reg[2] <= A_in[2];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) A_reg[3] <= 1'h0;
    else if (ce) A_reg[3] <= A_in[3];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) A_reg[4] <= 1'h0;
    else if (ce) A_reg[4] <= A_in[4];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) A_reg[5] <= 1'h0;
    else if (ce) A_reg[5] <= A_in[5];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) A_reg[6] <= 1'h0;
    else if (ce) A_reg[6] <= A_in[6];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) A_reg[7] <= 1'h0;
    else if (ce) A_reg[7] <= A_in[7];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) B_reg[0] <= 1'h0;
    else if (ce) B_reg[0] <= B_in[0];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) B_reg[1] <= 1'h0;
    else if (ce) B_reg[1] <= B_in[1];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) B_reg[2] <= 1'h0;
    else if (ce) B_reg[2] <= B_in[2];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) B_reg[3] <= 1'h0;
    else if (ce) B_reg[3] <= B_in[3];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) B_reg[4] <= 1'h0;
    else if (ce) B_reg[4] <= B_in[4];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) B_reg[5] <= 1'h0;
    else if (ce) B_reg[5] <= B_in[5];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) B_reg[6] <= 1'h0;
    else if (ce) B_reg[6] <= B_in[6];
  (* src = "rtl/pe_mac.v:32.1-40.4" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) B_reg[7] <= 1'h0;
    else if (ce) B_reg[7] <= B_in[7];
  assign _0729_[14:8] = { _0729_[15], _0729_[15], _0729_[15], _0729_[15], _0729_[15], _0729_[15], _0729_[15] };
  assign _0730_[0] = _0729_[0];
  assign _0731_[1:0] = { _0730_[1], _0729_[0] };
  assign _0732_[2:0] = { _0731_[2], _0730_[1], _0729_[0] };
  assign _0733_[3:0] = { _0732_[3], _0731_[2], _0730_[1], _0729_[0] };
  assign A_out = A_reg;
  assign B_out = B_reg;
  assign acc_out = acc_reg;
endmodule

(* dynports =  1  *)
(* hdlname = "deserializer" *)
(* src = "rtl/deserializer.v:1.1-59.10" *)
module \$paramod\deserializer\WIDTH=s32'00000000000000000000000010000000 (clk, rst_n, serial_clk, serial_data, frame_sync, parallel_data, data_valid);
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  wire [7:0] _000_;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  wire _001_;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  wire [7:0] _002_;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  wire _003_;
  wire _004_;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  (* src = "rtl/deserializer.v:19.27-19.34" *)
  reg [7:0] bit_idx;
  (* src = "rtl/deserializer.v:11.16-11.19" *)
  input clk;
  wire clk;
  (* src = "rtl/deserializer.v:17.16-17.26" *)
  output data_valid;
  reg data_valid;
  (* src = "rtl/deserializer.v:15.16-15.26" *)
  input frame_sync;
  wire frame_sync;
  (* keep = "true" *)
  (* src = "rtl/deserializer.v:20.47-20.59" *)
  reg [7:0] kept_bit_idx;
  (* keep = "true" *)
  (* src = "rtl/deserializer.v:24.29-24.43" *)
  (* unused_bits = "0" *)
  reg kept_receiving;
  (* keep = "true" *)
  (* src = "rtl/deserializer.v:22.43-22.57" *)
  reg [127:0] kept_shift_reg;
  (* src = "rtl/deserializer.v:16.30-16.43" *)
  output [127:0] parallel_data;
  reg [127:0] parallel_data;
  (* src = "rtl/deserializer.v:23.9-23.18" *)
  reg receiving;
  (* src = "rtl/deserializer.v:12.16-12.21" *)
  input rst_n;
  wire rst_n;
  (* src = "rtl/deserializer.v:13.16-13.26" *)
  input serial_clk;
  wire serial_clk;
  (* src = "rtl/deserializer.v:14.16-14.27" *)
  input serial_data;
  wire serial_data;
  (* src = "rtl/deserializer.v:21.23-21.32" *)
  wire [127:0] shift_reg;
  assign _013_ = ~(bit_idx[1] & bit_idx[0]);
  assign _014_ = ~(bit_idx[2] & bit_idx[3]);
  assign _015_ = _014_ | _013_;
  assign _016_ = ~(bit_idx[4] & bit_idx[5]);
  assign _017_ = bit_idx[7] | ~(bit_idx[6]);
  assign _018_ = _017_ | _016_;
  assign _019_ = _018_ | _015_;
  assign _020_ = receiving & ~(_019_);
  assign _003_ = frame_sync & ~(receiving);
  assign _021_ = ~_003_;
  assign _001_ = _021_ & _020_;
  assign _008_ = receiving & ~(_003_);
  assign _006_ = frame_sync | receiving;
  assign _022_ = ~_019_;
  assign _007_ = receiving ? _022_ : frame_sync;
  assign _004_ = _003_ ? serial_data : kept_shift_reg[1];
  assign _002_[0] = ~(_003_ | kept_bit_idx[0]);
  assign _023_ = kept_bit_idx[1] ^ kept_bit_idx[0];
  assign _002_[1] = _023_ & ~(_003_);
  assign _024_ = ~(kept_bit_idx[1] & kept_bit_idx[0]);
  assign _025_ = _024_ ^ kept_bit_idx[2];
  assign _002_[2] = _021_ & ~(_025_);
  assign _026_ = kept_bit_idx[1] & kept_bit_idx[0];
  assign _027_ = ~(_026_ & kept_bit_idx[2]);
  assign _028_ = _027_ ^ kept_bit_idx[3];
  assign _002_[3] = _021_ & ~(_028_);
  assign _029_ = ~(kept_bit_idx[3] & kept_bit_idx[2]);
  assign _030_ = _029_ | _024_;
  assign _031_ = _030_ ^ kept_bit_idx[4];
  assign _002_[4] = _021_ & ~(_031_);
  assign _032_ = _030_ | ~(kept_bit_idx[4]);
  assign _033_ = _032_ ^ kept_bit_idx[5];
  assign _002_[5] = _021_ & ~(_033_);
  assign _034_ = ~(kept_bit_idx[5] & kept_bit_idx[4]);
  assign _035_ = _034_ | _030_;
  assign _036_ = _035_ ^ kept_bit_idx[6];
  assign _002_[6] = _021_ & ~(_036_);
  assign _037_ = _035_ | ~(kept_bit_idx[6]);
  assign _038_ = _037_ ^ kept_bit_idx[7];
  assign _002_[7] = _021_ & ~(_038_);
  assign _000_[0] = ~(_003_ | bit_idx[0]);
  assign _039_ = bit_idx[1] ^ bit_idx[0];
  assign _000_[1] = _039_ & ~(_003_);
  assign _040_ = _013_ ^ bit_idx[2];
  assign _000_[2] = _021_ & ~(_040_);
  assign _041_ = bit_idx[1] & bit_idx[0];
  assign _042_ = ~(_041_ & bit_idx[2]);
  assign _043_ = _042_ ^ bit_idx[3];
  assign _000_[3] = _021_ & ~(_043_);
  assign _044_ = _015_ ^ bit_idx[4];
  assign _000_[4] = _021_ & ~(_044_);
  assign _045_ = _015_ | ~(bit_idx[4]);
  assign _046_ = _045_ ^ bit_idx[5];
  assign _000_[5] = _021_ & ~(_046_);
  assign _009_ = _016_ | _015_;
  assign _010_ = _009_ ^ bit_idx[6];
  assign _000_[6] = _021_ & ~(_010_);
  assign _011_ = _009_ | ~(bit_idx[6]);
  assign _012_ = _011_ ^ bit_idx[7];
  assign _000_[7] = _021_ & ~(_012_);
  assign _005_ = receiving ? _019_ : frame_sync;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[0] <= 1'h0;
    else if (_006_) kept_shift_reg[0] <= _004_;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_receiving <= 1'h0;
    else if (_007_) kept_receiving <= _003_;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) data_valid <= 1'h0;
    else data_valid <= _001_;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[0] <= 1'h0;
    else if (_001_) parallel_data[0] <= kept_shift_reg[0];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[1] <= 1'h0;
    else if (_001_) parallel_data[1] <= kept_shift_reg[1];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[2] <= 1'h0;
    else if (_001_) parallel_data[2] <= kept_shift_reg[2];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[3] <= 1'h0;
    else if (_001_) parallel_data[3] <= kept_shift_reg[3];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[4] <= 1'h0;
    else if (_001_) parallel_data[4] <= kept_shift_reg[4];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[5] <= 1'h0;
    else if (_001_) parallel_data[5] <= kept_shift_reg[5];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[6] <= 1'h0;
    else if (_001_) parallel_data[6] <= kept_shift_reg[6];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[7] <= 1'h0;
    else if (_001_) parallel_data[7] <= kept_shift_reg[7];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[8] <= 1'h0;
    else if (_001_) parallel_data[8] <= kept_shift_reg[8];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[9] <= 1'h0;
    else if (_001_) parallel_data[9] <= kept_shift_reg[9];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[10] <= 1'h0;
    else if (_001_) parallel_data[10] <= kept_shift_reg[10];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[11] <= 1'h0;
    else if (_001_) parallel_data[11] <= kept_shift_reg[11];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[12] <= 1'h0;
    else if (_001_) parallel_data[12] <= kept_shift_reg[12];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[13] <= 1'h0;
    else if (_001_) parallel_data[13] <= kept_shift_reg[13];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[14] <= 1'h0;
    else if (_001_) parallel_data[14] <= kept_shift_reg[14];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[15] <= 1'h0;
    else if (_001_) parallel_data[15] <= kept_shift_reg[15];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[16] <= 1'h0;
    else if (_001_) parallel_data[16] <= kept_shift_reg[16];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[17] <= 1'h0;
    else if (_001_) parallel_data[17] <= kept_shift_reg[17];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[18] <= 1'h0;
    else if (_001_) parallel_data[18] <= kept_shift_reg[18];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[19] <= 1'h0;
    else if (_001_) parallel_data[19] <= kept_shift_reg[19];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[20] <= 1'h0;
    else if (_001_) parallel_data[20] <= kept_shift_reg[20];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[21] <= 1'h0;
    else if (_001_) parallel_data[21] <= kept_shift_reg[21];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[22] <= 1'h0;
    else if (_001_) parallel_data[22] <= kept_shift_reg[22];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[23] <= 1'h0;
    else if (_001_) parallel_data[23] <= kept_shift_reg[23];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[24] <= 1'h0;
    else if (_001_) parallel_data[24] <= kept_shift_reg[24];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[25] <= 1'h0;
    else if (_001_) parallel_data[25] <= kept_shift_reg[25];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[26] <= 1'h0;
    else if (_001_) parallel_data[26] <= kept_shift_reg[26];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[27] <= 1'h0;
    else if (_001_) parallel_data[27] <= kept_shift_reg[27];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[28] <= 1'h0;
    else if (_001_) parallel_data[28] <= kept_shift_reg[28];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[29] <= 1'h0;
    else if (_001_) parallel_data[29] <= kept_shift_reg[29];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[30] <= 1'h0;
    else if (_001_) parallel_data[30] <= kept_shift_reg[30];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[31] <= 1'h0;
    else if (_001_) parallel_data[31] <= kept_shift_reg[31];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[32] <= 1'h0;
    else if (_001_) parallel_data[32] <= kept_shift_reg[32];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[33] <= 1'h0;
    else if (_001_) parallel_data[33] <= kept_shift_reg[33];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[34] <= 1'h0;
    else if (_001_) parallel_data[34] <= kept_shift_reg[34];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[35] <= 1'h0;
    else if (_001_) parallel_data[35] <= kept_shift_reg[35];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[36] <= 1'h0;
    else if (_001_) parallel_data[36] <= kept_shift_reg[36];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[37] <= 1'h0;
    else if (_001_) parallel_data[37] <= kept_shift_reg[37];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[38] <= 1'h0;
    else if (_001_) parallel_data[38] <= kept_shift_reg[38];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[39] <= 1'h0;
    else if (_001_) parallel_data[39] <= kept_shift_reg[39];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[40] <= 1'h0;
    else if (_001_) parallel_data[40] <= kept_shift_reg[40];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[41] <= 1'h0;
    else if (_001_) parallel_data[41] <= kept_shift_reg[41];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[42] <= 1'h0;
    else if (_001_) parallel_data[42] <= kept_shift_reg[42];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[43] <= 1'h0;
    else if (_001_) parallel_data[43] <= kept_shift_reg[43];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[44] <= 1'h0;
    else if (_001_) parallel_data[44] <= kept_shift_reg[44];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[45] <= 1'h0;
    else if (_001_) parallel_data[45] <= kept_shift_reg[45];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[46] <= 1'h0;
    else if (_001_) parallel_data[46] <= kept_shift_reg[46];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[47] <= 1'h0;
    else if (_001_) parallel_data[47] <= kept_shift_reg[47];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[48] <= 1'h0;
    else if (_001_) parallel_data[48] <= kept_shift_reg[48];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[49] <= 1'h0;
    else if (_001_) parallel_data[49] <= kept_shift_reg[49];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[50] <= 1'h0;
    else if (_001_) parallel_data[50] <= kept_shift_reg[50];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[51] <= 1'h0;
    else if (_001_) parallel_data[51] <= kept_shift_reg[51];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[52] <= 1'h0;
    else if (_001_) parallel_data[52] <= kept_shift_reg[52];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[53] <= 1'h0;
    else if (_001_) parallel_data[53] <= kept_shift_reg[53];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[54] <= 1'h0;
    else if (_001_) parallel_data[54] <= kept_shift_reg[54];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[55] <= 1'h0;
    else if (_001_) parallel_data[55] <= kept_shift_reg[55];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[56] <= 1'h0;
    else if (_001_) parallel_data[56] <= kept_shift_reg[56];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[57] <= 1'h0;
    else if (_001_) parallel_data[57] <= kept_shift_reg[57];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[58] <= 1'h0;
    else if (_001_) parallel_data[58] <= kept_shift_reg[58];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[59] <= 1'h0;
    else if (_001_) parallel_data[59] <= kept_shift_reg[59];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[60] <= 1'h0;
    else if (_001_) parallel_data[60] <= kept_shift_reg[60];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[61] <= 1'h0;
    else if (_001_) parallel_data[61] <= kept_shift_reg[61];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[62] <= 1'h0;
    else if (_001_) parallel_data[62] <= kept_shift_reg[62];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[63] <= 1'h0;
    else if (_001_) parallel_data[63] <= kept_shift_reg[63];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[64] <= 1'h0;
    else if (_001_) parallel_data[64] <= kept_shift_reg[64];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[65] <= 1'h0;
    else if (_001_) parallel_data[65] <= kept_shift_reg[65];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[66] <= 1'h0;
    else if (_001_) parallel_data[66] <= kept_shift_reg[66];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[67] <= 1'h0;
    else if (_001_) parallel_data[67] <= kept_shift_reg[67];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[68] <= 1'h0;
    else if (_001_) parallel_data[68] <= kept_shift_reg[68];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[69] <= 1'h0;
    else if (_001_) parallel_data[69] <= kept_shift_reg[69];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[70] <= 1'h0;
    else if (_001_) parallel_data[70] <= kept_shift_reg[70];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[71] <= 1'h0;
    else if (_001_) parallel_data[71] <= kept_shift_reg[71];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[72] <= 1'h0;
    else if (_001_) parallel_data[72] <= kept_shift_reg[72];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[73] <= 1'h0;
    else if (_001_) parallel_data[73] <= kept_shift_reg[73];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[74] <= 1'h0;
    else if (_001_) parallel_data[74] <= kept_shift_reg[74];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[75] <= 1'h0;
    else if (_001_) parallel_data[75] <= kept_shift_reg[75];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[76] <= 1'h0;
    else if (_001_) parallel_data[76] <= kept_shift_reg[76];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[77] <= 1'h0;
    else if (_001_) parallel_data[77] <= kept_shift_reg[77];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[78] <= 1'h0;
    else if (_001_) parallel_data[78] <= kept_shift_reg[78];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[79] <= 1'h0;
    else if (_001_) parallel_data[79] <= kept_shift_reg[79];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[80] <= 1'h0;
    else if (_001_) parallel_data[80] <= kept_shift_reg[80];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[81] <= 1'h0;
    else if (_001_) parallel_data[81] <= kept_shift_reg[81];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[82] <= 1'h0;
    else if (_001_) parallel_data[82] <= kept_shift_reg[82];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[83] <= 1'h0;
    else if (_001_) parallel_data[83] <= kept_shift_reg[83];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[84] <= 1'h0;
    else if (_001_) parallel_data[84] <= kept_shift_reg[84];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[85] <= 1'h0;
    else if (_001_) parallel_data[85] <= kept_shift_reg[85];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[86] <= 1'h0;
    else if (_001_) parallel_data[86] <= kept_shift_reg[86];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[87] <= 1'h0;
    else if (_001_) parallel_data[87] <= kept_shift_reg[87];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[88] <= 1'h0;
    else if (_001_) parallel_data[88] <= kept_shift_reg[88];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[89] <= 1'h0;
    else if (_001_) parallel_data[89] <= kept_shift_reg[89];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[90] <= 1'h0;
    else if (_001_) parallel_data[90] <= kept_shift_reg[90];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[91] <= 1'h0;
    else if (_001_) parallel_data[91] <= kept_shift_reg[91];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[92] <= 1'h0;
    else if (_001_) parallel_data[92] <= kept_shift_reg[92];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[93] <= 1'h0;
    else if (_001_) parallel_data[93] <= kept_shift_reg[93];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[94] <= 1'h0;
    else if (_001_) parallel_data[94] <= kept_shift_reg[94];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[95] <= 1'h0;
    else if (_001_) parallel_data[95] <= kept_shift_reg[95];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[96] <= 1'h0;
    else if (_001_) parallel_data[96] <= kept_shift_reg[96];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[97] <= 1'h0;
    else if (_001_) parallel_data[97] <= kept_shift_reg[97];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[98] <= 1'h0;
    else if (_001_) parallel_data[98] <= kept_shift_reg[98];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[99] <= 1'h0;
    else if (_001_) parallel_data[99] <= kept_shift_reg[99];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[100] <= 1'h0;
    else if (_001_) parallel_data[100] <= kept_shift_reg[100];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[101] <= 1'h0;
    else if (_001_) parallel_data[101] <= kept_shift_reg[101];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[102] <= 1'h0;
    else if (_001_) parallel_data[102] <= kept_shift_reg[102];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[103] <= 1'h0;
    else if (_001_) parallel_data[103] <= kept_shift_reg[103];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[104] <= 1'h0;
    else if (_001_) parallel_data[104] <= kept_shift_reg[104];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[105] <= 1'h0;
    else if (_001_) parallel_data[105] <= kept_shift_reg[105];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[106] <= 1'h0;
    else if (_001_) parallel_data[106] <= kept_shift_reg[106];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[107] <= 1'h0;
    else if (_001_) parallel_data[107] <= kept_shift_reg[107];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[108] <= 1'h0;
    else if (_001_) parallel_data[108] <= kept_shift_reg[108];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[109] <= 1'h0;
    else if (_001_) parallel_data[109] <= kept_shift_reg[109];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[110] <= 1'h0;
    else if (_001_) parallel_data[110] <= kept_shift_reg[110];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[111] <= 1'h0;
    else if (_001_) parallel_data[111] <= kept_shift_reg[111];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[112] <= 1'h0;
    else if (_001_) parallel_data[112] <= kept_shift_reg[112];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[113] <= 1'h0;
    else if (_001_) parallel_data[113] <= kept_shift_reg[113];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[114] <= 1'h0;
    else if (_001_) parallel_data[114] <= kept_shift_reg[114];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[115] <= 1'h0;
    else if (_001_) parallel_data[115] <= kept_shift_reg[115];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[116] <= 1'h0;
    else if (_001_) parallel_data[116] <= kept_shift_reg[116];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[117] <= 1'h0;
    else if (_001_) parallel_data[117] <= kept_shift_reg[117];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[118] <= 1'h0;
    else if (_001_) parallel_data[118] <= kept_shift_reg[118];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[119] <= 1'h0;
    else if (_001_) parallel_data[119] <= kept_shift_reg[119];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[120] <= 1'h0;
    else if (_001_) parallel_data[120] <= kept_shift_reg[120];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[121] <= 1'h0;
    else if (_001_) parallel_data[121] <= kept_shift_reg[121];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[122] <= 1'h0;
    else if (_001_) parallel_data[122] <= kept_shift_reg[122];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[123] <= 1'h0;
    else if (_001_) parallel_data[123] <= kept_shift_reg[123];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[124] <= 1'h0;
    else if (_001_) parallel_data[124] <= kept_shift_reg[124];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[125] <= 1'h0;
    else if (_001_) parallel_data[125] <= kept_shift_reg[125];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[126] <= 1'h0;
    else if (_001_) parallel_data[126] <= kept_shift_reg[126];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) parallel_data[127] <= 1'h0;
    else if (_001_) parallel_data[127] <= kept_shift_reg[127];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) bit_idx[0] <= 1'h0;
    else if (_006_) bit_idx[0] <= _000_[0];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) bit_idx[1] <= 1'h0;
    else if (_006_) bit_idx[1] <= _000_[1];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) bit_idx[2] <= 1'h0;
    else if (_006_) bit_idx[2] <= _000_[2];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) bit_idx[3] <= 1'h0;
    else if (_006_) bit_idx[3] <= _000_[3];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) bit_idx[4] <= 1'h0;
    else if (_006_) bit_idx[4] <= _000_[4];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) bit_idx[5] <= 1'h0;
    else if (_006_) bit_idx[5] <= _000_[5];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) bit_idx[6] <= 1'h0;
    else if (_006_) bit_idx[6] <= _000_[6];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) bit_idx[7] <= 1'h0;
    else if (_006_) bit_idx[7] <= _000_[7];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[0] <= 1'h0;
    else if (_006_) kept_bit_idx[0] <= _002_[0];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[1] <= 1'h0;
    else if (_006_) kept_bit_idx[1] <= _002_[1];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[2] <= 1'h0;
    else if (_006_) kept_bit_idx[2] <= _002_[2];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[3] <= 1'h0;
    else if (_006_) kept_bit_idx[3] <= _002_[3];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[4] <= 1'h0;
    else if (_006_) kept_bit_idx[4] <= _002_[4];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[5] <= 1'h0;
    else if (_006_) kept_bit_idx[5] <= _002_[5];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[6] <= 1'h0;
    else if (_006_) kept_bit_idx[6] <= _002_[6];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[7] <= 1'h0;
    else if (_006_) kept_bit_idx[7] <= _002_[7];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) receiving <= 1'h0;
    else receiving <= _005_;
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[1] <= 1'h0;
    else if (_008_) kept_shift_reg[1] <= kept_shift_reg[2];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[2] <= 1'h0;
    else if (_008_) kept_shift_reg[2] <= kept_shift_reg[3];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[3] <= 1'h0;
    else if (_008_) kept_shift_reg[3] <= kept_shift_reg[4];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[4] <= 1'h0;
    else if (_008_) kept_shift_reg[4] <= kept_shift_reg[5];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[5] <= 1'h0;
    else if (_008_) kept_shift_reg[5] <= kept_shift_reg[6];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[6] <= 1'h0;
    else if (_008_) kept_shift_reg[6] <= kept_shift_reg[7];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[7] <= 1'h0;
    else if (_008_) kept_shift_reg[7] <= kept_shift_reg[8];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[8] <= 1'h0;
    else if (_008_) kept_shift_reg[8] <= kept_shift_reg[9];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[9] <= 1'h0;
    else if (_008_) kept_shift_reg[9] <= kept_shift_reg[10];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[10] <= 1'h0;
    else if (_008_) kept_shift_reg[10] <= kept_shift_reg[11];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[11] <= 1'h0;
    else if (_008_) kept_shift_reg[11] <= kept_shift_reg[12];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[12] <= 1'h0;
    else if (_008_) kept_shift_reg[12] <= kept_shift_reg[13];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[13] <= 1'h0;
    else if (_008_) kept_shift_reg[13] <= kept_shift_reg[14];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[14] <= 1'h0;
    else if (_008_) kept_shift_reg[14] <= kept_shift_reg[15];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[15] <= 1'h0;
    else if (_008_) kept_shift_reg[15] <= kept_shift_reg[16];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[16] <= 1'h0;
    else if (_008_) kept_shift_reg[16] <= kept_shift_reg[17];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[17] <= 1'h0;
    else if (_008_) kept_shift_reg[17] <= kept_shift_reg[18];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[18] <= 1'h0;
    else if (_008_) kept_shift_reg[18] <= kept_shift_reg[19];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[19] <= 1'h0;
    else if (_008_) kept_shift_reg[19] <= kept_shift_reg[20];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[20] <= 1'h0;
    else if (_008_) kept_shift_reg[20] <= kept_shift_reg[21];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[21] <= 1'h0;
    else if (_008_) kept_shift_reg[21] <= kept_shift_reg[22];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[22] <= 1'h0;
    else if (_008_) kept_shift_reg[22] <= kept_shift_reg[23];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[23] <= 1'h0;
    else if (_008_) kept_shift_reg[23] <= kept_shift_reg[24];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[24] <= 1'h0;
    else if (_008_) kept_shift_reg[24] <= kept_shift_reg[25];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[25] <= 1'h0;
    else if (_008_) kept_shift_reg[25] <= kept_shift_reg[26];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[26] <= 1'h0;
    else if (_008_) kept_shift_reg[26] <= kept_shift_reg[27];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[27] <= 1'h0;
    else if (_008_) kept_shift_reg[27] <= kept_shift_reg[28];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[28] <= 1'h0;
    else if (_008_) kept_shift_reg[28] <= kept_shift_reg[29];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[29] <= 1'h0;
    else if (_008_) kept_shift_reg[29] <= kept_shift_reg[30];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[30] <= 1'h0;
    else if (_008_) kept_shift_reg[30] <= kept_shift_reg[31];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[31] <= 1'h0;
    else if (_008_) kept_shift_reg[31] <= kept_shift_reg[32];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[32] <= 1'h0;
    else if (_008_) kept_shift_reg[32] <= kept_shift_reg[33];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[33] <= 1'h0;
    else if (_008_) kept_shift_reg[33] <= kept_shift_reg[34];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[34] <= 1'h0;
    else if (_008_) kept_shift_reg[34] <= kept_shift_reg[35];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[35] <= 1'h0;
    else if (_008_) kept_shift_reg[35] <= kept_shift_reg[36];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[36] <= 1'h0;
    else if (_008_) kept_shift_reg[36] <= kept_shift_reg[37];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[37] <= 1'h0;
    else if (_008_) kept_shift_reg[37] <= kept_shift_reg[38];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[38] <= 1'h0;
    else if (_008_) kept_shift_reg[38] <= kept_shift_reg[39];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[39] <= 1'h0;
    else if (_008_) kept_shift_reg[39] <= kept_shift_reg[40];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[40] <= 1'h0;
    else if (_008_) kept_shift_reg[40] <= kept_shift_reg[41];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[41] <= 1'h0;
    else if (_008_) kept_shift_reg[41] <= kept_shift_reg[42];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[42] <= 1'h0;
    else if (_008_) kept_shift_reg[42] <= kept_shift_reg[43];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[43] <= 1'h0;
    else if (_008_) kept_shift_reg[43] <= kept_shift_reg[44];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[44] <= 1'h0;
    else if (_008_) kept_shift_reg[44] <= kept_shift_reg[45];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[45] <= 1'h0;
    else if (_008_) kept_shift_reg[45] <= kept_shift_reg[46];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[46] <= 1'h0;
    else if (_008_) kept_shift_reg[46] <= kept_shift_reg[47];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[47] <= 1'h0;
    else if (_008_) kept_shift_reg[47] <= kept_shift_reg[48];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[48] <= 1'h0;
    else if (_008_) kept_shift_reg[48] <= kept_shift_reg[49];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[49] <= 1'h0;
    else if (_008_) kept_shift_reg[49] <= kept_shift_reg[50];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[50] <= 1'h0;
    else if (_008_) kept_shift_reg[50] <= kept_shift_reg[51];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[51] <= 1'h0;
    else if (_008_) kept_shift_reg[51] <= kept_shift_reg[52];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[52] <= 1'h0;
    else if (_008_) kept_shift_reg[52] <= kept_shift_reg[53];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[53] <= 1'h0;
    else if (_008_) kept_shift_reg[53] <= kept_shift_reg[54];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[54] <= 1'h0;
    else if (_008_) kept_shift_reg[54] <= kept_shift_reg[55];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[55] <= 1'h0;
    else if (_008_) kept_shift_reg[55] <= kept_shift_reg[56];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[56] <= 1'h0;
    else if (_008_) kept_shift_reg[56] <= kept_shift_reg[57];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[57] <= 1'h0;
    else if (_008_) kept_shift_reg[57] <= kept_shift_reg[58];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[58] <= 1'h0;
    else if (_008_) kept_shift_reg[58] <= kept_shift_reg[59];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[59] <= 1'h0;
    else if (_008_) kept_shift_reg[59] <= kept_shift_reg[60];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[60] <= 1'h0;
    else if (_008_) kept_shift_reg[60] <= kept_shift_reg[61];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[61] <= 1'h0;
    else if (_008_) kept_shift_reg[61] <= kept_shift_reg[62];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[62] <= 1'h0;
    else if (_008_) kept_shift_reg[62] <= kept_shift_reg[63];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[63] <= 1'h0;
    else if (_008_) kept_shift_reg[63] <= kept_shift_reg[64];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[64] <= 1'h0;
    else if (_008_) kept_shift_reg[64] <= kept_shift_reg[65];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[65] <= 1'h0;
    else if (_008_) kept_shift_reg[65] <= kept_shift_reg[66];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[66] <= 1'h0;
    else if (_008_) kept_shift_reg[66] <= kept_shift_reg[67];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[67] <= 1'h0;
    else if (_008_) kept_shift_reg[67] <= kept_shift_reg[68];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[68] <= 1'h0;
    else if (_008_) kept_shift_reg[68] <= kept_shift_reg[69];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[69] <= 1'h0;
    else if (_008_) kept_shift_reg[69] <= kept_shift_reg[70];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[70] <= 1'h0;
    else if (_008_) kept_shift_reg[70] <= kept_shift_reg[71];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[71] <= 1'h0;
    else if (_008_) kept_shift_reg[71] <= kept_shift_reg[72];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[72] <= 1'h0;
    else if (_008_) kept_shift_reg[72] <= kept_shift_reg[73];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[73] <= 1'h0;
    else if (_008_) kept_shift_reg[73] <= kept_shift_reg[74];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[74] <= 1'h0;
    else if (_008_) kept_shift_reg[74] <= kept_shift_reg[75];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[75] <= 1'h0;
    else if (_008_) kept_shift_reg[75] <= kept_shift_reg[76];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[76] <= 1'h0;
    else if (_008_) kept_shift_reg[76] <= kept_shift_reg[77];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[77] <= 1'h0;
    else if (_008_) kept_shift_reg[77] <= kept_shift_reg[78];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[78] <= 1'h0;
    else if (_008_) kept_shift_reg[78] <= kept_shift_reg[79];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[79] <= 1'h0;
    else if (_008_) kept_shift_reg[79] <= kept_shift_reg[80];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[80] <= 1'h0;
    else if (_008_) kept_shift_reg[80] <= kept_shift_reg[81];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[81] <= 1'h0;
    else if (_008_) kept_shift_reg[81] <= kept_shift_reg[82];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[82] <= 1'h0;
    else if (_008_) kept_shift_reg[82] <= kept_shift_reg[83];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[83] <= 1'h0;
    else if (_008_) kept_shift_reg[83] <= kept_shift_reg[84];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[84] <= 1'h0;
    else if (_008_) kept_shift_reg[84] <= kept_shift_reg[85];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[85] <= 1'h0;
    else if (_008_) kept_shift_reg[85] <= kept_shift_reg[86];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[86] <= 1'h0;
    else if (_008_) kept_shift_reg[86] <= kept_shift_reg[87];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[87] <= 1'h0;
    else if (_008_) kept_shift_reg[87] <= kept_shift_reg[88];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[88] <= 1'h0;
    else if (_008_) kept_shift_reg[88] <= kept_shift_reg[89];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[89] <= 1'h0;
    else if (_008_) kept_shift_reg[89] <= kept_shift_reg[90];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[90] <= 1'h0;
    else if (_008_) kept_shift_reg[90] <= kept_shift_reg[91];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[91] <= 1'h0;
    else if (_008_) kept_shift_reg[91] <= kept_shift_reg[92];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[92] <= 1'h0;
    else if (_008_) kept_shift_reg[92] <= kept_shift_reg[93];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[93] <= 1'h0;
    else if (_008_) kept_shift_reg[93] <= kept_shift_reg[94];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[94] <= 1'h0;
    else if (_008_) kept_shift_reg[94] <= kept_shift_reg[95];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[95] <= 1'h0;
    else if (_008_) kept_shift_reg[95] <= kept_shift_reg[96];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[96] <= 1'h0;
    else if (_008_) kept_shift_reg[96] <= kept_shift_reg[97];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[97] <= 1'h0;
    else if (_008_) kept_shift_reg[97] <= kept_shift_reg[98];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[98] <= 1'h0;
    else if (_008_) kept_shift_reg[98] <= kept_shift_reg[99];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[99] <= 1'h0;
    else if (_008_) kept_shift_reg[99] <= kept_shift_reg[100];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[100] <= 1'h0;
    else if (_008_) kept_shift_reg[100] <= kept_shift_reg[101];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[101] <= 1'h0;
    else if (_008_) kept_shift_reg[101] <= kept_shift_reg[102];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[102] <= 1'h0;
    else if (_008_) kept_shift_reg[102] <= kept_shift_reg[103];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[103] <= 1'h0;
    else if (_008_) kept_shift_reg[103] <= kept_shift_reg[104];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[104] <= 1'h0;
    else if (_008_) kept_shift_reg[104] <= kept_shift_reg[105];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[105] <= 1'h0;
    else if (_008_) kept_shift_reg[105] <= kept_shift_reg[106];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[106] <= 1'h0;
    else if (_008_) kept_shift_reg[106] <= kept_shift_reg[107];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[107] <= 1'h0;
    else if (_008_) kept_shift_reg[107] <= kept_shift_reg[108];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[108] <= 1'h0;
    else if (_008_) kept_shift_reg[108] <= kept_shift_reg[109];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[109] <= 1'h0;
    else if (_008_) kept_shift_reg[109] <= kept_shift_reg[110];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[110] <= 1'h0;
    else if (_008_) kept_shift_reg[110] <= kept_shift_reg[111];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[111] <= 1'h0;
    else if (_008_) kept_shift_reg[111] <= kept_shift_reg[112];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[112] <= 1'h0;
    else if (_008_) kept_shift_reg[112] <= kept_shift_reg[113];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[113] <= 1'h0;
    else if (_008_) kept_shift_reg[113] <= kept_shift_reg[114];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[114] <= 1'h0;
    else if (_008_) kept_shift_reg[114] <= kept_shift_reg[115];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[115] <= 1'h0;
    else if (_008_) kept_shift_reg[115] <= kept_shift_reg[116];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[116] <= 1'h0;
    else if (_008_) kept_shift_reg[116] <= kept_shift_reg[117];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[117] <= 1'h0;
    else if (_008_) kept_shift_reg[117] <= kept_shift_reg[118];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[118] <= 1'h0;
    else if (_008_) kept_shift_reg[118] <= kept_shift_reg[119];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[119] <= 1'h0;
    else if (_008_) kept_shift_reg[119] <= kept_shift_reg[120];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[120] <= 1'h0;
    else if (_008_) kept_shift_reg[120] <= kept_shift_reg[121];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[121] <= 1'h0;
    else if (_008_) kept_shift_reg[121] <= kept_shift_reg[122];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[122] <= 1'h0;
    else if (_008_) kept_shift_reg[122] <= kept_shift_reg[123];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[123] <= 1'h0;
    else if (_008_) kept_shift_reg[123] <= kept_shift_reg[124];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[124] <= 1'h0;
    else if (_008_) kept_shift_reg[124] <= kept_shift_reg[125];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[125] <= 1'h0;
    else if (_008_) kept_shift_reg[125] <= kept_shift_reg[126];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[126] <= 1'h0;
    else if (_008_) kept_shift_reg[126] <= kept_shift_reg[127];
  (* src = "rtl/deserializer.v:26.5-58.8" *)
  always @(posedge serial_clk, negedge rst_n)
    if (!rst_n) kept_shift_reg[127] <= 1'h0;
    else if (_008_) kept_shift_reg[127] <= serial_data;
  assign shift_reg = kept_shift_reg;
endmodule

(* dynports =  1  *)
(* hdlname = "serializer" *)
(* src = "rtl/serializer.v:1.1-64.10" *)
module \$paramod\serializer\WIDTH=s32'00000000000000000000001000000000 (clk, rst_n, serial_clk, parallel_data, frame_sync, serial_data, busy);
  (* src = "rtl/serializer.v:32.5-63.8" *)
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  (* force_downto = 32'd1 *)
  (* src = "rtl/serializer.v:52.24-52.35|/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:270.23-270.24" *)
  wire [9:0] _029_;
  (* force_downto = 32'd1 *)
  (* src = "rtl/serializer.v:52.24-52.35|/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:270.26-270.27" *)
  wire [9:0] _030_;
  (* force_downto = 32'd1 *)
  (* src = "rtl/serializer.v:53.29-53.45|/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:270.23-270.24" *)
  wire [9:0] _031_;
  (* force_downto = 32'd1 *)
  (* src = "rtl/serializer.v:53.29-53.45|/nix/store/9r0bh7sp051dpm8km8bqlb028anpd3v3-yosys/bin/../share/yosys/techmap.v:270.26-270.27" *)
  wire [9:0] _032_;
  (* src = "rtl/serializer.v:19.27-19.34" *)
  reg [9:0] bit_idx;
  (* src = "rtl/serializer.v:17.16-17.20" *)
  output busy;
  wire busy;
  (* src = "rtl/serializer.v:11.16-11.19" *)
  input clk;
  wire clk;
  (* src = "rtl/serializer.v:15.17-15.27" *)
  output frame_sync;
  wire frame_sync;
  (* keep = "true" *)
  (* src = "rtl/serializer.v:24.47-24.59" *)
  reg [9:0] kept_bit_idx;
  (* keep = "true" *)
  (* src = "rtl/serializer.v:25.43-25.57" *)
  wire [511:0] kept_shift_reg;
  (* keep = "true" *)
  (* src = "rtl/serializer.v:26.29-26.46" *)
  wire kept_transmitting;
  (* src = "rtl/serializer.v:14.30-14.43" *)
  input [511:0] parallel_data;
  wire [511:0] parallel_data;
  (* src = "rtl/serializer.v:12.16-12.21" *)
  input rst_n;
  wire rst_n;
  (* src = "rtl/serializer.v:13.17-13.27" *)
  output serial_clk;
  wire serial_clk;
  (* src = "rtl/serializer.v:16.16-16.27" *)
  output serial_data;
  wire serial_data;
  (* src = "rtl/serializer.v:20.23-20.32" *)
  wire [511:0] shift_reg;
  (* src = "rtl/serializer.v:21.9-21.21" *)
  reg transmitting;
  assign _031_[0] = ~kept_bit_idx[0];
  assign _029_[0] = ~bit_idx[0];
  assign _001_ = bit_idx[0] & bit_idx[1];
  assign _002_ = ~(bit_idx[2] & bit_idx[3]);
  assign _003_ = _001_ & ~(_002_);
  assign _004_ = ~(bit_idx[4] & bit_idx[5]);
  assign _005_ = ~(bit_idx[7] & bit_idx[6]);
  assign _006_ = _005_ | _004_;
  assign _007_ = _003_ & ~(_006_);
  assign _008_ = bit_idx[9] | ~(bit_idx[8]);
  assign _009_ = _007_ & ~(_008_);
  assign _000_ = transmitting & ~(_009_);
  assign _032_[1] = kept_bit_idx[1] ^ kept_bit_idx[0];
  assign _010_ = ~(kept_bit_idx[1] & kept_bit_idx[0]);
  assign _032_[2] = ~(_010_ ^ kept_bit_idx[2]);
  assign _011_ = kept_bit_idx[2] & ~(_010_);
  assign _032_[3] = _011_ ^ kept_bit_idx[3];
  assign _012_ = ~(kept_bit_idx[3] & kept_bit_idx[2]);
  assign _013_ = _012_ | _010_;
  assign _032_[4] = ~(_013_ ^ kept_bit_idx[4]);
  assign _014_ = kept_bit_idx[4] & ~(_013_);
  assign _032_[5] = _014_ ^ kept_bit_idx[5];
  assign _015_ = ~(kept_bit_idx[5] & kept_bit_idx[4]);
  assign _016_ = _015_ | _013_;
  assign _032_[6] = ~(_016_ ^ kept_bit_idx[6]);
  assign _017_ = kept_bit_idx[6] & ~(_016_);
  assign _032_[7] = _017_ ^ kept_bit_idx[7];
  assign _018_ = ~(kept_bit_idx[7] & kept_bit_idx[6]);
  assign _019_ = _018_ | _015_;
  assign _020_ = _019_ | _013_;
  assign _032_[8] = ~(_020_ ^ kept_bit_idx[8]);
  assign _021_ = kept_bit_idx[8] & ~(_020_);
  assign _032_[9] = _021_ ^ kept_bit_idx[9];
  assign _030_[1] = bit_idx[0] ^ bit_idx[1];
  assign _030_[2] = _001_ ^ bit_idx[2];
  assign _022_ = ~(bit_idx[0] & bit_idx[1]);
  assign _023_ = bit_idx[2] & ~(_022_);
  assign _030_[3] = _023_ ^ bit_idx[3];
  assign _030_[4] = _003_ ^ bit_idx[4];
  assign _024_ = _002_ | _022_;
  assign _025_ = bit_idx[4] & ~(_024_);
  assign _030_[5] = _025_ ^ bit_idx[5];
  assign _026_ = _004_ | _024_;
  assign _030_[6] = ~(_026_ ^ bit_idx[6]);
  assign _027_ = bit_idx[6] & ~(_026_);
  assign _030_[7] = _027_ ^ bit_idx[7];
  assign _030_[8] = _007_ ^ bit_idx[8];
  assign _028_ = _007_ & bit_idx[8];
  assign _030_[9] = _028_ ^ bit_idx[9];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[0] <= 1'h0;
    else if (transmitting) bit_idx[0] <= _029_[0];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[1] <= 1'h0;
    else if (transmitting) bit_idx[1] <= _030_[1];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[2] <= 1'h0;
    else if (transmitting) bit_idx[2] <= _030_[2];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[3] <= 1'h0;
    else if (transmitting) bit_idx[3] <= _030_[3];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[4] <= 1'h0;
    else if (transmitting) bit_idx[4] <= _030_[4];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[5] <= 1'h0;
    else if (transmitting) bit_idx[5] <= _030_[5];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[6] <= 1'h0;
    else if (transmitting) bit_idx[6] <= _030_[6];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[7] <= 1'h0;
    else if (transmitting) bit_idx[7] <= _030_[7];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[8] <= 1'h0;
    else if (transmitting) bit_idx[8] <= _030_[8];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) bit_idx[9] <= 1'h0;
    else if (transmitting) bit_idx[9] <= _030_[9];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) transmitting <= 1'h0;
    else transmitting <= _000_;
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[0] <= 1'h0;
    else if (transmitting) kept_bit_idx[0] <= _031_[0];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[1] <= 1'h0;
    else if (transmitting) kept_bit_idx[1] <= _032_[1];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[2] <= 1'h0;
    else if (transmitting) kept_bit_idx[2] <= _032_[2];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[3] <= 1'h0;
    else if (transmitting) kept_bit_idx[3] <= _032_[3];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[4] <= 1'h0;
    else if (transmitting) kept_bit_idx[4] <= _032_[4];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[5] <= 1'h0;
    else if (transmitting) kept_bit_idx[5] <= _032_[5];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[6] <= 1'h0;
    else if (transmitting) kept_bit_idx[6] <= _032_[6];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[7] <= 1'h0;
    else if (transmitting) kept_bit_idx[7] <= _032_[7];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[8] <= 1'h0;
    else if (transmitting) kept_bit_idx[8] <= _032_[8];
  (* src = "rtl/serializer.v:32.5-63.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) kept_bit_idx[9] <= 1'h0;
    else if (transmitting) kept_bit_idx[9] <= _032_[9];
  assign _029_[9:1] = bit_idx[9:1];
  assign _030_[0] = _029_[0];
  assign _031_[9:1] = kept_bit_idx[9:1];
  assign _032_[0] = _031_[0];
  assign busy = 1'h0;
  assign frame_sync = transmitting;
  assign kept_shift_reg = 512'h00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign kept_transmitting = 1'h0;
  assign serial_clk = clk;
  assign serial_data = 1'h0;
  assign shift_reg = 512'bx;
endmodule

(* dynports =  1  *)
(* src = "rtl/systolic4x4_serial_io.v:1.1-151.10" *)
module Systolic4x4_serial_io(clk, rst_n, start, A_in_serial_data, A_in_serial_clk, A_in_frame_sync, B_in_serial_data, B_in_serial_clk, B_in_frame_sync, C_out_serial_data, C_out_serial_clk, C_out_frame_sync, done);
  (* src = "rtl/systolic4x4_serial_io.v:89.20-89.24" *)
  wire [127:0] A_in;
  (* src = "rtl/systolic4x4_serial_io.v:31.12-31.27" *)
  input A_in_frame_sync;
  wire A_in_frame_sync;
  (* src = "rtl/systolic4x4_serial_io.v:30.12-30.27" *)
  input A_in_serial_clk;
  wire A_in_serial_clk;
  (* src = "rtl/systolic4x4_serial_io.v:29.12-29.28" *)
  input A_in_serial_data;
  wire A_in_serial_data;
  (* src = "rtl/systolic4x4_serial_io.v:94.6-94.16" *)
  (* unused_bits = "0" *)
  wire A_in_valid;
  (* src = "rtl/systolic4x4_serial_io.v:90.20-90.24" *)
  wire [127:0] B_in;
  (* src = "rtl/systolic4x4_serial_io.v:35.12-35.27" *)
  input B_in_frame_sync;
  wire B_in_frame_sync;
  (* src = "rtl/systolic4x4_serial_io.v:34.12-34.27" *)
  input B_in_serial_clk;
  wire B_in_serial_clk;
  (* src = "rtl/systolic4x4_serial_io.v:33.12-33.28" *)
  input B_in_serial_data;
  wire B_in_serial_data;
  (* src = "rtl/systolic4x4_serial_io.v:95.6-95.16" *)
  (* unused_bits = "0" *)
  wire B_in_valid;
  (* src = "rtl/systolic4x4_serial_io.v:91.20-91.25" *)
  wire [511:0] C_out;
  (* src = "rtl/systolic4x4_serial_io.v:39.13-39.29" *)
  output C_out_frame_sync;
  wire C_out_frame_sync;
  (* src = "rtl/systolic4x4_serial_io.v:38.13-38.29" *)
  output C_out_serial_clk;
  wire C_out_serial_clk;
  (* src = "rtl/systolic4x4_serial_io.v:37.13-37.30" *)
  output C_out_serial_data;
  wire C_out_serial_data;
  (* src = "rtl/systolic4x4_serial_io.v:25.12-25.15" *)
  input clk;
  wire clk;
  (* src = "rtl/systolic4x4_serial_io.v:41.13-41.17" *)
  output done;
  wire done;
  (* src = "rtl/systolic4x4_serial_io.v:51.6-51.30" *)
  wire internal_A_in_frame_sync;
  (* src = "rtl/systolic4x4_serial_io.v:50.6-50.30" *)
  wire internal_A_in_serial_clk;
  (* src = "rtl/systolic4x4_serial_io.v:49.6-49.31" *)
  wire internal_A_in_serial_data;
  (* src = "rtl/systolic4x4_serial_io.v:55.6-55.30" *)
  wire internal_B_in_frame_sync;
  (* src = "rtl/systolic4x4_serial_io.v:54.6-54.30" *)
  wire internal_B_in_serial_clk;
  (* src = "rtl/systolic4x4_serial_io.v:53.6-53.31" *)
  wire internal_B_in_serial_data;
  (* src = "rtl/systolic4x4_serial_io.v:59.6-59.31" *)
  wire internal_C_out_frame_sync;
  (* src = "rtl/systolic4x4_serial_io.v:58.6-58.31" *)
  wire internal_C_out_serial_clk;
  (* src = "rtl/systolic4x4_serial_io.v:57.6-57.32" *)
  wire internal_C_out_serial_data;
  (* src = "rtl/systolic4x4_serial_io.v:45.6-45.18" *)
  wire internal_clk;
  (* src = "rtl/systolic4x4_serial_io.v:61.6-61.19" *)
  wire internal_done;
  (* src = "rtl/systolic4x4_serial_io.v:46.6-46.20" *)
  wire internal_rst_n;
  (* src = "rtl/systolic4x4_serial_io.v:47.6-47.20" *)
  wire internal_start;
  (* src = "rtl/systolic4x4_serial_io.v:26.12-26.17" *)
  input rst_n;
  wire rst_n;
  (* src = "rtl/systolic4x4_serial_io.v:98.6-98.14" *)
  (* unused_bits = "0" *)
  wire ser_busy;
  (* src = "rtl/systolic4x4_serial_io.v:27.12-27.17" *)
  input start;
  wire start;
  (* src = "rtl/systolic4x4_serial_io.v:101.33-109.2" *)
  \$paramod\deserializer\WIDTH=s32'00000000000000000000000010000000  deser_A (
    .clk(clk),
    .data_valid(A_in_valid),
    .frame_sync(A_in_frame_sync),
    .parallel_data(A_in),
    .rst_n(rst_n),
    .serial_clk(A_in_serial_clk),
    .serial_data(A_in_serial_data)
  );
  (* src = "rtl/systolic4x4_serial_io.v:112.33-120.2" *)
  \$paramod\deserializer\WIDTH=s32'00000000000000000000000010000000  deser_B (
    .clk(clk),
    .data_valid(B_in_valid),
    .frame_sync(B_in_frame_sync),
    .parallel_data(B_in),
    .rst_n(rst_n),
    .serial_clk(B_in_serial_clk),
    .serial_data(B_in_serial_data)
  );
  (* src = "rtl/systolic4x4_serial_io.v:141.31-149.2" *)
  \$paramod\serializer\WIDTH=s32'00000000000000000000001000000000  ser_C (
    .busy(ser_busy),
    .clk(clk),
    .frame_sync(internal_C_out_frame_sync),
    .parallel_data(C_out),
    .rst_n(rst_n),
    .serial_clk(internal_C_out_serial_clk),
    .serial_data(internal_C_out_serial_data)
  );
  (* src = "rtl/systolic4x4_serial_io.v:130.3-138.2" *)
  \$paramod$d3d5788cdda5471de1680ab667385b769574627d\Systolic4x4  systolic_inst (
    .A_in(A_in),
    .B_in(B_in),
    .C_out(C_out),
    .clk(clk),
    .done(internal_done),
    .rst_n(rst_n),
    .start(start)
  );
  assign C_out_frame_sync = internal_C_out_frame_sync;
  assign C_out_serial_clk = internal_C_out_serial_clk;
  assign C_out_serial_data = internal_C_out_serial_data;
  assign done = internal_done;
  assign internal_A_in_frame_sync = A_in_frame_sync;
  assign internal_A_in_serial_clk = A_in_serial_clk;
  assign internal_A_in_serial_data = A_in_serial_data;
  assign internal_B_in_frame_sync = B_in_frame_sync;
  assign internal_B_in_serial_clk = B_in_serial_clk;
  assign internal_B_in_serial_data = B_in_serial_data;
  assign internal_clk = clk;
  assign internal_rst_n = rst_n;
  assign internal_start = start;
endmodule

(* top =  1  *)
(* src = "rtl/top_wrapper.v:1.1-33.10" *)
module top_wrapper(clk, rst_n, start, A_in_serial_data, A_in_serial_clk, A_in_frame_sync, B_in_serial_data, B_in_serial_clk, B_in_frame_sync, done, C_out_serial_data, C_out_serial_clk, C_out_frame_sync);
  (* src = "rtl/top_wrapper.v:7.14-7.29" *)
  input A_in_frame_sync;
  wire A_in_frame_sync;
  (* src = "rtl/top_wrapper.v:6.14-6.29" *)
  input A_in_serial_clk;
  wire A_in_serial_clk;
  (* src = "rtl/top_wrapper.v:5.14-5.30" *)
  input A_in_serial_data;
  wire A_in_serial_data;
  (* src = "rtl/top_wrapper.v:10.14-10.29" *)
  input B_in_frame_sync;
  wire B_in_frame_sync;
  (* src = "rtl/top_wrapper.v:9.14-9.29" *)
  input B_in_serial_clk;
  wire B_in_serial_clk;
  (* src = "rtl/top_wrapper.v:8.14-8.30" *)
  input B_in_serial_data;
  wire B_in_serial_data;
  (* src = "rtl/top_wrapper.v:14.15-14.31" *)
  output C_out_frame_sync;
  wire C_out_frame_sync;
  (* src = "rtl/top_wrapper.v:13.15-13.31" *)
  output C_out_serial_clk;
  wire C_out_serial_clk;
  (* src = "rtl/top_wrapper.v:12.15-12.32" *)
  output C_out_serial_data;
  wire C_out_serial_data;
  (* src = "rtl/top_wrapper.v:2.14-2.17" *)
  input clk;
  wire clk;
  (* src = "rtl/top_wrapper.v:11.15-11.19" *)
  output done;
  wire done;
  (* src = "rtl/top_wrapper.v:3.14-3.19" *)
  input rst_n;
  wire rst_n;
  (* src = "rtl/top_wrapper.v:4.14-4.19" *)
  input start;
  wire start;
  (* module_not_derived = 32'd1 *)
  (* src = "rtl/top_wrapper.v:17.25-31.4" *)
  Systolic4x4_serial_io uut (
    .A_in_frame_sync(A_in_frame_sync),
    .A_in_serial_clk(A_in_serial_clk),
    .A_in_serial_data(A_in_serial_data),
    .B_in_frame_sync(B_in_frame_sync),
    .B_in_serial_clk(B_in_serial_clk),
    .B_in_serial_data(B_in_serial_data),
    .C_out_frame_sync(C_out_frame_sync),
    .C_out_serial_clk(C_out_serial_clk),
    .C_out_serial_data(C_out_serial_data),
    .clk(clk),
    .done(done),
    .rst_n(rst_n),
    .start(start)
  );
endmodule
